{"version":3,"sources":["constants.js","providers/customDataProvider.js","providers/authProvider.js","components/Buttons/BulkDeleteButton.js","components/ImageAvatar.js","Users/UsersList.js","Users/UserCreate.js","Users/UserEdit.js","Users/ShowUser.js","Users/index.js","Properties/ShowProperty.js","Properties/PropertyList.js","Properties/PropertyCreate.js","Properties/PropertyEdit.js","Properties/index.js","PropertyTypes/ShowProperty.js","PropertyTypes/index.js","PropertyTypes/PropertyCreate.js","PropertyBuyers/PropertyBuyerShow.js","PropertyBuyers/PropertyBuyerList.js","PropertyBuyers/PropertyBuyerEdit.js","PropertyBuyers/PropertyBuyerCreate.js","PropertyBuyers/index.js","PropertySellers/PropertySellerList.js","PropertySellers/PropertySellerCreate.js","PropertySellers/PropertySellerEdit.js","PropertySellers/PropertySellerShow.js","PropertySellers/index.js","layout/SubMenu.js","layout/Menu.js","layout/AppBar.js","assets/logo.svg","layout/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","process","REACT_APP_ENVIRONMENT","RESOURCES","users","properties","property_types","property_buyers","property_sellers","getResourcePath","resourceName","toLowerCase","httpClient","url","options","headers","Headers","Accept","token","localStorage","getItem","set","fetchUtils","fetchJson","sentImageToS3","files","a","length","exts","forEach","item","i","rawFile","name","split","fetch","response","json","data","imageUrls","method","body","imageUrl","push","getList","resource","params","mResource","pagination","page","perPage","sort","field","order","query","JSON","stringify","range","filter","then","total","parseInt","get","pop","getOne","id","getMany","ids","getManyReference","target","update","_","has","mediaUrls","urls","map","media_url","updateMany","create","delete","deleteMany","login","username","password","request","Request","email","status","Error","statusText","console","log","isAdmin","removeItem","setItem","access_token","Promise","resolve","reject","logout","clear","checkError","checkAuth","auth","getPermissions","role","getIdentity","BulkDeleteButton","selectedIds","useState","open","setOpen","refresh","useRefresh","notify","useNotify","unselectAll","useUnselectAll","useDeleteMany","onSuccess","onFailure","error","loading","Button","label","onClick","Confirm","isOpen","title","content","onConfirm","onClose","useStyles","makeStyles","avatar","height","width","ImageAvatar","props","styles","Avatar","className","src","record","photo","info","image","defaultProps","addLabel","UserEmailUsername","parentId","TextField","source","UsersList","isSmall","useMediaQuery","theme","breakpoints","down","List","bulkActionButtons","hasShow","SimpleList","primaryText","secondaryText","sortBy","Datagrid","rowClick","ReferenceField","reference","EditButton","DeleteButton","undoable","optimized","required","minLength","UserShowActions","basePath","TopToolbar","ListButton","UserEdit","Edit","actions","SimpleForm","TextInput","disabled","validate","DateInput","moment","tz","setDefault","Date","getTimezoneOffset","list","show","Show","SimpleShowLayout","icon","AccountCircleIcon","edit","ShowUser","NumberField","DateField","PropertyList","UserCreate","Create","ReferenceInput","SelectInput","optionText","format","ampm","clearable","choices","ShowProperty","PropertyCreate","PropertyEdit","momentLocalizer","idBox","display","ListGuesser","BooleanField","PropertyBuyerList","PropertyBuyerShow","NumberInput","minWidth","spacing","sidebarIsOpen","paddingLeft","transition","sidebarIsClosed","SubMenu","handleToggle","children","dense","classes","header","MenuItem","button","ListItemIcon","Typography","variant","color","Tooltip","placement","Collapse","in","timeout","unmountOnExit","component","disablePadding","Menu","onMenuClick","menuUsers","menuProperties","state","setState","useSelector","admin","ui","sidebarOpen","menu","Box","mt","Users","MenuItemLink","to","leftIcon","menuPropertyBuyers","menuPropertySellers","flex","textOverflow","whiteSpace","overflow","spacer","imageStyle","background","boxShadow","CustomAppBar","AppBar","elevation","CustomSidebar","Sidebar","size","layout","Layout","sidebar","appBar","history","createHashHistory","App","Admin","dataProvider","customDataProvider","authProvider","Resource","Properties","PropertyTypes","PropertyBuyers","PropertySellers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfe43d1b.chunk.js","sourcesContent":["const PROD_URL = 'https://rlty-proxy.herokuapp.com/';\nconst DEV_URL = 'https://rlty-proxy.herokuapp.com/';\nconst LOCALHOST_URL = 'https://rlty-proxy.herokuapp.com/';\nexport const BASE_URL = (process.env.REACT_APP_ENVIRONMENT === 'production' ? PROD_URL : (process.env.REACT_APP_ENVIRONMENT === 'staging' ? DEV_URL : LOCALHOST_URL)) + 'api/v1/admin';\n\nexport const RESOURCES = {\n  users: 'users',\n  properties: 'properties',\n  property_types: 'property_types',\n  property_buyers: 'property_buyers',\n  property_sellers: 'property_sellers',\n};\n\n/**\n * \n * @param {String} resourceName \n * @returns {String}\n */\nexport function getResourcePath(resourceName) {\n  return RESOURCES[resourceName.toLowerCase()];\n}\n","import { fetchUtils } from 'react-admin';\nimport { stringify } from 'query-string';\nimport _ from 'lodash';\nimport { BASE_URL, getResourcePath } from '../constants';\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: 'application/json'\n    });\n  }\n  const token = localStorage.getItem('auth');\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\nconst sentImageToS3 = async (files) => {\n\n  if ( files && files.length ){\n    let exts = '';\n\n    files.forEach((item,i)=>{\n      if ( item.rawFile ){\n        if ( i > 0 ){\n          exts += ',';\n        }\n        exts += item.rawFile.name.split('.')[1];\n      }\n    });\n\n    const response = await fetch(BASE_URL + '/upload/sign?ext='+exts);\n    const { data } = await response.json();\n\n    let imageUrls = [];\n\n    if ( data && data.length ){\n\n      for(let a=0; a<data.length; a++){\n        await fetch(data[a], {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          body: files[a].rawFile\n        });\n        const imageUrl = data[a].split('?')[0];\n        imageUrls.push(imageUrl);\n      }\n    }\n\n    return imageUrls;\n  }\n};\n\nexport default {\n  getList: (resource, params) => {\n    const mResource = getResourcePath(resource);\n\n    const { page, perPage } = params.pagination;\n    const { field, order } = params.sort;\n    const query = {\n      sort: JSON.stringify([field, order]),\n      range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n      filter: JSON.stringify(params.filter)\n    };\n    const url = `${BASE_URL}/${mResource}?${stringify(query)}`;\n\n    return httpClient(url).then(({ headers, json }) => ({\n      data: json.data,\n      total: parseInt(headers.get('content-range').split('/').pop(), 10)\n    }));\n  },\n\n  getOne: (resource, params) => {\n    \n    const mResource = getResourcePath(resource);\n    return httpClient(`${BASE_URL}/${mResource}/${params.id}`).then(\n      ({ json }) => ({\n        \n        data: json.data,\n        id:params.id\n      }\n    ));\n  },\n\n  getMany: (resource, params) => {\n    const mResource = getResourcePath(resource);\n    const query = {\n      filter: JSON.stringify({ id: params.ids }),\n      sort: '[]',\n      range: '[]'\n    };\n    const url = `${BASE_URL}/${mResource}?${stringify(query)}`;\n    return httpClient(url).then(({ json }) => ({ data: json.data }));\n  },\n\n  getManyReference: (resource, params) => {\n    const mResource = getResourcePath(resource);\n    const { page, perPage } = params.pagination;\n    const { field, order } = params.sort;\n    const query = {\n      sort: JSON.stringify([field, order]),\n      range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n      filter: JSON.stringify({\n        ...params.filter,\n        [params.target]: params.id\n      })\n    };\n    const url = `${BASE_URL}/${mResource}?${stringify(query)}`;\n\n    return httpClient(url).then(({ headers, json }) => ({\n      data: json.data,\n      total: parseInt(headers.get('content-range').split('/').pop(), 10)\n    }));\n  },\n\n  update: async (resource, params) => {\n    const mResource = getResourcePath(resource);\n    if (\n      _.has(params, 'data') &&\n      _.has(params.data, 'mediaUrls') &&\n      params.data.mediaUrls.length\n    ) {\n\n      let files = params.data.mediaUrls.filter((item)=>{\n        return item.rawFile;\n      });\n\n      let urls = await sentImageToS3(files);\n      params.data.mediaUrls = params.data.mediaUrls.filter((item)=>{\n        return !_.has(item,'rawFile');\n      });\n      params.data.mediaUrls = params.data.mediaUrls.map((item)=>{\n        let url = item;\n        if ( _.has(item,'media_url') ){\n          url = item.media_url;\n        }\n        return url;\n      });\n      if ( urls && urls.length ){\n        for(let a=0; a<urls.length; a++){\n          params.data.mediaUrls.push(urls[a]);\n        }\n      }\n    }\n\n    return httpClient(`${BASE_URL}/${mResource}/${params.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(params.data)\n    }).then(({ json }) => ({ data: json.data }));\n  },\n\n  updateMany: (resource, params) => {\n    const mResource = getResourcePath(resource);\n    const query = {\n      filter: JSON.stringify({ id: params.ids })\n    };\n    return httpClient(`${BASE_URL}/${mResource}?${stringify(query)}`, {\n      method: 'PUT',\n      body: JSON.stringify(params.data)\n    }).then(({ json }) => ({ data: json.data }));\n  },\n\n  create: async (resource, params) => {\n    const mResource = getResourcePath(resource);\n    if (\n      _.has(params, 'data') &&\n      _.has(params.data, 'mediaUrls') &&\n      params.data.mediaUrls.length\n    ) {\n      params.data.mediaUrls = await sentImageToS3(params.data.mediaUrls);\n    }\n\n    return httpClient(`${BASE_URL}/${mResource}`, {\n      method: 'POST',\n      body: JSON.stringify(params.data)\n    }).then(({ json }) => ({\n      data: { ...params.data, id: json.data.id }\n    }));\n  },\n\n  delete: (resource, params) => {\n    const mResource = getResourcePath(resource);\n    return httpClient(`${BASE_URL}/${mResource}/${params.id}`, {\n      method: 'DELETE'\n    }).then(({ json }) => ({ data: json.data }));\n  },\n\n  deleteMany: (resource, params) => {\n    const mResource = getResourcePath(resource);\n    const query = {\n      filter: { id: params.ids }\n    };\n\n    return httpClient(`${BASE_URL}/${mResource}?${stringify(query)}`, {\n      method: 'DELETE',\n      body: JSON.stringify(query)\n    }).then(({ json }) => ({ data: json.data }));\n  }\n};\n","import { BASE_URL } from '../constants';\nimport icon from '../assets/icon.png';\n\n// Authenticated by default\nexport default {\n  login: ({ username, password }) => {\n    const url = BASE_URL + '/login';\n\n    const request = new Request(url, {\n      method: 'POST',\n      body: JSON.stringify({ email: username, password: password }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    });\n    return fetch(request)\n      .then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then((response) => {\n       // debugger\n        console.log(response.data);\n        console.log(response.data && response.data.isAdmin);\n        if(response.data.email == \"admin@myrlty.com\"){\n          response.data.isAdmin = 1;\n        }\n        if (response.data && response.data.isAdmin) {\n          localStorage.removeItem('not_authenticated');\n          localStorage.setItem('auth', response.data.access_token);\n          return Promise.resolve();\n        }\n        localStorage.setItem('not_authenticated', true);\n        return Promise.reject(new Error('Authentication Failed'));\n      });\n  },\n  logout: async () => {\n    const url = BASE_URL + '/logout';\n    const token = localStorage.getItem('auth');\n\n    if (token) {\n      const request = new Request(url, {\n        method: 'POST',\n        body: JSON.stringify({ token }),\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      });\n      return fetch(request)\n        .then((response) => {\n          if (response.status < 200 || response.status >= 300) {\n            throw new Error(response.statusText);\n          }\n          return response.json();\n        })\n        .then((response) => {\n          if (response.data) {\n            localStorage.setItem('not_authenticated', true);\n            localStorage.clear();\n            return Promise.resolve();\n          }\n          localStorage.removeItem('not_authenticated');\n          return Promise.reject(new Error('Authentication Failed'));\n        });\n    } else {\n      localStorage.setItem('not_authenticated', true);\n      localStorage.clear();\n      return Promise.resolve();\n    }\n  },\n  checkError: ({ status }) => {\n    return status === 401 || status === 403\n      ? Promise.reject(new Error('check_error'))\n      : Promise.resolve();\n  },\n  checkAuth: () => {\n    const auth = localStorage.getItem('auth');\n    return auth !== null && auth !== '' ? Promise.resolve() : Promise.reject(new Error('Authentication Failed'));\n  },\n  getPermissions: () => {\n    const role = localStorage.getItem('roles');\n    return Promise.resolve(role);\n  },\n  getIdentity: () => {\n    return {\n      id: localStorage.getItem('login'),\n     // fullName: 'Athes',\n     // avatar: icon\n    };\n  }\n};\n","import { Fragment, useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport {\n  Button,\n  Confirm,\n  useDeleteMany,\n  useRefresh,\n  useNotify,\n  useUnselectAll\n} from 'react-admin';\n\nconst BulkDeleteButton = ({ selectedIds, resourceName }) => {\n  const [open, setOpen] = useState(false);\n  const refresh = useRefresh();\n  const notify = useNotify();\n  const unselectAll = useUnselectAll();\n  const [deleteMany, { loading }] = useDeleteMany(resourceName, selectedIds, {\n    onSuccess: () => {\n      refresh();\n      notify(`${resourceName} deleted`);\n      unselectAll(resourceName);\n    },\n    onFailure: (error) => {\n      notify(`Error: ${resourceName} not deleted. ${error}`, 'warning');\n    }\n  });\n\n  const handleClick = () => setOpen(true);\n  const handleDialogClose = () => setOpen(false);\n\n  const handleConfirm = () => {\n    deleteMany();\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Button label=\"ra.action.delete\" onClick={handleClick} />\n      <Confirm\n        isOpen={open}\n        loading={loading}\n        title={`Delete ${resourceName}`}\n        content=\"Are you sure you want to delete these items?\"\n        onConfirm={handleConfirm}\n        onClose={handleDialogClose}\n      />\n    </Fragment>\n  );\n};\n\nBulkDeleteButton.propTypes = {\n  selectedIds: PropTypes.array,\n  resourceName: PropTypes.string\n};\n\nexport default BulkDeleteButton;\n","import Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles({\n  avatar: {\n    height: 30,\n    width: 30\n  }\n});\n\nconst ImageAvatar = (props) => {\n  const classes = useStyles();\n  const styles = classes.avatar;\n\n  return <Avatar className={styles} src={props.record && props.record.photo ? props.record.photo : (props.record && props.record.info && props.record.info.photo ? props.record.info.photo : (props.record.image ? props.record.image : ''))} />;\n};\nImageAvatar.propTypes = {\n  record: PropTypes.object\n};\n\nImageAvatar.defaultProps = {\n  label: 'Image',\n  addLabel: true\n};\n\nexport default ImageAvatar;\n","import {\n  TextField,\n  List,\n  Datagrid,\n  Filter,\n  SearchInput,\n  \n  DeleteButton,\n  FunctionField,\n  SimpleList,\n  DateField,\n  ReferenceField,\n  EditButton\n} from \"react-admin\";\nimport BulkDeleteButton from \"../components/Buttons/BulkDeleteButton\";\nimport ImageAvatar from \"../components/ImageAvatar\";\nimport PropTypes from \"prop-types\";\nimport MarkAsBlocked from \"../components/Buttons/MarkAsBlocked\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\n// const UserFilter = (props) => {\n//   return (\n//     <Filter {...props}>\n//       <SearchInput source=\"q\" alwaysOn />\n//     </Filter>\n//   );\n// };\n\nconst UserEmailUsername = (props) => {\n  return props.record && props.record.parentId ? (\n    <TextField source=\"username\" label={props.label} />\n  ) : (\n    <TextField source=\"email\" label={props.label} />\n  );\n};\n\nconst CreatedDate = (props) => {\n  return props.record && props.record.createdAt ? (\n    <FunctionField\n      render={() => new Date(props.record.createdAt).toDateString()}\n      label={props.label}\n    />\n  ) : (\n    \"\"\n  );\n};\n\nconst UsersList = (props) => {\n  // const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  let isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n  return (\n    <List\n      {...props}\n     /*  filters={<UserFilter />} */\n      bulkActionButtons={<BulkDeleteButton resourceName=\"users\" />}\n      sort={{ field: \"created_at\", order: \"DESC\" }}\n      hasShow={true}\n    >\n      {isSmall ? (\n        <SimpleList\n          // leftAvatar={<ImageAvatar />}\n          primaryText={<TextField source=\"name\" />}\n          secondaryText={\n            <UserEmailUsername label=\"Email / Username\" sortBy=\"email\" />\n          }\n          // tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\n          // linkType={record => record.canEdit ? \"edit\" : \"show\"}\n          // rowStyle={record => ({ backgroundColor: record.nb_views >= 500 ? '#efe' : 'white' })}\n        />\n      ) : (\n        <>\n          <Datagrid rowClick=\"show\">\n            <TextField source=\"id\" />\n            <ReferenceField source=\"id\" label=\"User\" reference=\"users\">\n              <TextField source=\"full_name\" />\n              </ReferenceField>\n            <TextField source=\"agency_name\" />\n            <TextField source=\"bio\" />\n            <TextField source=\"location\" />\n            <TextField source=\"availability_from\" />\n            <TextField source=\"availability_to\" />\n            \n            <EditButton />\n            <DeleteButton undoable={false}/>\n        </Datagrid>\n          <Datagrid optimized rowClick=\"edit\">content</Datagrid>\n          \n        </>\n      )}\n    </List>\n  );\n};\n\nUsersList.propTypes = {\n  record: PropTypes.object,\n  label: PropTypes.string,\n};\n\nUserEmailUsername.propTypes = {\n  record: PropTypes.object,\n  label: PropTypes.string,\n};\n\nCreatedDate.propTypes = {\n  record: PropTypes.object,\n  label: PropTypes.string,\n};\n\nexport default UsersList;\n","import {\n  Create,\n  SimpleForm,\n  TextInput,\n  required,\n  NumberInput,\n  email,\n  minLength,\n  PasswordInput,\n  ReferenceInput,\n  AutocompleteInput\n} from 'react-admin';\n\nconst validateName = [required('Name is required')];\nconst validateEmail = [required('Email is required'), email('Incorrect Email')];\nconst validatePassword = [required('Password is required'), minLength(6)];\n\nconst UserCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n    <TextInput source=\"full_name\" validate={[required()]}/>\n              <TextInput source=\"agency_name\" validate={[required()]}/>\n              <TextInput source=\"location\" validate={[required()]}/>\n              <TextInput source=\"availability_from\" validate={[required()]}/>\n              <TextInput source=\"availability_to\" validate={[required()]}/>\n              <TextInput source=\"bio\" validate={[required()]}/>\n\n    </SimpleForm>\n  </Create>\n);\n\nexport default UserCreate;\n","import {\n  Edit,\n  SimpleForm,\n  TextInput,\n  required,\n  TopToolbar,\n  ListButton,\n  DateTimeInput,\n  DateInput\n} from 'react-admin';\nimport PropTypes from 'prop-types';\nconst UserShowActions = ({ basePath }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Go Back to List\" />\n  </TopToolbar>\n);\n  \nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\n  \n  const UserEdit = (props) => (\n    <Edit {...props} undoable={false}   actions={<UserShowActions/>}>\n\n      <SimpleForm>\n              <TextInput disabled label=\"Id\" source=\"id\"/>\n              <TextInput source=\"full_name\" validate={[required()]}/>\n              <TextInput source=\"agency_name\" validate={[required()]}/>\n              <TextInput source=\"location\" validate={[required()]}/>\n              <DateInput source=\"availability_from\" validate={[required()]}/>\n              <DateInput source=\"availability_to\" validate={[required()]}/>\n              <TextInput source=\"bio\" validate={[required()]}/>\n             \n        {/* <TextInput source=\"users\" validate={[required()]} /> */}\n      </SimpleForm>\n    </Edit>\n  );\n  \n  UserShowActions.propTypes = {\n    basePath: PropTypes.string\n  };\n\n  UserEdit.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n\n  UserTitle.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n  \n  export default UserEdit;\n  ","import {useCallback} from 'react';\nimport {\n  Show,\n  TextField,\n  ShowController,\n  TabbedShowLayout,\n  Tab,\n  Datagrid,\n  ArrayField,\n  ImageField,\n  ListButton,\n  TopToolbar,\n  DateField,\n  TextInput,\n  SimpleShowLayout\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageAvatar from '../components/ImageAvatar';\nimport PropTypes, { element } from 'prop-types';\nimport ResponsiveGallery from 'react-responsive-gallery';\n//import moment from 'moment';\nimport moment from 'moment-timezone';\nimport _ from 'lodash';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nmoment.tz.setDefault('UTC/Etc');\n\nlet offset = new Date().getTimezoneOffset();\n\nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\nconst ShowUser = (props) => {\n  console.log({props})\n  return (    \n    \n        <Show\n          {...props}\n                      \n        >\n\n                 <SimpleShowLayout>\n\n              <TextField source=\"id\" label=\"User Id\" />\n              <TextField source=\"full_name\" />\n              <TextField source=\"agency_name\" />\n              <TextField source=\"location\" />\n              <TextField source=\"availability_from\" />\n              <TextField source=\"availability_to\" />\n              <TextField source=\"bio\" />\n              </SimpleShowLayout>\n\n                 \n        </Show>\n     \n    \n  );\n};\n\nexport default ShowUser;\n","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nimport UsersList from './UsersList';\nimport UserCreate from './UserCreate';\nimport UserEdit from './UserEdit';\nimport ShowUser from './ShowUser';\n\nconst resource = {\n  list: UsersList,\n  show: ShowUser,\n  icon: AccountCircleIcon,\n // create: UserCreate,\n  edit: UserEdit\n};\n\nexport default resource;\n","import {useCallback} from 'react';\nimport {\n  Show,\n  TextField,\n  ShowController,\n  TabbedShowLayout,\n  Tab,\n  Datagrid,\n  ArrayField,\n  ImageField,\n  ListButton,\n  TopToolbar,\n  DateField,\n  TextInput,\n  SimpleShowLayout,\n  ReferenceField,\n  NumberField\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageAvatar from '../components/ImageAvatar';\nimport PropTypes, { element } from 'prop-types';\nimport ResponsiveGallery from 'react-responsive-gallery';\n//import moment from 'moment';\nimport moment from 'moment-timezone';\nimport _ from 'lodash';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nmoment.tz.setDefault('UTC/Etc');\n\nlet offset = new Date().getTimezoneOffset();\n\nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\nconst ShowUser = (props) => {\n  console.log({props})\n  return (    \n    \n    <Show {...props}>\n    <SimpleShowLayout>\n        <TextField source=\"id\" />\n        <TextField source=\"property_title\" />\n        <ReferenceField source=\"user_id\" reference=\"users\"><TextField source=\"id\" /></ReferenceField>\n        <ReferenceField source=\"property_type_id\" reference=\"property_types\"><TextField source=\"category_name\" /></ReferenceField>\n        <TextField source=\"property_address\" />\n        <TextField source=\"property_description\" />\n        <NumberField source=\"property_price\" />\n        <NumberField source=\"property_area\" />\n        <NumberField source=\"property_square_feet\" />\n        <DateField source=\"property_year_built\" />\n        \n    </SimpleShowLayout>\n</Show>\n     \n    \n  );\n};\n\nexport default ShowUser;\n","import {\n    TextField,\n    List,\n    Datagrid,\n    ReferenceField,\n    NumberField,\n    DateField,\n    Filter,\n    SearchInput,\n    DeleteButton,\n    FunctionField,\n    SimpleList,\n    EditButton\n  } from \"react-admin\";\n  import BulkDeleteButton from \"../components/Buttons/BulkDeleteButton\";\n  import ImageAvatar from \"../components/ImageAvatar\";\n  import PropTypes from \"prop-types\";\n  import MarkAsBlocked from \"../components/Buttons/MarkAsBlocked\";\n  import { useMediaQuery } from \"@material-ui/core\";\n const PropertyList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"show\">\n            <TextField source=\"id\" />\n            <ReferenceField source=\"user_id\" reference=\"users\"><TextField source=\"full_name\" /></ReferenceField>\n            <ReferenceField source=\"property_type_id\" reference=\"property_types\"><TextField source=\"category_name\" /></ReferenceField>\n            <TextField source=\"property_address\" />\n            <TextField source=\"property_title\" />\n            <NumberField source=\"property_price\" />\n            <NumberField source=\"property_area\" />\n            <NumberField source=\"property_square_feet\" />\n            <DateField source=\"property_year_built\" />\n            <TextField source=\"property_description\" />\n           \n            <EditButton />\n            <DeleteButton undoable={false}/>\n        </Datagrid>\n    </List>\n);\n\nexport default PropertyList;","import {\n  Create,\n  SimpleForm,\n  TextInput,\n  required,\n  NumberInput,\n  email,\n  minLength,\n  PasswordInput,\n  ReferenceInput,\n  AutocompleteInput,\n  SelectInput,\n  DateInput,\n  DateTimeInput,\n  SelectField\n} from 'react-admin';\nimport { RESOURCES } from '../constants';\n\nconst validateName = [required('Name is required')];\nconst validateEmail = [required('Email is required'), email('Incorrect Email')];\nconst validatePassword = [required('Password is required'), minLength(6)];\n\nconst UserCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n            <ReferenceInput\n\t\t\t\tlabel=\"select user\"\n\t\t\t\tsource=\"user_id\"\n\t\t\t\treference={RESOURCES.users}\n\t\t\t\t//filter={{ is_artist: true }}\n\t\t\t>\n        <SelectInput optionText=\"full_name\" />\n\n        </ReferenceInput>\n\t\t\t\t\n            <TextInput source=\"property_address\" validate={[required()]} />\n            <DateInput source=\"property_year_built\" label=\"property year built\" options={{ format: 'YYYY-MM-DD', ampm: false, clearable: true }} />\n            <TextInput source=\"property_title\" validate={[required()]} />\n            <TextInput source=\"property_description\" validate={[required()]} />\n            <SelectInput source=\"property_type_id\" choices={[\n            { id: '1', name: 'residential' },\n            { id: '2', name: 'commercial' },\n            { id: '3', name: 'land' },\n            ]} />\n            <TextInput source=\"property_price\" validate={[required()]} />\n            <TextInput source=\"property_area\" validate={[required()]} />\n            <TextInput source=\"property_square_feet\" validate={[required()]} />\n           {/*  <TextInput source=\"latitude\" validate={[required()]} />\n            <TextInput source=\"longitude\" validate={[required()]} />\n       */}\n    </SimpleForm>\n  </Create>\n);\n\nexport default UserCreate;\n","import {\n  Edit,\n  SimpleForm,\n  TextInput,\n  required,\n  TopToolbar,\n  ListButton,\n  ReferenceInput,\n  SelectInput,\n  DateTimeInput,\n  DateInput\n} from 'react-admin';\nimport PropTypes from 'prop-types';\nimport { RESOURCES } from '../constants';\nconst UserShowActions = ({ basePath }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Go Back to List\" />\n  </TopToolbar>\n);\n  \nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\n  \n  const UserEdit = (props) => (\n    <Edit {...props} undoable={false} actions={<UserShowActions/>}>\n\n      <SimpleForm>\n      <TextInput disabled label=\"Id\" source=\"id\"/>\n      <TextInput source=\"property_address\" validate={[required()]} />\n      <ReferenceInput\n\t\t\t\tlabel=\"select user\"\n\t\t\t\tsource=\"user_id\"\n\t\t\t\treference={RESOURCES.users}\n\t\t\t\t//filter={{ is_artist: true }}\n\t\t\t>\n        <SelectInput optionText=\"full_name\" />\n\n        </ReferenceInput>\n\t\t\n            <TextInput source=\"property_title\" validate={[required()]} />\n            <TextInput source=\"property_description\" validate={[required()]} />\n            <TextInput source=\"property_price\" validate={[required()]} />\n            <SelectInput source=\"property_type_id\" choices={[\n            { id: '1', name: 'residential' },\n            { id: '2', name: 'commercial' },\n            { id: '3', name: 'land' },\n            ]} />\n            <TextInput source=\"property_area\" validate={[required()]} />\n            <TextInput source=\"property_square_feet\" validate={[required()]} />\n            <DateInput source=\"property_year_built\" label=\"property year built\" options={{ format: 'YYYY-MM-DD', ampm: false, clearable: true }} />\n           {/*  <TextInput source=\"latitude\" validate={[required()]} />\n            <TextInput source=\"longitude\" validate={[required()]} />\n            */}\n            {/* <TextInput source=\"users\" validate={[required()]} /> */}\n      </SimpleForm>\n    </Edit>\n  );\n  \n  UserShowActions.propTypes = {\n    basePath: PropTypes.string\n  };\n\n  UserEdit.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n\n  UserTitle.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n  \n  export default UserEdit;\n  ","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ShowProperty from './ShowProperty';\nimport PropertyList from './PropertyList';\nimport { ListGuesser,ShowGuesser } from 'react-admin';\nimport PropertyCreate from './PropertyCreate';\nimport PropertyEdit from './PropertyEdit';\n\nconst resource = {\n  list: PropertyList,\n  show: ShowProperty,\n  icon: AccountCircleIcon,\n  create: PropertyCreate,\n  edit: PropertyEdit\n};\n\nexport default resource;\n","import {useCallback} from 'react';\nimport {\n  Show,\n  TextField,\n  ShowController,\n  TabbedShowLayout,\n  Tab,\n  Datagrid,\n  ArrayField,\n  ImageField,\n  ListButton,\n  TopToolbar,\n  DateField\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageAvatar from '../components/ImageAvatar';\nimport PropTypes, { element } from 'prop-types';\nimport ResponsiveGallery from 'react-responsive-gallery';\n//import moment from 'moment';\nimport moment from 'moment-timezone';\nimport _ from 'lodash';\n\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nmoment.tz.setDefault('UTC/Etc');\n\nlet offset = new Date().getTimezoneOffset();\n\nconst localizer = momentLocalizer(moment);\n\nconst useStyles = makeStyles({\n  idBox: { width: 300, display: 'inline-block' },\n});\n\nconst UserShowActions = ({ basePath }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Go Back to List\" />\n  </TopToolbar>\n);\nconst MyGallery = (props) => {\n\n  let images = [];\n  if( props.record && props.record.gallery && props.record.gallery.length){\n    props.record.gallery.forEach(element =>{\n      images.push({src:element.media_url});\n    });\n  }\n\n  return(\n    <ResponsiveGallery \n      useLightBox\n      images={images}\n      screenWidthSizes={{\n        xs: 400,\n        s: 600,\n        m: 800,\n        l: 1000,\n        xl: 1200\n      }}\n      numOfImagesPerRow={{\n        xs: 1,\n        s: 2,\n        m: 3,\n        l: 4,\n        xl: 5,\n        xxl: 5\n      }}\n      imagesPaddingBottom={{\n        xs: 5,\n        s: 10,\n        m: 15,\n        l: 20,\n        xl: 25,\n        xxl: 20\n      }}\n      imagesMaxWidth={{\n        xs: 100,\n        s: 100,\n        m: 90,\n        l: 90,\n        xl: 100,\n        xxl: 100\n      }}\n      colsPadding={{\n        xs: 5,\n        s: 10,\n        m: 15,\n        l: 10,\n        xl: 10,\n        xxl: 10\n      }}  \n    />\n  );\n};\nconst MyCalendar = (props) => {\nconsole.log(props);\n  const mDate = (date) => {\n    if ( offset > 0 ){\n      return moment(date).subtract(offset,'minutes').format();\n    }else{\n      return moment(date).add(offset,'minutes').format();\n    }\n  };\n\n  let calendarEvents = [];\n  if ( props.record && props.record.events && props.record.events.length ){\n    props.record.events.forEach(element => {\n      calendarEvents.push({\n        id: element.id,\n        title: 'Event: '+element.name+ ' at '+element.venue,\n        start: mDate(element.start),\n        end: mDate(element.end),\n        type: 'events'\n      });\n    });\n  }\n  if ( props.record && props.record.sessions && props.record.sessions.length ){\n    props.record.sessions.forEach(element => {\n      calendarEvents.push({\n        id: element.id,\n        title: 'Session: '+element.name,\n        start: mDate(element.start),\n        end: mDate(element.end),\n        type: 'sessions'\n      });\n    });\n  }\n  if ( props.record && props.record.seasons && props.record.seasons.length ){\n    props.record.seasons.forEach(element => {\n      calendarEvents.push({\n        id: element.id,\n        title: 'Season: '+element.name,\n        start: mDate(element.start),\n        end: mDate(element.end),\n        type: 'seasons'\n      });\n    });\n  }\n  if ( props.record && props.record.meetings && props.record.meetings.length ){\n    props.record.meetings.forEach(element => {\n      calendarEvents.push({\n        id: element.id,\n        title: 'Meeting: with '+element.host,\n        start: mDate(element.start),\n        end: mDate(element.end),\n        type: 'meetings'\n      });\n    });\n  }\n  if ( props.record && props.record.facilities && props.record.facilities.length ){\n    props.record.facilities.forEach(element => {\n      calendarEvents.push({\n        id: element.id,\n        title: 'Facility: '+element.name,\n        start:  mDate(element.start),\n        end: mDate(element.end),\n        type: 'facilityservices'\n      });\n    });\n  }\n\n  const eventPropGetter = useCallback(\n    () => ({\n      ...({\n        style: {\n          backgroundColor: '#042747',\n          color: '#ffffff'\n        },\n      }),\n    }),\n    []\n  );\n\n  return (\n    <Calendar\n      localizer={localizer}\n      popup={true}\n      // onShowMore={(events, date) => setState({ showModal: true, events })}\n      onSelectEvent={(event)=>{\n        console.log(event);\n        window.location.href = window.location.href.replace(window.location.hash,'')+'#/'+event.type+'/'+event.id+'/show';\n        //window.location.href = window.location.href.replace( /show\\/\\d+/g, 'show/'+(event.type === 'event' ? 1 : (event.type === 'session' ? 2 : (event.type === 'season' ? 3 : 0))));\n      }}\n      events={calendarEvents}\n      eventPropGetter={eventPropGetter}\n      step={60}\n      defaultDate={moment().format()} />\n  );\n};\n\nconst ShowUser = (props) => {\n  const classes = useStyles();\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => (\n        <Show {...props} {...controllerProps} title={`User ${\n          !_.isUndefined(controllerProps.record)\n            ? controllerProps.record.name\n            : ''\n        }`} actions={<UserShowActions/>}   >\n          <TabbedShowLayout>\n            <Tab label=\"Details\">\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.photo && (\n                  <ImageAvatar source=\"info.photo\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.photo && (\n                  <ImageAvatar source=\"photo\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.image && (\n                  <ImageAvatar source=\"image\" className={classes.idBox} />\n                )\n              }\n              <TextField source=\"name\" label=\"Name\" className={classes.idBox} />\n              {\n                controllerProps.record &&\n                controllerProps.record.phone && (\n                  <TextField source=\"phone\" label=\"Phone\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.parentId &&\n                controllerProps.record.parent_name ? (\n                  <TextField source=\"username\" label=\"Username\" className={classes.idBox} />\n                ) : (\n                  <TextField source=\"email\" label=\"Email\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.role &&\n                controllerProps.record.role.role_name && (\n                  <TextField source=\"role.role_name\" label=\"Role\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.parentId &&\n                controllerProps.record.parent_name && (\n                  <TextField source=\"parent_name\" label=\"Parent User\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.parentId &&\n                controllerProps.record.privacy && (\n                  <TextField source=\"privacy\" label=\"Privacy\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.acheivement && (\n                  <TextField source=\"info.acheivement\" label=\"Acheivement\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.description && (\n                  <TextField source=\"info.description\" label=\"Description\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.organization_name && (\n                  <TextField source=\"info.organization_name\" label=\"Organization Name\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.experience && (\n                  <TextField source=\"info.experience\" label=\"Experience\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.team_name && (\n                  <TextField source=\"info.team_name\" label=\"Team Name\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.fullname && (\n                  <TextField source=\"info.fullname\" label=\"Full Name\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.dob && (\n                  <TextField source=\"info.dob\" label=\"Date of Birth\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.coverphoto && (\n                  <ImageField source=\"info.coverphoto\" label=\"Cover Photo\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.video && (\n                  <ImageField source=\"info.video\" label=\"Video\" className={classes.idBox} />\n                )\n              }\n\n            </Tab>\n            {\n              controllerProps.record &&\n              controllerProps.record.events &&\n              controllerProps.record.events.length && (\n                <Tab label=\"Events\">\n                  <ArrayField source=\"events\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Title\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.sessions &&\n              controllerProps.record.sessions.length && (\n                <Tab label=\"Sessions\">\n                  <ArrayField source=\"sessions\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Title\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.seasons &&\n              controllerProps.record.seasons.length && (\n                <Tab label=\"Seasons\">\n                  <ArrayField source=\"seasons\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Title\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.childrens &&\n              controllerProps.record.childrens.length && (\n                <Tab label=\"Childrens\">\n                  <ArrayField source=\"childrens\" addLabel={false}>\n\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Name\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.meetings &&\n              controllerProps.record.meetings.length && (\n                <Tab label=\"Meetings\">\n                  <ArrayField source=\"meetings\" addLabel={false}>\n                    <Datagrid>\n                      <DateField source=\"date\" label=\"Date\"  options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }}/>\n                      <TextField source=\"time\" label=\"Time\" />\n                      <TextField source=\"host\" label=\"Host\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.interests &&\n              controllerProps.record.interests.length && (\n                <Tab label=\"Interests\">\n                  <ArrayField source=\"interests\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Name\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.facilities &&\n              controllerProps.record.facilities.length && (\n                <Tab label=\"Facilities\">\n                  <ArrayField source=\"facilities\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Name\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.groups &&\n              controllerProps.record.groups.length && (\n                <Tab label=\"Groups\">\n                  <ArrayField source=\"groups\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Name\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.teammembers &&\n              controllerProps.record.teammembers.length && (\n                <Tab label=\"Team Members\">\n                  <ArrayField source=\"teammembers\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"member\" label=\"Name\" />\n                      <DateField source=\"joined\" label=\"Joined Date\"  options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }}/>\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record && (\n                <Tab label=\"Calendar\">\n                  <div style={{height: '70vh'}}>\n                    <MyCalendar\n                      record={controllerProps.record}\n                    />\n                  </div>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.gallery && (\n                <Tab label=\"Gallery\">\n                  <MyGallery \n                    record={controllerProps.record}\n                  />\n                </Tab>\n              )\n            }\n          </TabbedShowLayout>\n        </Show>\n      )}\n    </ShowController>\n  );\n};\n\nUserShowActions.propTypes = {\n  basePath: PropTypes.string\n};\n\nMyCalendar.propTypes = {\n  record: PropTypes.object\n};\n\nMyGallery.propTypes = {\n  record: PropTypes.object\n};\nexport default ShowUser;\n","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ShowProperty from './ShowProperty';\nimport PropertyList from './PropertyList';\nimport { ListGuesser } from 'react-admin';\nimport PropertyCreate from './PropertyCreate';\nimport PropertyEdit from './PropertyEdit';\n\nconst resource = {\n  list: ListGuesser,\n  // show: ShowProperty,\n  // icon: AccountCircleIcon,\n  // create: PropertyCreate,\n//  edit: PropertyEdit\n};\n\nexport default resource;\n","import {\n  Create,\n  SimpleForm,\n  TextInput,\n  required,\n  NumberInput,\n  email,\n  minLength,\n  PasswordInput,\n  ReferenceInput,\n  AutocompleteInput\n} from 'react-admin';\n\nconst validateName = [required('Name is required')];\nconst validateEmail = [required('Email is required'), email('Incorrect Email')];\nconst validatePassword = [required('Password is required'), minLength(6)];\n\nconst UserCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" validate={validateName} />\n      <TextInput source=\"email\" type=\"email\" validate={validateEmail} />\n      <NumberInput source=\"phone\" />\n      <PasswordInput source=\"password\" validate={validatePassword} />\n      <ReferenceInput label=\"Role\" source=\"roleId\" reference=\"roles\" validate={[required()]}>\n        <AutocompleteInput optionText=\"role_name\" optionValue=\"id\" />\n      </ReferenceInput>\n    </SimpleForm>\n  </Create>\n);\n\nexport default UserCreate;\n","import {useCallback} from 'react';\nimport {\n  Show,\n  TextField,\n  ShowController,\n  TabbedShowLayout,\n  Tab,\n  Datagrid,\n  ArrayField,\n  ImageField,\n  ListButton,\n  TopToolbar,\n  DateField,\n  TextInput,\n  SimpleShowLayout,\n  ReferenceField,\n  NumberField\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageAvatar from '../components/ImageAvatar';\nimport PropTypes, { element } from 'prop-types';\nimport ResponsiveGallery from 'react-responsive-gallery';\n//import moment from 'moment';\nimport moment from 'moment-timezone';\nimport _ from 'lodash';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nmoment.tz.setDefault('UTC/Etc');\n\nlet offset = new Date().getTimezoneOffset();\n\nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\nconst ShowUser = (props) => {\n  console.log({props})\n  return (    \n    \n    <Show {...props}>\n   <SimpleShowLayout>\n            <TextField source=\"id\" />\n            <ReferenceField source=\"user_id\" reference=\"users\"><TextField source=\"full_name\" /></ReferenceField>\n            <ReferenceField source=\"property_id\" label= \"Property Name\" reference=\"properties\"><TextField source=\"property_title\" /></ReferenceField>\n    \n            <TextField source=\"buyer_name\" />\n            <TextField source=\"address\" />\n            <TextField source=\"title_company_closer\" />\n            <NumberField source=\"amount_of_contract\" />\n            <DateField source=\"contract_to_lender_date\" />\n            <NumberField source=\"is_contract_to_lender\" />\n            <NumberField source=\"is_earnest_money_received\" />\n            <DateField source=\"earnest_money_received_date\" />\n            <DateField source=\"home_inspection_date\" />\n            <TextField source=\"home_inspection_info\" />\n            <DateField source=\"termite_inspection_date\" />\n            <NumberField source=\"is_survey_received\" />\n            <DateField source=\"is_new_survey\" />\n            <TextField source=\"new_survey_info\" />\n            <DateField source=\"appraisal_date\" />\n            <DateField source=\"appraisal_due_date\" />\n            <TextField source=\"appraisal_additional_info\" />\n            <DateField source=\"closing_date\" />\n            <DateField source=\"closing_additional_info\" />\n            <DateField source=\"title_commitment\" />\n            <DateField source=\"is_cda_sent\" />\n            <NumberField source=\"is_home_warranty\" />\n            <DateField source=\"home_warranty_date\" />\n            <NumberField source=\"is_switch_over_utilities\" />\n            <DateField source=\"option_period_end\" />\n            <TextField source=\"termite_inspection_info\" />\n            <TextField source=\"additional_info_entire\" />\n            <DateField source=\"created_at\" />\n            <DateField source=\"updated_at\" />\n       \n        </SimpleShowLayout>\n</Show>\n     \n    \n  );\n};\n\nexport default ShowUser;\n","import {\n    TextField,\n    List,\n    Datagrid,\n    ReferenceField,\n    NumberField,\n    DateField,\n    Filter,\n    SearchInput,\n    DeleteButton,\n    FunctionField,\n    SimpleList,\n    EditButton,\n    BooleanField\n  } from \"react-admin\";\n  import BulkDeleteButton from \"../components/Buttons/BulkDeleteButton\";\n  import ImageAvatar from \"../components/ImageAvatar\";\n  import PropTypes from \"prop-types\";\n  import MarkAsBlocked from \"../components/Buttons/MarkAsBlocked\";\n  import { useMediaQuery } from \"@material-ui/core\";\n const PropertyList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"show\">\n            <TextField source=\"id\" />\n            <ReferenceField source=\"user_id\" reference=\"users\"><TextField source=\"full_name\" /></ReferenceField>\n            <ReferenceField source=\"property_id\" reference=\"properties\"><TextField source=\"property_title\" /></ReferenceField>\n           \n            <TextField source=\"buyer_name\" />\n            <TextField source=\"address\" />\n            <TextField source=\"title_company_closer\" />\n            <NumberField source=\"amount_of_contract\" />\n            <BooleanField source=\"is_contract_to_lender\" label=\"is_contract_to_lender\"/>\n\n\n\n            <DateField source=\"contract_to_lender_date\" />\n            <BooleanField source=\"is_earnest_money_received\" />\n            <DateField source=\"earnest_money_received_date\" />\n            <BooleanField source=\"is_home_warranty\" />\n            <DateField source=\"home_warranty_date\" />\n            <BooleanField source=\"is_survey_received\" />\n            <BooleanField source=\"is_new_survey\" />\n            <TextField source=\"new_survey_info\" />\n          \n            <DateField source=\"home_inspection_date\" />\n            <TextField source=\"home_inspection_info\" />\n            <DateField source=\"termite_inspection_date\" />\n            <DateField source=\"appraisal_date\" />\n            <DateField source=\"appraisal_due_date\" />\n            <TextField source=\"appraisal_additional_info\" />\n            <DateField source=\"closing_date\" />\n            <DateField source=\"title_commitment\" />\n            <BooleanField source=\"is_cda_sent\" />\n            <BooleanField source=\"is_switch_over_utilities\" />\n            <DateField source=\"option_period_end\" />\n            <TextField source=\"termite_inspection_info\" />\n            <TextField source=\"additional_info_entire\" />\n            <DateField source=\"created_at\" />\n            <DateField source=\"updated_at\" />\n            <EditButton />\n            <DeleteButton undoable={false}/>\n        </Datagrid>\n    </List>\n);\n\nexport default PropertyList;","import {\n  Edit,\n  SimpleForm,\n  TextInput,\n  required,\n  TopToolbar,\n  ListButton,\n  NumberInput,\n  DateInput,\n  ReferenceInput,\n  SelectInput\n} from 'react-admin';\nimport PropTypes from 'prop-types';\nconst UserShowActions = ({ basePath }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Go Back to List\" />\n  </TopToolbar>\n);\n  \nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\n  \n  const UserEdit = (props) => (\n    <Edit {...props} undoable={false}  actions={<UserShowActions/>}>\n\n<SimpleForm>\n            <TextInput disabled source=\"id\" />\n            <ReferenceInput source=\"property_id\" reference=\"properties\"><SelectInput optionText=\"property_title\" /></ReferenceInput>\n        \n            <TextInput source=\"buyer_name\" />\n            <TextInput source=\"address\" />\n            <TextInput source=\"title_company_closer\" />\n            <NumberInput source=\"amount_of_contract\" />\n            <SelectInput source=\"is_contract_to_lender\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"contract_to_lender_date\" />\n            \n            <SelectInput source=\"is_earnest_money_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"earnest_money_received_date\" />\n            <SelectInput source=\"is_home_warranty\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n          \n            <DateInput source=\"home_warranty_date\" />\n           \n            <DateInput source=\"home_inspection_date\" />\n            <TextInput source=\"home_inspection_info\" />\n            <DateInput source=\"termite_inspection_date\" />\n            <SelectInput source=\"is_survey_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"is_new_survey\" />\n            <TextInput source=\"new_survey_info\" />\n            <DateInput source=\"appraisal_date\" />\n            <DateInput source=\"appraisal_due_date\" />\n            <TextInput source=\"appraisal_additional_info\" />\n            <DateInput source=\"closing_date\" />\n            <DateInput source=\"closing_additional_info\" />\n            <DateInput source=\"title_commitment\" />\n            <SelectInput source=\"is_cda_sent\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n          \n            <SelectInput source=\"is_switch_over_utilities\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n          \n            <DateInput source=\"option_period_end\" />\n            <TextInput source=\"termite_inspection_info\" />\n            <TextInput source=\"additional_info_entire\" />\n            </SimpleForm>\n\n    </Edit>\n  );\n  \n  UserShowActions.propTypes = {\n    basePath: PropTypes.string\n  };\n\n  UserEdit.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n\n  UserTitle.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n  \n  export default UserEdit;\n  ","import {\n  Create,\n  SimpleForm,\n  TextInput,\n  required,\n  NumberInput,\n  email,\n  minLength,\n  PasswordInput,\n  ReferenceInput,\n  AutocompleteInput,\n  DateInput,\n  SelectInput\n} from 'react-admin';\n\nconst validateName = [required('Name is required')];\nconst validateEmail = [required('Email is required'), email('Incorrect Email')];\nconst validatePassword = [required('Password is required'), minLength(6)];\n\nconst UserCreate = (props) => (\n  <Create {...props}>\n   <SimpleForm>\n            <ReferenceInput source=\"property_id\" reference=\"properties\"><SelectInput optionText=\"property_title\" /></ReferenceInput>\n     \n            <TextInput source=\"buyer_name\" />\n            <TextInput source=\"address\" />\n            <TextInput source=\"title_company_closer\" />\n            <NumberInput source=\"amount_of_contract\" />\n            <DateInput source=\"contract_to_lender_date\" />\n            <SelectInput source=\"is_contract_to_lender\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <SelectInput source=\"is_earnest_money_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n          \n            <DateInput source=\"earnest_money_received_date\" />\n            <DateInput source=\"home_inspection_date\" />\n            <TextInput source=\"home_inspection_info\" />\n            <DateInput source=\"termite_inspection_date\" />\n            <SelectInput source=\"is_survey_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n          \n            <DateInput source=\"is_new_survey\" />\n            <TextInput source=\"new_survey_info\" />\n            <DateInput source=\"appraisal_date\" />\n            <DateInput source=\"appraisal_due_date\" />\n            <TextInput source=\"appraisal_additional_info\" />\n            <DateInput source=\"closing_date\" />\n            <DateInput source=\"closing_additional_info\" />\n            <DateInput source=\"title_commitment\" />\n            <SelectInput label=\"Is CDA Sent\" source=\"is_cda_sent\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n          \n            <SelectInput label=\"Is Home Warranty\" source=\"is_home_warranty\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n          \n            <DateInput source=\"home_warranty_date\" />\n            <SelectInput label=\"Is Home Warranty\" source=\"is_switch_over_utilities\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n          \n            <DateInput source=\"option_period_end\" />\n            <TextInput source=\"termite_inspection_info\" />\n            <TextInput source=\"additional_info_entire\" />\n        </SimpleForm>\n\n  </Create>\n);\n\nexport default UserCreate;\n","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ShowProperty from './PropertyBuyerShow';\nimport PropertyBuyerList from './PropertyBuyerList';\nimport { ListGuesser, ShowGuesser,EditGuesser, CreateGuesser } from 'react-admin';\nimport PropertyCreate from './PropertyBuyerCreate';\nimport PropertyBuyerEdit from './PropertyBuyerEdit';\nimport PropertyBuyerShow from './PropertyBuyerShow';\n\nconst resource = {\n  list: PropertyBuyerList,\n   show: PropertyBuyerShow,\n  // icon: AccountCircleIcon,\n   create: PropertyCreate,\n   edit: PropertyBuyerEdit\n};\n\nexport default resource;\n","import {\n    TextField,\n    List,\n    Datagrid,\n    ReferenceField,\n    NumberField,\n    DateField,\n    Filter,\n    SearchInput,\n    DeleteButton,\n    FunctionField,\n    SimpleList,\n    EditButton,\n    BooleanField\n  } from \"react-admin\";\n  import BulkDeleteButton from \"../components/Buttons/BulkDeleteButton\";\n  import ImageAvatar from \"../components/ImageAvatar\";\n  import PropTypes from \"prop-types\";\n  import MarkAsBlocked from \"../components/Buttons/MarkAsBlocked\";\n  import { useMediaQuery } from \"@material-ui/core\";\n const PropertyList = props => (\n    <List {...props}>\n       <Datagrid rowClick=\"show\">\n            <TextField source=\"id\" />\n            <ReferenceField source=\"user_id\" reference=\"users\"><TextField source=\"full_name\" /></ReferenceField>\n            <ReferenceField source=\"property_id\" reference=\"properties\"><TextField source=\"property_title\" /></ReferenceField>\n            \n            <TextField source=\"seller_name\" />\n            <TextField source=\"address\" />\n            <TextField source=\"title_company_closer\" />\n            <NumberField source=\"amount_of_contract\" />\n            <BooleanField source=\"is_earnest_money_received\" />\n            <DateField source=\"earnest_money_received_date\" />\n            <BooleanField source=\"is_contract_to_lender\" />\n            <DateField source=\"contract_to_lender_date\" />\n            <NumberField source=\"is_home_warranty\" />\n            <DateField source=\"home_warranty_date\" />\n            <BooleanField source=\"is_survey_received\" />\n            <BooleanField source=\"is_new_survey\" />\n            <DateField source=\"survey_due_date\" />\n            <TextField source=\"new_survey_info\" />\n            <DateField source=\"home_inspection_date\" />\n            <TextField source=\"home_inspection_info\" />\n            <DateField source=\"termite_inspection_date\" />\n            <TextField source=\"termite_inspection_info\" />\n            <DateField source=\"appraisal_date\" />\n            <DateField source=\"appraisal_due_date\" />\n            <TextField source=\"appraisal_additional_info\" />\n            <BooleanField source=\"is_cda_sent\" />\n            <BooleanField source=\"is_switch_over_utilities\" />\n            <DateField source=\"option_period_end_date\" />\n            <DateField source=\"title_commit_to_be_rec_date\" />\n            <TextField source=\"additional_info_entire\" />\n            <DateField source=\"created_at\" />\n            <DateField source=\"updated_at\" />\n          <EditButton />\n            <DeleteButton undoable={false}/>\n        \n        </Datagrid>\n    </List>\n);\n\nexport default PropertyList;","import {\n  Create,\n  SimpleForm,\n  TextInput,\n  required,\n  NumberInput,\n  email,\n  minLength,\n  PasswordInput,\n  ReferenceInput,\n  AutocompleteInput,\n  DateInput,\n  SelectInput\n} from 'react-admin';\n\nconst validateName = [required('Name is required')];\nconst validateEmail = [required('Email is required'), email('Incorrect Email')];\nconst validatePassword = [required('Password is required'), minLength(6)];\n\nconst UserCreate = (props) => (\n  <Create {...props}>\n  <SimpleForm>\n            <ReferenceInput source=\"property_id\" reference=\"properties\"><SelectInput optionText=\"property_title\" /></ReferenceInput>        \n            <TextInput source=\"seller_name\" />\n            <DateInput source=\"address\" />\n            <TextInput source=\"title_company_closer\" />\n            <NumberInput source=\"amount_of_contract\" />\n            <SelectInput source=\"is_earnest_money_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n           \n            <DateInput source=\"earnest_money_received_date\" />\n            <DateInput source=\"home_inspection_date\" />\n            <TextInput source=\"home_inspection_info\" />\n            <DateInput source=\"termite_inspection_date\" />\n            <TextInput source=\"termite_inspection_info\" />\n            <SelectInput source=\"is_survey_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n           \n            <DateInput source=\"is_new_survey\" />\n            <DateInput source=\"survey_due_date\" />\n            <TextInput source=\"new_survey_info\" />\n            <DateInput source=\"appraisal_date\" />\n            <DateInput source=\"appraisal_due_date\" />\n            <TextInput source=\"appraisal_additional_info\" />\n            <SelectInput source=\"is_cda_sent\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <SelectInput source=\"is_switch_over_utilities\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <SelectInput source=\"is_contract_to_lender\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <SelectInput source=\"is_home_warranty\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"contract_to_lender_date\" />\n            <DateInput source=\"option_period_end_date\" />\n            <DateInput source=\"title_commit_to_be_rec_date\" />\n            <TextInput source=\"additional_info_entire\" />\n            <DateInput source=\"home_warranty_date\" />        \n        </SimpleForm>\n  </Create>\n);\n\nexport default UserCreate;\n","import {\n  Edit,\n  SimpleForm,\n  TextInput,\n  required,\n  TopToolbar,\n  ListButton,\n  NumberInput,\n  DateInput,\n  ReferenceInput,\n  SelectInput\n} from 'react-admin';\nimport PropTypes from 'prop-types';\nconst UserShowActions = ({ basePath }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Go Back to List\" />\n  </TopToolbar>\n);\n  \nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\n  \n  const UserEdit = (props) => (\n    <Edit {...props} undoable={false}  actions={<UserShowActions/>}>\n\n<SimpleForm>\n            <TextInput source=\"id\" />\n            <ReferenceInput source=\"property_id\" reference=\"properties\"><SelectInput optionText=\"property_title\" /></ReferenceInput>        \n            <TextInput source=\"seller_name\" />\n            <TextInput source=\"address\" />\n            <TextInput source=\"title_company_closer\" />\n            <NumberInput source=\"amount_of_contract\" />\n            <SelectInput source=\"is_earnest_money_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n             <DateInput source=\"earnest_money_received_date\" />\n             <SelectInput source=\"is_contract_to_lender\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"contract_to_lender_date\" />\n           \n            <SelectInput source=\"is_home_warranty\" label=\"Is Home Warranty\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n             <DateInput source=\"home_warranty_date\" label=\"Home Warranty Date\"/>\n             <SelectInput source=\"is_survey_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"is_new_survey\" />\n            <DateInput source=\"survey_due_date\" />\n            <TextInput source=\"new_survey_info\" />\n            \n              \n            <DateInput source=\"home_inspection_date\" />\n            <TextInput source=\"home_inspection_info\" />\n            <DateInput source=\"termite_inspection_date\" />\n            <TextInput source=\"termite_inspection_info\" />\n            <DateInput source=\"appraisal_date\" />\n            <DateInput source=\"appraisal_due_date\" />\n            <TextInput source=\"appraisal_additional_info\" />\n            <DateInput source=\"is_cda_sent\" />\n            <SelectInput source=\"is_switch_over_utilities\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n           \n            \n            \n            <DateInput source=\"option_period_end_date\" />\n            <DateInput source=\"title_commit_to_be_rec_date\" />\n            <TextInput source=\"additional_info_entire\" />\n           \n        </SimpleForm>\n    </Edit>\n  );\n  \n  UserShowActions.propTypes = {\n    basePath: PropTypes.string\n  };\n\n  UserEdit.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n\n  UserTitle.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n  \n  export default UserEdit;\n  ","import {useCallback} from 'react';\nimport {\n  Show,\n  TextField,\n  ShowController,\n  TabbedShowLayout,\n  Tab,\n  Datagrid,\n  ArrayField,\n  ImageField,\n  ListButton,\n  TopToolbar,\n  DateField,\n  TextInput,\n  SimpleShowLayout,\n  ReferenceField,\n  NumberField\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageAvatar from '../components/ImageAvatar';\nimport PropTypes, { element } from 'prop-types';\nimport ResponsiveGallery from 'react-responsive-gallery';\n//import moment from 'moment';\nimport moment from 'moment-timezone';\nimport _ from 'lodash';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nmoment.tz.setDefault('UTC/Etc');\n\nlet offset = new Date().getTimezoneOffset();\n\nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\nconst ShowUser = (props) => {\n  console.log({props})\n  return (    \n    \n    <Show {...props}>\n   <SimpleShowLayout>\n            <TextField source=\"id\" />\n            <ReferenceField source=\"user_id\" reference=\"users\"><TextField source=\"full_name\" /></ReferenceField>\n            <ReferenceField source=\"property_id\" reference=\"properties\"><TextField source=\"property_title\" /></ReferenceField>\n       \n            <TextField source=\"seller_name\" />\n            <DateField source=\"address\" />\n            <TextField source=\"title_company_closer\" />\n            <NumberField source=\"amount_of_contract\" />\n            <DateField source=\"is_earnest_money_received\" />\n            <DateField source=\"earnest_money_received_date\" />\n            <DateField source=\"home_inspection_date\" />\n            <TextField source=\"home_inspection_info\" />\n            <DateField source=\"termite_inspection_date\" />\n            <TextField source=\"termite_inspection_info\" />\n            <DateField source=\"is_survey_received\" />\n            <DateField source=\"is_new_survey\" />\n            <DateField source=\"survey_due_date\" />\n            <TextField source=\"new_survey_info\" />\n            <DateField source=\"appraisal_date\" />\n            <DateField source=\"appraisal_due_date\" />\n            <TextField source=\"appraisal_additional_info\" />\n            <DateField source=\"is_cda_sent\" />\n            <DateField source=\"is_switch_over_utilities\" />\n            <DateField source=\"is_contract_to_lender\" />\n            <DateField source=\"is_home_warranty\" />\n            <DateField source=\"contract_to_lender_date\" />\n            <DateField source=\"option_period_end_date\" />\n            <DateField source=\"title_commit_to_be_rec_date\" />\n            <TextField source=\"additional_info_entire\" />\n            <DateField source=\"home_warranty_date\" />\n            <DateField source=\"created_at\" />\n            <DateField source=\"updated_at\" />\n            \n        </SimpleShowLayout>\n</Show>\n     \n    \n  );\n};\n\nexport default ShowUser;\n","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\n//import ShowProperty from './ShowProperty';\nimport PropertyList from './PropertySellerList';\nimport { ListGuesser,EditGuesser,ShowGuesser } from 'react-admin';\nimport PropertyCreate from './PropertySellerCreate';\nimport PropertyEdit from './PropertySellerEdit';\nimport PropertyShow from './PropertySellerShow';\n\nconst resource = {\n  list: PropertyList,\n   show: PropertyShow,\n  // icon: AccountCircleIcon,\n   create: PropertyCreate,\n   edit: PropertyEdit\n};\n\nexport default resource;\n","import ExpandMore from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(theme => ({\n  icon: { minWidth: theme.spacing(5) },\n  sidebarIsOpen: {\n    '& a': {\n      paddingLeft: theme.spacing(4),\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms'\n    }\n  },\n  sidebarIsClosed: {\n    '& a': {\n      paddingLeft: theme.spacing(2),\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms'\n    }\n  }\n}));\n\nconst SubMenu = ({\n  handleToggle,\n  sidebarIsOpen,\n  isOpen,\n  name,\n  icon,\n  children,\n  dense\n}) => {\n  const classes = useStyles();\n\n  const header = (\n    <MenuItem dense={dense} button onClick={handleToggle}>\n      <ListItemIcon className={classes.icon}>\n        {isOpen ? <ExpandMore /> : icon}\n      </ListItemIcon>\n      <Typography variant=\"inherit\" color=\"textSecondary\">\n        {name}\n      </Typography>\n    </MenuItem>\n  );\n\n  return (\n    <Fragment>\n      {sidebarIsOpen || isOpen\n              ? (\n                  header\n                )\n              : (\n                <Tooltip title={name} placement=\"right\">\n                  {header}\n                </Tooltip>\n                )}\n      <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n        <List\n          dense={dense}\n          component=\"div\"\n          disablePadding\n          className={sidebarIsOpen ? classes.sidebarIsOpen : classes.sidebarIsClosed}\n        >\n          {children}\n        </List>\n      </Collapse>\n    </Fragment>\n  );\n};\n\nSubMenu.propTypes = {\n  handleToggle: PropTypes.any,\n  sidebarIsOpen: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  name: PropTypes.string,\n  icon: PropTypes.object,\n  children: PropTypes.any,\n  dense: PropTypes.bool\n};\n\nexport default SubMenu;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useMediaQuery, Box } from '@material-ui/core';\nimport { MenuItemLink } from 'react-admin';\nimport SubMenu from './SubMenu';\n\nimport PropTypes from 'prop-types';\n\nimport Users from '../Users';\n\nconst Menu = ({ onMenuClick, logout, dense = false }) => {\n  const [state, setState] = useState({\n    menuUsers: false,\n    menuProperties: false,\n\n  });\n  const isXSmall = useMediaQuery((theme) => theme.breakpoints.down('xs'));\n  const open = useSelector((state) => state.admin.ui.sidebarOpen);\n  useSelector((state) => state.theme); // force rerender on theme change\n\n  const handleToggle = (menu) => {\n    setState((state) => ({ ...state, [menu]: !state[menu] }));\n  };\n\n  return (\n    <Box mt={1}>\n\n      {/* {* users menu *} */}\n      <SubMenu\n        handleToggle={() => handleToggle('menuUsers')}\n        isOpen={state.menuUsers}\n        sidebarIsOpen={open}\n        name=\"Users\"\n        icon={<Users.icon />}\n        dense={dense}\n      >\n        <MenuItemLink\n          to={'/users'}\n          primaryText={'List'}\n          leftIcon={<Users.icon />}\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n          dense={dense}\n        />\n      </SubMenu>\n      <SubMenu\n        handleToggle={() => handleToggle('menuProperties')}\n        isOpen={state.menuProperties}\n        sidebarIsOpen={open}\n        name=\"Properties\"\n        icon={<Users.icon />}\n        dense={dense}\n      >\n        <MenuItemLink\n          to={'/properties'}\n          primaryText={'List'}\n          leftIcon={<Users.icon />}\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n          dense={dense}\n        />\n      </SubMenu>\n      {/* <SubMenu\n        handleToggle={() => handleToggle('menuPropertyTypes')}\n        isOpen={state.menuPropertyTypes}\n        sidebarIsOpen={open}\n        name=\"PropertyTypes\"\n        icon={<Users.icon />}\n        dense={dense}\n      >\n        <MenuItemLink\n          to={'/property_types'}\n          primaryText={'List'}\n          leftIcon={<Users.icon />}\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n          dense={dense}\n        />\n      </SubMenu> */}\n      <SubMenu\n        handleToggle={() => handleToggle('menuPropertyBuyers')}\n        isOpen={state.menuPropertyBuyers}\n        sidebarIsOpen={open}\n        name=\"PropertyBuyers\"\n        icon={<Users.icon />}\n        dense={dense}\n      >\n        <MenuItemLink\n          to={'/property_buyers'}\n          primaryText={'List'}\n          leftIcon={<Users.icon />}\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n          dense={dense}\n        />\n      </SubMenu>\n      <SubMenu\n        handleToggle={() => handleToggle('menuPropertySellers')}\n        isOpen={state.menuPropertySellers}\n        sidebarIsOpen={open}\n        name=\"PropertySellers\"\n        icon={<Users.icon />}\n        dense={dense}\n      >\n        <MenuItemLink\n          to={'/property_sellers'}\n          primaryText={'List'}\n          leftIcon={<Users.icon />}\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n          dense={dense}\n        />\n      </SubMenu>\n\n      {logout}\n    </Box>\n  );\n};\n\nMenu.propTypes = {\n  onMenuClick: PropTypes.func,\n  logout: PropTypes.any,\n  dense: PropTypes.bool\n};\n\nexport default Menu;\n","import { AppBar } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport logo from '../assets/logo.svg';\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  },\n  spacer: {\n    flex: 1\n  },\n  imageStyle: {\n    height: 30,\n    width: 200\n  },\n  header: {\n    background: '#f7f7f7',\n    color: '#072d40',\n    boxShadow: '0px 2px 10px 2px rgb(0 0 0 / 10%)',\n  }\n});\n\nconst CustomAppBar = (props) => {\n  const classes = useStyles();\n  return (\n    <AppBar\n      {...props}\n      elevation={1}\n      className={classes.header}\n    >\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n      {/* <img src={logo} alt=\"Logo\" className={classes.imageStyle} />\n       */}\n       <span className={classes.spacer} />\n    </AppBar>\n  );\n};\n\nexport default CustomAppBar;\n","export default __webpack_public_path__ + \"static/media/logo.94b2a654.svg\";","import { Layout, Sidebar } from 'react-admin';\nimport Menu from './Menu';\nimport AppBar from './AppBar';\n\nconst CustomSidebar = (props) => <Sidebar {...props} size={200} />;\n\nconst layout = (props) => {\n  return (\n    <Layout {...props} sidebar={CustomSidebar} menu={Menu} appBar={AppBar} />\n  );\n};\nexport default layout;\n","import { Admin, Resource, defaultTheme } from 'react-admin';\n\nimport { createHashHistory } from 'history';\nimport customDataProvider from './providers/customDataProvider';\nimport authProvider from './providers/authProvider';\nimport Users from './Users';\nimport Properties from './Properties';\nimport PropertyTypes from './PropertyTypes';\nimport PropertyBuyers from './PropertyBuyers';\nimport PropertySellers from './PropertySellers';\nimport { Layout } from './layout';\n\nconst history = createHashHistory();\n\n// const theme = {\n//   ...defaultTheme,\n//   palette: {\n//       type: 'dark', // Switching the dark mode on is a single property value change.\n//   },\n// };\nconst App = () => (\n  <Admin\n  \n    dataProvider={customDataProvider}\n    authProvider={authProvider}\n    history={history}\n    layout={Layout}\n  >\n    <Resource name=\"users\" {...Users} />\n    <Resource name=\"properties\" {...Properties} />\n    <Resource name=\"property_types\" {...PropertyTypes} />\n    <Resource name=\"property_buyers\" {...PropertyBuyers} />\n    <Resource name=\"property_sellers\" {...PropertySellers} />\n  </Admin>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["constants.js","providers/customDataProvider.js","providers/authProvider.js","components/Buttons/BulkDeleteButton.js","components/ImageAvatar.js","Users/UsersMobileGrid.js","Users/UsersList.js","Users/UserCreate.js","Users/UserEdit.js","Users/ShowUser.js","Users/index.js","Properties/ShowProperty.js","Properties/PropertiesMobileGrid.js","Properties/PropertyList.js","Properties/PropertyCreate.js","Properties/PropertyEdit.js","Properties/index.js","PropertyTypes/ShowProperty.js","PropertyTypes/index.js","PropertyTypes/PropertyCreate.js","PropertyBuyers/PropertyBuyerShow.js","PropertyBuyers/PropertyBuyersMobileGrid.js","PropertyBuyers/PropertyBuyerList.js","PropertyBuyers/PropertyBuyerCreate.js","PropertyBuyers/PropertyBuyerEdit.js","PropertyBuyers/index.js","PropertySellers/PropertySellersMobileGrid.js","PropertySellers/PropertySellerList.js","PropertySellers/PropertySellerCreate.js","PropertySellers/PropertySellerEdit.js","PropertySellers/PropertySellerShow.js","PropertySellers/index.js","Notes/NotesList.js","Notes/NotesCreate.js","Notes/NotesEdit.js","Notes/ShowNotes.js","Notes/index.js","layout/SubMenu.js","layout/Menu.js","assets/logo.svg","layout/AppBar.js","layout/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","process","REACT_APP_ENVIRONMENT","RESOURCES","users","properties","property_types","property_buyers","property_sellers","notes","getResourcePath","resourceName","toLowerCase","httpClient","url","options","headers","Headers","Accept","token","localStorage","getItem","set","fetchUtils","fetchJson","sentImageToS3","files","a","length","exts","forEach","item","i","rawFile","name","split","fetch","response","json","data","imageUrls","method","body","imageUrl","push","getList","resource","params","mResource","pagination","page","perPage","sort","field","order","query","JSON","stringify","range","filter","then","total","parseInt","get","pop","getOne","id","getMany","ids","getManyReference","target","update","_","has","mediaUrls","urls","map","media_url","updateMany","create","delete","deleteMany","login","username","password","request","Request","email","status","Error","statusText","console","log","isAdmin","removeItem","setItem","access_token","Promise","resolve","reject","logout","clear","checkError","checkAuth","auth","getPermissions","role","getIdentity","BulkDeleteButton","selectedIds","useState","open","setOpen","refresh","useRefresh","notify","useNotify","unselectAll","useUnselectAll","useDeleteMany","onSuccess","onFailure","error","loading","Button","label","onClick","Confirm","isOpen","title","content","onConfirm","onClose","useStyles","makeStyles","avatar","height","width","ImageAvatar","props","styles","Avatar","className","src","record","photo","info","image","defaultProps","addLabel","theme","descriptionText","overflowWrap","UsersMobileGrid","classes","redirect","useRedirect","Box","margin","Object","keys","b","index","RecordContext","value","Card","sx","CardHeader","TextField","source","variant","style","fontWeight","titleTypographyProps","action","EditButton","CardContent","pt","Typography","gutterBottom","ReferenceField","reference","display","whiteSpace","overflow","textOverflow","UsersList","isSmall","useMediaQuery","breakpoints","down","List","bulkActionButtons","hasShow","Datagrid","rowClick","DeleteButton","undoable","onError","optimized","required","minLength","UserShowActions","basePath","TopToolbar","ListButton","UserEdit","Edit","actions","successMessage","SimpleForm","TextInput","disabled","inputProps","maxLength","multiline","validate","moment","tz","setDefault","Date","getTimezoneOffset","list","show","Show","SimpleShowLayout","icon","AccountCircleIcon","edit","ShowUser","NumberField","DateField","PropertiesMobileGrid","PropertyList","UserCreate","Create","ReferenceInput","SelectInput","optionText","DateInput","format","ampm","clearable","choices","ShowProperty","CottageIcon","PropertyCreate","PropertyEdit","momentLocalizer","idBox","ListGuesser","BooleanField","PropertyBuyersMobileGrid","NumberInput","PropertyBuyerList","PropertyBuyerShow","ShoppingCartIcon","PropertyBuyerEdit","PropertySellersMobileGrid","PropertyShow","SellIcon","UserEmailUsername","parentId","SimpleList","primaryText","secondaryText","sortBy","NoteCreate","fullWidth","minWidth","spacing","sidebarIsOpen","paddingLeft","transition","sidebarIsClosed","SubMenu","handleToggle","children","dense","header","MenuItem","button","ListItemIcon","color","Tooltip","placement","Collapse","in","timeout","unmountOnExit","component","disablePadding","Menu","onMenuClick","menuUsers","menuProperties","state","setState","useSelector","admin","ui","sidebarOpen","menu","mt","Users","MenuItemLink","to","leftIcon","Properties","menuPropertyBuyers","menuPropertySellers","flex","spacer","imageStyle","background","boxShadow","CustomAppBar","AppBar","elevation","logo","alt","CustomSidebar","Sidebar","size","layout","Layout","sidebar","appBar","history","createHashHistory","App","Admin","dataProvider","customDataProvider","authProvider","Resource","PropertyTypes","PropertyBuyers","PropertySellers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8RAGaA,GAAkD,eAAtCC,mIAAYC,uBAAqDD,mIAAYC,sBAA9E,iDAEXC,EAAY,CACvBC,MAAO,QACPC,WAAY,aACZC,eAAgB,iBAChBC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,MAAO,SAQF,SAASC,EAAgBC,GAC9B,OAAOR,EAAUQ,EAAaC,eCfhC,IAAMC,EAAa,SAACC,GAAuB,IAAlBC,EAAiB,uDAAP,GAC5BA,EAAQC,UACXD,EAAQC,QAAU,IAAIC,QAAQ,CAC5BC,OAAQ,sBAGZ,IAAMC,EAAQC,aAAaC,QAAQ,QAEnC,OADAN,EAAQC,QAAQM,IAAI,gBAApB,iBAA+CH,IACxCI,IAAWC,UAAUV,EAAKC,IAE7BU,EAAa,iDAAG,WAAOC,GAAP,cAAAC,EAAA,iFAEfD,IAASA,EAAME,OAFA,wBAGdC,EAAO,GAEXH,EAAMI,SAAQ,SAACC,EAAKC,GACbD,EAAKE,UACHD,EAAI,IACPH,GAAQ,KAEVA,GAAQE,EAAKE,QAAQC,KAAKC,MAAM,KAAK,OAVvB,SAcKC,MAAMpC,EAAW,oBAAoB6B,GAd1C,cAcZQ,EAdY,gBAeKA,EAASC,OAfd,mBAeVC,EAfU,EAeVA,KAEJC,EAAY,IAEXD,IAAQA,EAAKX,OAnBA,iBAqBRD,EAAE,EArBM,aAqBHA,EAAEY,EAAKX,QArBJ,kCAsBRQ,MAAMG,EAAKZ,GAAI,CACnBc,OAAQ,MACRzB,QAAS,CACP,eAAgB,uBAElB0B,KAAMhB,EAAMC,GAAGM,UA3BH,QA6BRU,EAAWJ,EAAKZ,GAAGQ,MAAM,KAAK,GACpCK,EAAUI,KAAKD,GA9BD,QAqBYhB,IArBZ,iDAkCXa,GAlCW,4CAAH,sDAsCJ,GACbK,QAAS,SAACC,EAAUC,GAClB,IAAMC,EAAYtC,EAAgBoC,GAElC,EAA0BC,EAAOE,WAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,EAAyBJ,EAAOK,KAAxBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MACTC,EAAQ,CACZH,KAAMI,KAAKC,UAAU,CAACJ,EAAOC,IAC7BI,MAAOF,KAAKC,UAAU,EAAEP,EAAO,GAAKC,EAASD,EAAOC,EAAU,IAC9DQ,OAAQH,KAAKC,UAAUV,EAAOY,SAE1B7C,EAAG,UAAMd,EAAN,YAAkBgD,EAAlB,YAA+BS,oBAAUF,IAElD,OAAO1C,EAAWC,GAAK8C,MAAK,gBAAG5C,EAAH,EAAGA,QAAH,MAAwB,CAClDuB,KAD0B,EAAYD,KAC3BC,KACXsB,MAAOC,SAAS9C,EAAQ+C,IAAI,iBAAiB5B,MAAM,KAAK6B,MAAO,SAInEC,OAAQ,SAACnB,EAAUC,GAEjB,IAAMC,EAAYtC,EAAgBoC,GAClC,OAAOjC,EAAW,GAAD,OAAIb,EAAJ,YAAgBgD,EAAhB,YAA6BD,EAAOmB,KAAMN,MACzD,kBAAe,CAEbrB,KAFF,EAAGD,KAEUC,KACX2B,GAAGnB,EAAOmB,QAKhBC,QAAS,SAACrB,EAAUC,GAClB,IAAMC,EAAYtC,EAAgBoC,GAC5BS,EAAQ,CACZI,OAAQH,KAAKC,UAAU,CAAES,GAAInB,EAAOqB,MACpChB,KAAM,KACNM,MAAO,MAEH5C,EAAG,UAAMd,EAAN,YAAkBgD,EAAlB,YAA+BS,oBAAUF,IAClD,OAAO1C,EAAWC,GAAK8C,MAAK,kBAAe,CAAErB,KAAjB,EAAGD,KAAyBC,UAG1D8B,iBAAkB,SAACvB,EAAUC,GAC3B,IAAMC,EAAYtC,EAAgBoC,GAClC,EAA0BC,EAAOE,WAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,EAAyBJ,EAAOK,KAAxBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MACTC,EAAQ,CACZH,KAAMI,KAAKC,UAAU,CAACJ,EAAOC,IAC7BI,MAAOF,KAAKC,UAAU,EAAEP,EAAO,GAAKC,EAASD,EAAOC,EAAU,IAC9DQ,OAAQH,KAAKC,UAAL,2BACHV,EAAOY,QADJ,kBAELZ,EAAOuB,OAASvB,EAAOmB,OAGtBpD,EAAG,UAAMd,EAAN,YAAkBgD,EAAlB,YAA+BS,oBAAUF,IAElD,OAAO1C,EAAWC,GAAK8C,MAAK,gBAAG5C,EAAH,EAAGA,QAAH,MAAwB,CAClDuB,KAD0B,EAAYD,KAC3BC,KACXsB,MAAOC,SAAS9C,EAAQ+C,IAAI,iBAAiB5B,MAAM,KAAK6B,MAAO,SAInEO,OAAO,WAAD,sCAAE,WAAOzB,EAAUC,GAAjB,UAAApB,EAAA,8EACAqB,EAAYtC,EAAgBoC,KAEhC0B,IAAEC,IAAI1B,EAAQ,SACdyB,IAAEC,IAAI1B,EAAOR,KAAM,cACnBQ,EAAOR,KAAKmC,UAAU9C,QALlB,uBAQAF,EAAQqB,EAAOR,KAAKmC,UAAUf,QAAO,SAAC5B,GACxC,OAAOA,EAAKE,WATV,SAYaR,EAAcC,GAZ3B,OAuBJ,GAXIiD,EAZA,OAaJ5B,EAAOR,KAAKmC,UAAY3B,EAAOR,KAAKmC,UAAUf,QAAO,SAAC5B,GACpD,OAAQyC,IAAEC,IAAI1C,EAAK,cAErBgB,EAAOR,KAAKmC,UAAY3B,EAAOR,KAAKmC,UAAUE,KAAI,SAAC7C,GACjD,IAAIjB,EAAMiB,EAIV,OAHKyC,IAAEC,IAAI1C,EAAK,eACdjB,EAAMiB,EAAK8C,WAEN/D,KAEJ6D,GAAQA,EAAK/C,OAChB,IAAQD,EAAE,EAAGA,EAAEgD,EAAK/C,OAAQD,IAC1BoB,EAAOR,KAAKmC,UAAU9B,KAAK+B,EAAKhD,IAzBhC,gCA8BCd,EAAW,GAAD,OAAIb,EAAJ,YAAgBgD,EAAhB,YAA6BD,EAAOmB,IAAM,CACzDzB,OAAQ,MACRC,KAAMc,KAAKC,UAAUV,EAAOR,QAC3BqB,MAAK,kBAAe,CAAErB,KAAjB,EAAGD,KAAyBC,UAjC9B,4CAAF,qDAAC,GAoCPuC,WAAY,SAAChC,EAAUC,GACrB,IAAMC,EAAYtC,EAAgBoC,GAC5BS,EAAQ,CACZI,OAAQH,KAAKC,UAAU,CAAES,GAAInB,EAAOqB,OAEtC,OAAOvD,EAAW,GAAD,OAAIb,EAAJ,YAAgBgD,EAAhB,YAA6BS,oBAAUF,IAAU,CAChEd,OAAQ,MACRC,KAAMc,KAAKC,UAAUV,EAAOR,QAC3BqB,MAAK,kBAAe,CAAErB,KAAjB,EAAGD,KAAyBC,UAGtCwC,OAAO,WAAD,sCAAE,WAAOjC,EAAUC,GAAjB,oFACAC,EAAYtC,EAAgBoC,KAEhC0B,IAAEC,IAAI1B,EAAQ,SACdyB,IAAEC,IAAI1B,EAAOR,KAAM,cACnBQ,EAAOR,KAAKmC,UAAU9C,QALlB,gCAO0BH,EAAcsB,EAAOR,KAAKmC,WAPpD,OAOJ3B,EAAOR,KAAKmC,UAPR,uCAUC7D,EAAW,GAAD,OAAIb,EAAJ,YAAgBgD,GAAa,CAC5CP,OAAQ,OACRC,KAAMc,KAAKC,UAAUV,EAAOR,QAC3BqB,MAAK,gBAAGtB,EAAH,EAAGA,KAAH,MAAe,CACrBC,KAAK,2BAAMQ,EAAOR,MAAd,IAAoB2B,GAAI5B,EAAKC,KAAK2B,UAdlC,2CAAF,qDAAC,GAkBPc,OAAQ,SAAClC,EAAUC,GACjB,IAAMC,EAAYtC,EAAgBoC,GAClC,OAAOjC,EAAW,GAAD,OAAIb,EAAJ,YAAgBgD,EAAhB,YAA6BD,EAAOmB,IAAM,CACzDzB,OAAQ,WACPmB,MAAK,kBAAe,CAAErB,KAAjB,EAAGD,KAAyBC,UAGtC0C,WAAY,SAACnC,EAAUC,GACrB,IAAMC,EAAYtC,EAAgBoC,GAC5BS,EAAQ,CACZI,OAAQ,CAAEO,GAAInB,EAAOqB,MAGvB,OAAOvD,EAAW,GAAD,OAAIb,EAAJ,YAAgBgD,EAAhB,YAA6BS,oBAAUF,IAAU,CAChEd,OAAQ,SACRC,KAAMc,KAAKC,UAAUF,KACpBK,MAAK,kBAAe,CAAErB,KAAjB,EAAGD,KAAyBC,WChMzB,GACb2C,MAAO,YAA6B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAGZC,EAAU,IAAIC,QAFRtF,EAAW,SAEU,CAC/ByC,OAAQ,OACRC,KAAMc,KAAKC,UAAU,CAAE8B,MAAOJ,EAAUC,SAAUA,IAClDpE,QAAS,IAAIC,QAAQ,CACnB,eAAgB,uBAGpB,OAAOmB,MAAMiD,GACVzB,MAAK,SAACvB,GACL,GAAIA,EAASmD,OAAS,KAAOnD,EAASmD,QAAU,IAC9C,MAAM,IAAIC,MAAMpD,EAASqD,YAE3B,OAAOrD,EAASC,UAEjBsB,MAAK,SAACvB,GAOL,OALAsD,QAAQC,IAAIvD,EAASE,MACrBoD,QAAQC,IAAIvD,EAASE,MAAQF,EAASE,KAAKsD,SACjB,oBAAvBxD,EAASE,KAAKgD,QACflD,EAASE,KAAKsD,QAAU,GAEtBxD,EAASE,MAAQF,EAASE,KAAKsD,SACjCzE,aAAa0E,WAAW,qBACxB1E,aAAa2E,QAAQ,OAAQ1D,EAASE,KAAKyD,cACpCC,QAAQC,YAEjB9E,aAAa2E,QAAQ,qBAAqB,GACnCE,QAAQE,OAAO,IAAIV,MAAM,+BAGtCW,OAAO,WAAD,sCAAE,qGACAtF,EAAMd,EAAW,YACjBmB,EAAQC,aAAaC,QAAQ,SAF7B,uBAKEgE,EAAU,IAAIC,QAAQxE,EAAK,CAC/B2B,OAAQ,OACRC,KAAMc,KAAKC,UAAU,CAAEtC,UACvBH,QAAS,IAAIC,QAAQ,CACnB,eAAgB,uBAThB,kBAYGmB,MAAMiD,GACVzB,MAAK,SAACvB,GACL,GAAIA,EAASmD,OAAS,KAAOnD,EAASmD,QAAU,IAC9C,MAAM,IAAIC,MAAMpD,EAASqD,YAE3B,OAAOrD,EAASC,UAEjBsB,MAAK,SAACvB,GACL,OAAIA,EAASE,MACXnB,aAAa2E,QAAQ,qBAAqB,GAC1C3E,aAAaiF,QACNJ,QAAQC,YAEjB9E,aAAa0E,WAAW,qBACjBG,QAAQE,OAAO,IAAIV,MAAM,+BA1BhC,cA6BJrE,aAAa2E,QAAQ,qBAAqB,GAC1C3E,aAAaiF,QA9BT,kBA+BGJ,QAAQC,WA/BX,4CAAF,kDAAC,GAkCPI,WAAY,YAAiB,IAAdd,EAAa,EAAbA,OACb,OAAkB,MAAXA,GAA6B,MAAXA,EACrBS,QAAQE,OAAO,IAAIV,MAAM,gBACzBQ,QAAQC,WAEdK,UAAW,WACT,IAAMC,EAAOpF,aAAaC,QAAQ,QAClC,OAAgB,OAATmF,GAA0B,KAATA,EAAcP,QAAQC,UAAYD,QAAQE,OAAO,IAAIV,MAAM,2BAErFgB,eAAgB,WACd,IAAMC,EAAOtF,aAAaC,QAAQ,SAClC,OAAO4E,QAAQC,QAAQQ,IAEzBC,YAAa,WACX,MAAO,CACLzC,GAAI9C,aAAaC,QAAQ,Y,2JChChBuF,EA5CU,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAalG,EAAmB,EAAnBA,aACvC,EAAwBmG,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAUC,cACVC,EAASC,cACTC,EAAcC,cACpB,EAAkCC,YAAc5G,EAAckG,EAAa,CACzEW,UAAW,WACTP,IACAE,EAAO,GAAD,OAAIxG,EAAJ,aACN0G,EAAY1G,IAEd8G,UAAW,SAACC,GACVP,EAAO,UAAD,OAAWxG,EAAX,yBAAwC+G,GAAS,cAP3D,mBAAOzC,EAAP,KAAqB0C,EAArB,KAAqBA,QAmBrB,OACE,eAAC,WAAD,WACE,cAACC,EAAA,EAAD,CAAQC,MAAM,mBAAmBC,QAVjB,kBAAMd,GAAQ,MAW9B,cAACe,EAAA,EAAD,CACEC,OAAQjB,EACRY,QAASA,EACTM,MAAK,iBAAYtH,GACjBuH,QAAQ,+CACRC,UAbgB,WACpBlD,IACA+B,GAAQ,IAYJoB,QAhBoB,kBAAMpB,GAAQ,U,kBCxBpCqB,EAAYC,YAAW,CAC3BC,OAAQ,CACNC,OAAQ,GACRC,MAAO,MAILC,EAAc,SAACC,GACnB,IACMC,EADUP,IACOE,OAEvB,OAAO,cAACM,EAAA,EAAD,CAAQC,UAAWF,EAAQG,IAAKJ,EAAMK,QAAUL,EAAMK,OAAOC,MAAQN,EAAMK,OAAOC,MAASN,EAAMK,QAAUL,EAAMK,OAAOE,MAAQP,EAAMK,OAAOE,KAAKD,MAAQN,EAAMK,OAAOE,KAAKD,MAASN,EAAMK,OAAOG,MAAQR,EAAMK,OAAOG,MAAQ,MAMxOT,EAAYU,aAAe,CACzBvB,MAAO,QACPwB,UAAU,GAGGX,I,4GCLTL,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCC,gBAAiB,CACfC,aAAc,gBAIZC,GAAkB,SAACd,GACvB,IAAMe,EAAUrB,KACVsB,EAAWC,cAETrH,EAASoG,EAATpG,KAER,OACE,cAACsH,EAAA,EAAD,CAAKC,OAAO,QAAZ,SACGC,OAAOC,KAAKzH,GACVa,MAAK,SAACzB,EAAGsI,GAAJ,OAAU1H,EAAK0H,GAAG/F,GAAK3B,EAAKZ,GAAGuC,MACpCU,KAAI,SAAUoE,EAAQkB,GACrB,OACE,cAACC,EAAA,EAAD,CAA6CC,MAAO7H,EAAKyG,GAAzD,SACE,eAACqB,EAAA,EAAD,CAAMC,GAAI,CAAER,OAAQ,YAApB,UACE,cAACS,EAAA,EAAD,CACEtC,MACE,8CAEE,cAACuC,EAAA,EAAD,CACEC,OAAO,KACPC,QAAQ,KACRC,MAAO,CAAEC,WAAY,UAI3BC,qBAAsB,CAAEH,QAAS,KAAME,WAAY,KACnDE,OACE,cAACC,EAAA,EAAD,CACEjD,QAAS,kBAAM6B,EAAS,OAAQ,QAASpH,EAAKyG,GAAQ9E,SAI5D,eAAC8G,EAAA,EAAD,CAAaV,GAAI,CAAEW,GAAI,GAAvB,UACE,eAACC,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,6BACA,cAACQ,EAAA,EAAD,CAAgBX,OAAO,KAAKY,UAAU,QAAtC,SACE,cAACb,EAAA,EAAD,CAAWC,OAAO,mBAItB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,8BACA,cAACJ,EAAA,EAAD,CAAWC,OAAO,mBAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,wBACA,cAACJ,EAAA,EAAD,CACEC,OAAO,MACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,6BACA,cAACJ,EAAA,EAAD,CAAWC,OAAO,gBAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,oCAGA,cAACJ,EAAA,EAAD,CAAWC,OAAO,yBAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,kCAGA,cAACJ,EAAA,EAAD,CAAWC,OAAO,8BAzDElI,EAAKyG,GAAQ9E,UAoErDuF,GAAgBL,aAAe,CAC7B7G,KAAM,GACN6B,IAAK,IAGQqF,UC1FTpB,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCC,gBAAiB,CACf+B,QAAS,QACT7C,MAAO,IACP8C,WAAY,SACZC,SAAU,SACVC,aAAc,gBA8FHC,GAhEG,SAAC/C,GACjB,IAAMe,EAAUrB,KACVlB,EAASC,cAEXuE,EAAUC,aAAc,SAACtC,GAAD,OAAWA,EAAMuC,YAAYC,KAAK,SAC9D,OACE,cAACC,EAAA,EAAD,2BACMpD,GADN,IAGEqD,kBAAmB,cAAC,EAAD,CAAkBrL,aAAa,UAClDyC,KAAM,CAAEC,MAAO,aAAcC,MAAO,QACpC2I,SAAS,EACTnD,UAAU,WANZ,SAQG6C,EACC,cAAC,GAAD,IAEA,qCACE,eAACO,EAAA,EAAD,CAAUC,SAAS,OAAnB,UACE,cAAC3B,EAAA,EAAD,CAAWC,OAAO,OAClB,cAACW,EAAA,EAAD,CAAgBX,OAAO,KAAK5C,MAAM,OAAOwD,UAAU,QAAnD,SACE,cAACb,EAAA,EAAD,CAAWC,OAAO,gBAEpB,cAACD,EAAA,EAAD,CAAWC,OAAO,gBAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,MAAM3B,UAAWY,EAAQH,kBAC3C,cAACiB,EAAA,EAAD,CAAWC,OAAO,aAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,sBAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,oBAElB,cAACM,EAAA,EAAD,IACA,cAACqB,EAAA,EAAD,CACEC,UAAU,EACV7E,UAAW,WACTL,EAAO,iBAETmF,QAAS,WACPnF,EAAO,0BAIb,cAAC+E,EAAA,EAAD,CAAUK,WAAS,EAACJ,SAAS,OAA7B,4B,sDCrFYK,aAAS,oBACRA,aAAS,qBAAsBjH,aAAM,mBAClCiH,aAAS,wBAAyBC,aAAU,G,4BCFhEC,I,OAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAYF,SAAUA,EAAU9E,MAAM,wBAyCzBiF,GA/BE,SAACnE,GAAD,OACf,cAACoE,GAAA,EAAD,2BAAUpE,GAAV,IAAiB0D,UAAU,EAASW,QAAS,cAAC,GAAD,IAAoBC,eAAe,4BAAhF,SAEE,eAACC,GAAA,EAAD,WACQ,cAACC,GAAA,EAAD,CAAWC,UAAQ,EAACvF,MAAM,KAAK4C,OAAO,OACtC,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,YAAY+C,SAAU,CAAChB,kBACzF,cAACW,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,cAAc+C,SAAU,CAAChB,kBAC3F,cAACW,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,WAAW+C,SAAU,CAAChB,kBACxF,cAACW,GAAA,EAAD,CAAW1C,OAAO,oBAAoB+C,SAAU,CAAChB,kBACjD,cAACW,GAAA,EAAD,CAAW1C,OAAO,kBAAkB+C,SAAU,CAAChB,kBAC/C,cAACW,GAAA,EAAD,CAAYI,WAAW,EAAM9C,OAAO,MAAM+C,SAAU,CAAChB,yB,kECTnEiB,KAAOC,GAAGC,WAAW,YAER,IAAIC,MAAOC,oBAAxB,ICbe/K,GARE,CACfgL,KAAMpC,GACNqC,KD0Be,SAACpF,GAEhB,OADAhD,QAAQC,IAAI,CAAC+C,UAGP,cAACqF,GAAA,EAAD,2BACMrF,GADN,aAKS,eAACsF,GAAA,EAAD,CAAkBnF,UAAW,mBAA7B,UAEH,cAAC0B,EAAA,EAAD,CAAWC,OAAO,KAAK5C,MAAM,YAC7B,cAAC2C,EAAA,EAAD,CAAWC,OAAO,cAClB,cAACD,EAAA,EAAD,CAAW3C,MAAM,cAAc4C,OAAO,gBACtC,cAACD,EAAA,EAAD,CAAW3C,MAAM,WAAW4C,OAAO,aACnC,cAACD,EAAA,EAAD,CAAW3C,MAAM,oBAAoB4C,OAAO,sBAC5C,cAACD,EAAA,EAAD,CAAW3C,MAAM,kBAAkB4C,OAAO,oBAC1C,cAACD,EAAA,EAAD,CAAW3C,MAAM,MAAM4C,OAAO,eC1C1CyD,KAAMC,IAENC,KAAMtB,I,oBCgBRW,KAAOC,GAAGC,WAAW,YAER,IAAIC,MAAOC,oBAAxB,IA+BeQ,GAxBE,SAAC1F,GAEhB,OADAhD,QAAQC,IAAI,CAAC+C,UAGX,cAACqF,GAAA,EAAD,2BAAUrF,GAAV,aACA,eAACsF,GAAA,EAAD,CAAkBnF,UAAW,mBAA7B,UACI,cAAC0B,EAAA,EAAD,CAAWC,OAAO,OAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,mBAClB,cAACW,EAAA,EAAD,CAAgBX,OAAO,UAAUY,UAAU,QAA3C,SAAmD,cAACb,EAAA,EAAD,CAAWC,OAAO,SACrE,cAACW,EAAA,EAAD,CAAgBX,OAAO,mBAAmBY,UAAU,iBAApD,SAAqE,cAACb,EAAA,EAAD,CAAWC,OAAO,oBACvF,cAACD,EAAA,EAAD,CAAWC,OAAO,qBAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,yBAClB,cAAC6D,GAAA,EAAD,CAAa7D,OAAO,mBACpB,cAAC6D,GAAA,EAAD,CAAa7D,OAAO,kBACpB,cAAC6D,GAAA,EAAD,CAAa7D,OAAO,yBACpB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,+BC/BpBpC,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCC,gBAAiB,CACfC,aAAc,gBAIZgF,GAAuB,SAAC7F,GAC5B,IAAMe,EAAUrB,KACVsB,EAAWC,cAETrH,EAASoG,EAATpG,KAER,OACE,cAACsH,EAAA,EAAD,CAAKC,OAAO,QAAZ,SACGC,OAAOC,KAAKzH,GACVa,MAAK,SAACzB,EAAGsI,GAAJ,OAAU1H,EAAK0H,GAAG/F,GAAK3B,EAAKZ,GAAGuC,MACpCU,KAAI,SAAUoE,EAAQkB,GACrB,OACE,cAACC,EAAA,EAAD,CAA6CC,MAAO7H,EAAKyG,GAAzD,SACE,eAACqB,EAAA,EAAD,CAAMC,GAAI,CAAER,OAAQ,YAApB,UACE,cAACS,EAAA,EAAD,CACEtC,MACE,kDAEE,cAACuC,EAAA,EAAD,CACEC,OAAO,KACPC,QAAQ,KACRC,MAAO,CAAEC,WAAY,UAI3BC,qBAAsB,CAAEH,QAAS,KAAME,WAAY,KACnDE,OACE,cAACC,EAAA,EAAD,CACEjD,QAAS,kBACP6B,EAAS,OAAQ,aAAcpH,EAAKyG,GAAQ9E,SAKpD,eAAC8G,EAAA,EAAD,CAAaV,GAAI,CAAEW,GAAI,GAAvB,UACE,eAACC,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,6BACA,cAACQ,EAAA,EAAD,CAAgBX,OAAO,KAAKY,UAAU,QAAtC,SACE,cAACb,EAAA,EAAD,CAAWC,OAAO,mBAItB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,uBACA,cAACQ,EAAA,EAAD,CACEX,OAAO,mBACPY,UAAU,iBAFZ,SAIE,cAACb,EAAA,EAAD,CAAWC,OAAO,uBAItB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,4BACA,cAACJ,EAAA,EAAD,CACEC,OAAO,mBACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,0BACA,cAACJ,EAAA,EAAD,CACEC,OAAO,iBACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,wBACA,cAAC0D,GAAA,EAAD,CACE7D,OAAO,iBACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,uBACA,cAAC0D,GAAA,EAAD,CACE7D,OAAO,gBACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,uBACA,cAAC0D,GAAA,EAAD,CACE7D,OAAO,uBACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,6BACA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,2BAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,8BACA,cAACJ,EAAA,EAAD,CACEC,OAAO,uBACP3B,UAAWY,EAAQH,4BAzFDhH,EAAKyG,GAAQ9E,UAqGrDsK,GAAqBpF,aAAe,CAClC7G,KAAM,GACN6B,IAAK,IAGQoK,UC1HTnG,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCC,gBAAiB,CACf+B,QAAS,QACT7C,MAAO,IACP8C,WAAY,SACZC,SAAU,SACVC,aAAc,gBA+EHgD,GA3EM,SAAC9F,GACpB,IAAMe,EAAUrB,KACVlB,EAASC,cACXuE,EAAUC,aAAc,SAACtC,GAAD,OAAWA,EAAMuC,YAAYC,KAAK,SAC9D,OACE,cAACC,EAAA,EAAD,2BACMpD,GADN,IAEEG,UAAU,WACV1F,KAAM,CAAEC,MAAO,aAAcC,MAAO,QAHtC,SAKGqI,EACC,cAAC,GAAD,IAEA,mCACE,eAACO,EAAA,EAAD,CAAUC,SAAS,OAAnB,UACE,cAAC3B,EAAA,EAAD,CAAWC,OAAO,OAClB,cAACW,EAAA,EAAD,CAAgBvD,MAAM,OAAO4C,OAAO,UAAUY,UAAU,QAAxD,SACE,cAACb,EAAA,EAAD,CAAWC,OAAO,gBAEpB,cAACW,EAAA,EAAD,CACEvD,MAAM,OACN4C,OAAO,mBACPY,UAAU,iBAHZ,SAKE,cAACb,EAAA,EAAD,CAAWC,OAAO,oBAEpB,cAACD,EAAA,EAAD,CACE3C,MAAM,UACN4C,OAAO,mBACP3B,UAAWY,EAAQH,kBAErB,cAACiB,EAAA,EAAD,CACE3C,MAAM,QACN4C,OAAO,iBACP3B,UAAWY,EAAQH,kBAErB,cAAC+E,GAAA,EAAD,CACEzG,MAAM,QACN4C,OAAO,iBACP3B,UAAWY,EAAQH,kBAErB,cAAC+E,GAAA,EAAD,CACEzG,MAAM,OACN4C,OAAO,gBACP3B,UAAWY,EAAQH,kBAErB,cAAC+E,GAAA,EAAD,CACEzG,MAAM,OACN4C,OAAO,uBACP3B,UAAWY,EAAQH,kBAErB,cAACgF,GAAA,EAAD,CAAW1G,MAAM,YAAY4C,OAAO,wBACpC,cAACD,EAAA,EAAD,CACE3C,MAAM,cACN4C,OAAO,uBACP3B,UAAWY,EAAQH,kBAGrB,cAACwB,EAAA,EAAD,IACA,cAACqB,EAAA,EAAD,CACEC,UAAU,EACV7E,UAAW,WACTL,EAAO,qBAETmF,QAAS,WACPnF,EAAO,gC,8BC3CRuH,I,OApCOlC,aAAS,oBACRA,aAAS,qBAAsBjH,aAAM,mBAClCiH,aAAS,wBAAyBC,aAAU,GAEnD,SAAC9D,GAAD,OACjB,cAACgG,GAAA,EAAD,2BAAYhG,GAAZ,IAAmBsE,eAAe,gCAAlC,SACE,eAACC,GAAA,EAAD,WACE,cAAC0B,GAAA,EAAD,CACE/G,MAAM,cACN4C,OAAO,UACPY,UAAWlL,EAAUC,MAHvB,SAME,cAACyO,GAAA,EAAD,CAAaC,WAAW,gBAI1B,cAAC3B,GAAA,EAAD,CAAW1C,OAAO,mBAAmB+C,SAAU,CAAChB,kBAChD,cAACuC,GAAA,EAAD,CAAWtE,OAAO,sBAAsB5C,MAAM,sBAAsB9G,QAAS,CAAEiO,OAAQ,aAAcC,MAAM,EAAOC,WAAW,KAC7H,cAAC/B,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAM7C,OAAO,iBAAiB+C,SAAU,CAAChB,kBAC7E,cAACW,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,uBAAuB+C,SAAU,CAAChB,kBACrG,cAACqC,GAAA,EAAD,CAAapE,OAAO,mBAAmB0E,QAAS,CAC9C,CAAEjL,GAAI,IAAKhC,KAAM,eACjB,CAAEgC,GAAI,IAAKhC,KAAM,QACjB,CAAEgC,GAAI,IAAKhC,KAAM,iBAEnB,cAACiL,GAAA,EAAD,CAAW1C,OAAO,iBAAiB+C,SAAU,CAAChB,kBAC9C,cAACW,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAM7C,OAAO,gBAAgB+C,SAAU,CAAChB,kBAC5E,cAACW,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,GAAK7C,OAAO,uBAAuB+C,SAAU,CAAChB,0BCjClFE,GAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAYF,SAAUA,EAAU9E,MAAM,uBA2D3BiF,GAjDE,SAACnE,GAAD,OACf,cAACoE,GAAA,EAAD,2BAAUpE,GAAV,IAAiB0D,UAAU,EAAOW,QAAS,cAAC,GAAD,IAAqBC,eAAe,gCAA/E,SAEE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,UAAQ,EAACvF,MAAM,KAAK4C,OAAO,OACtC,cAAC0C,GAAA,EAAD,CAAW1C,OAAO,mBAAmB+C,SAAU,CAAChB,kBAChD,cAACoC,GAAA,EAAD,CACE/G,MAAM,cACN4C,OAAO,UACPY,UAAWlL,EAAUC,MAHvB,SAME,cAACyO,GAAA,EAAD,CAAaC,WAAW,gBAI1B,cAAC3B,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,iBAAiB+C,SAAU,CAAChB,kBAC9F,cAACW,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,uBAAuB+C,SAAU,CAAChB,kBACrG,cAACW,GAAA,EAAD,CAAW1C,OAAO,iBAAiB+C,SAAU,CAAChB,kBAC9C,cAACqC,GAAA,EAAD,CAAapE,OAAO,mBAAmB0E,QAAS,CAC9C,CAAEjL,GAAI,IAAKhC,KAAM,eACjB,CAAEgC,GAAI,IAAKhC,KAAM,cACjB,CAAEgC,GAAI,IAAKhC,KAAM,WAEnB,cAACiL,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,GAAKC,WAAW,EAAM9C,OAAO,gBAAgB+C,SAAU,CAAChB,kBAC5F,cAACW,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,GAAK7C,OAAO,uBAAuB8C,WAAW,EAAMC,SAAU,CAAChB,kBACnG,cAACuC,GAAA,EAAD,CAAWtE,OAAO,sBAAsB5C,MAAM,sBAAsB9G,QAAS,CAAEiO,OAAQ,aAAcC,MAAM,EAAOC,WAAW,Y,UCpCpHpM,GARE,CACfgL,KAAMW,GACNV,KAAMqB,GACNlB,K,QAAMmB,EACNtK,OAAQuK,GACRlB,KAAMmB,I,mCCWR9B,KAAOC,GAAGC,WAAW,YAER,IAAIC,MAAOC,oBAEN2B,aAAgB/B,MAEhBnF,YAAW,CAC3BmH,MAAO,CAAEhH,MAAO,IAAK6C,QAAS,kBALhC,I,UCXexI,I,cCFO0J,aAAS,oBACRA,aAAS,qBAAsBjH,aAAM,mBAClCiH,aAAS,wBAAyBC,aAAU,GDRrD,CACfqB,KAAM4B,O,UEqBRjC,KAAOC,GAAGC,WAAW,YAER,IAAIC,MAAOC,oBAAxB,IAmDeQ,GA5CE,SAAC1F,GAEhB,OADAhD,QAAQC,IAAI,CAAC+C,UAGX,cAACqF,GAAA,EAAD,2BAAUrF,GAAV,aACD,eAACsF,GAAA,EAAD,CAAkBnF,UAAW,mBAA7B,UACS,cAAC0B,EAAA,EAAD,CAAWC,OAAO,OAClB,cAACW,EAAA,EAAD,CAAgBX,OAAO,UAAUY,UAAU,QAA3C,SAAmD,cAACb,EAAA,EAAD,CAAWC,OAAO,gBACrE,cAACW,EAAA,EAAD,CAAgBX,OAAO,cAAc5C,MAAO,gBAAgBwD,UAAU,aAAtE,SAAmF,cAACb,EAAA,EAAD,CAAWC,OAAO,qBAErG,cAACD,EAAA,EAAD,CAAWC,OAAO,eAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,YAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,yBAClB,cAAC6D,GAAA,EAAD,CAAa7D,OAAO,uBACpB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,4BAClB,cAACkF,GAAA,EAAD,CAAclF,OAAO,0BACrB,cAACkF,GAAA,EAAD,CAAclF,OAAO,8BACrB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,gCAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,yBAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,yBAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,4BAClB,cAACkF,GAAA,EAAD,CAAclF,OAAO,uBACrB,cAACkF,GAAA,EAAD,CAAclF,OAAO,kBAErB,cAACD,EAAA,EAAD,CAAWC,OAAO,oBAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,mBAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,uBAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,8BAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,qBAClB,cAACkF,GAAA,EAAD,CAAclF,OAAO,gBACrB,cAACkF,GAAA,EAAD,CAAclF,OAAO,qBACrB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,uBAClB,cAACkF,GAAA,EAAD,CAAclF,OAAO,6BACrB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,sBAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,4BAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,kCCpDxBpC,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCC,gBAAiB,CACfC,aAAc,gBAIZoG,GAA2B,SAACjH,GAChC,IAAMe,EAAUrB,KACVsB,EAAWC,cAETrH,EAASoG,EAATpG,KAER,OACE,cAACsH,EAAA,EAAD,CAAKC,OAAO,QAAZ,SACGC,OAAOC,KAAKzH,GACVa,MAAK,SAACzB,EAAGsI,GAAJ,OAAU1H,EAAK0H,GAAG/F,GAAK3B,EAAKZ,GAAGuC,MACpCU,KAAI,SAAUoE,EAAQkB,GACrB,OACE,cAACC,EAAA,EAAD,CAA6CC,MAAO7H,EAAKyG,GAAzD,SACE,eAACqB,EAAA,EAAD,CAAMC,GAAI,CAAER,OAAQ,YAApB,UACE,cAACS,EAAA,EAAD,CACEtC,MACE,wDAEE,cAACuC,EAAA,EAAD,CACEC,OAAO,KACPC,QAAQ,KACRC,MAAO,CAAEC,WAAY,UAI3BC,qBAAsB,CAAEH,QAAS,KAAME,WAAY,KACnDE,OACE,cAACC,EAAA,EAAD,CACEjD,QAAS,kBACP6B,EAAS,OAAQ,kBAAmBpH,EAAKyG,GAAQ9E,SAKzD,eAAC8G,EAAA,EAAD,CAAaV,GAAI,CAAEW,GAAI,GAAvB,UACE,eAACC,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,6BACA,cAACQ,EAAA,EAAD,CAAgBX,OAAO,UAAUY,UAAU,QAA3C,SACE,cAACb,EAAA,EAAD,CAAWC,OAAO,mBAItB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,iCAGA,cAACQ,EAAA,EAAD,CAAgBX,OAAO,cAAcY,UAAU,aAA/C,SACE,cAACb,EAAA,EAAD,CAAWC,OAAO,wBAItB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,wBACA,cAACJ,EAAA,EAAD,CACEC,OAAO,aACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,4BACA,cAACJ,EAAA,EAAD,CACEC,OAAO,UACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,uCAGA,cAACJ,EAAA,EAAD,CACEC,OAAO,uBACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,qCAGA,cAAC0D,GAAA,EAAD,CAAa7D,OAAO,0BAGtB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,4CAGA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,iCAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,8CAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,mCAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,wCAGA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,6BAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,0CAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,+BAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,mCAGA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,wBAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,qCAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,0BAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,qCAGA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,0BAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,gCAGA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,qBAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,kCAGA,cAACJ,EAAA,EAAD,CACEC,OAAO,kBACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,uCAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,4BAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,uCAGA,cAACJ,EAAA,EAAD,CACEC,OAAO,uBACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,0CAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,+BAEpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,0CAGA,cAACJ,EAAA,EAAD,CACEC,OAAO,0BACP3B,UAAWY,EAAQH,qBAGvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,iCAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,sBAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,qCAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,0BAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,4CAGA,cAACJ,EAAA,EAAD,CACEC,OAAO,4BACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,+BACA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,oBAEpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,mCAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,wBAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,8BACA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,mBAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,2CAGA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,gCAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,yCAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,8BAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,yCAGA,cAACJ,EAAA,EAAD,CACEC,OAAO,yBACP3B,UAAWY,EAAQH,4BAtODhH,EAAKyG,GAAQ9E,UAkPrD0L,GAAyBxG,aAAe,CACtC7G,KAAM,GACN6B,IAAK,IAGQwL,UCrQTvH,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCC,gBAAiB,CACf+B,QAAS,QACT7C,MAAO,IACP8C,WAAY,SACZC,SAAU,SACVC,aAAc,gBA0HHgD,GAvHM,SAAC9F,GACpB,IAAMe,EAAUrB,KACVlB,EAASC,cACXuE,EAAUC,aAAc,SAACtC,GAAD,OAAWA,EAAMuC,YAAYC,KAAK,SAC9D,OACE,cAACC,EAAA,EAAD,2BAAUpD,GAAV,IAAiBG,UAAU,WAA3B,SACG6C,EACC,cAAC,GAAD,IAEA,mCACE,eAACO,EAAA,EAAD,CAAUC,SAAS,OAAnB,UACE,cAAC3B,EAAA,EAAD,CAAWC,OAAO,OAClB,cAACW,EAAA,EAAD,CAAgBX,OAAO,UAAUY,UAAU,QAA3C,SACE,cAACb,EAAA,EAAD,CAAWC,OAAO,gBAEpB,cAACW,EAAA,EAAD,CAAgBX,OAAO,cAAcY,UAAU,aAA/C,SACE,cAACb,EAAA,EAAD,CAAWC,OAAO,qBAGpB,cAACD,EAAA,EAAD,CAAWC,OAAO,aAAa5C,MAAO,UACtC,cAAC2C,EAAA,EAAD,CACEC,OAAO,UACP5C,MAAO,UACPiB,UAAWY,EAAQH,kBAErB,cAACiB,EAAA,EAAD,CACEC,OAAO,uBACP5C,MAAO,qBACPiB,UAAWY,EAAQH,kBAErB,cAAC+E,GAAA,EAAD,CACE7D,OAAO,qBACP5C,MAAO,qBAET,cAAC8H,GAAA,EAAD,CACElF,OAAO,wBACP5C,MAAM,uBAGR,cAAC0G,GAAA,EAAD,CACE1G,MAAM,uBACN4C,OAAO,4BAET,cAACkF,GAAA,EAAD,CACE9H,MAAM,yBACN4C,OAAO,8BAET,cAAC8D,GAAA,EAAD,CACE1G,MAAM,0BACN4C,OAAO,gCAET,cAACkF,GAAA,EAAD,CAAc9H,MAAM,iBAAiB4C,OAAO,qBAC5C,cAAC8D,GAAA,EAAD,CAAW1G,MAAM,mBAAmB4C,OAAO,uBAC3C,cAACkF,GAAA,EAAD,CACE9H,MAAM,mBACN4C,OAAO,uBAET,cAACkF,GAAA,EAAD,CAAc9H,MAAM,cAAc4C,OAAO,kBACzC,cAACD,EAAA,EAAD,CACE3C,MAAM,gBACN4C,OAAO,kBACP3B,UAAWY,EAAQH,kBAGrB,cAACgF,GAAA,EAAD,CACE1G,MAAM,qBACN4C,OAAO,yBAET,cAACD,EAAA,EAAD,CACE3C,MAAM,qBACN4C,OAAO,uBACP3B,UAAWY,EAAQH,kBAErB,cAACgF,GAAA,EAAD,CACE1G,MAAM,wBACN4C,OAAO,4BAET,cAAC8D,GAAA,EAAD,CAAW1G,MAAM,gBAAgB4C,OAAO,mBACxC,cAAC8D,GAAA,EAAD,CAAW1G,MAAM,mBAAmB4C,OAAO,uBAC3C,cAACD,EAAA,EAAD,CACE3C,MAAM,0BACN4C,OAAO,4BACP3B,UAAWY,EAAQH,kBAErB,cAACgF,GAAA,EAAD,CAAW1G,MAAM,cAAc4C,OAAO,iBACtC,cAAC8D,GAAA,EAAD,CAAW1G,MAAM,kBAAkB4C,OAAO,qBAC1C,cAACkF,GAAA,EAAD,CAAc9H,MAAM,YAAY4C,OAAO,gBACvC,cAACkF,GAAA,EAAD,CACE9H,MAAM,wBACN4C,OAAO,6BAET,cAAC8D,GAAA,EAAD,CAAW1G,MAAM,kBAAkB4C,OAAO,sBAC1C,cAACD,EAAA,EAAD,CACE3C,MAAM,wBACN4C,OAAO,0BACP3B,UAAWY,EAAQH,kBAErB,cAACiB,EAAA,EAAD,CACE3C,MAAM,uBACN4C,OAAO,yBACP3B,UAAWY,EAAQH,kBAErB,cAACwB,EAAA,EAAD,IACA,cAACqB,EAAA,EAAD,CACEC,UAAU,EACV7E,UAAW,WACTL,EAAO,qBAETmF,QAAS,WACPnF,EAAO,gCC1DRuH,IAtEOlC,aAAS,oBACRA,aAAS,qBAAsBjH,aAAM,mBAClCiH,aAAS,wBAAyBC,aAAU,GAEnD,SAAC9D,GAAD,OACjB,cAACgG,GAAA,EAAD,2BAAYhG,GAAZ,IAAmBsE,eAAe,6BAAlC,SACC,eAACC,GAAA,EAAD,WACS,cAAC0B,GAAA,EAAD,CAAgBnE,OAAO,cAAcY,UAAU,aAA/C,SAA4D,cAACwD,GAAA,EAAD,CAAaC,WAAW,qBAEpF,cAAC3B,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAM7C,OAAO,eACjD,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,YAClE,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,yBAClE,cAACoF,GAAA,EAAD,CAAapF,OAAO,uBACpB,cAACoE,GAAA,EAAD,CAAapE,OAAO,wBAAwB0E,QAAS,CACrD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,4BAElB,cAACoE,GAAA,EAAD,CAAapE,OAAO,4BAA4B0E,QAAS,CACzD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAGjB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,gCAClB,cAACoE,GAAA,EAAD,CAAahH,MAAM,cAAc4C,OAAO,cAAc0E,QAAS,CAC/D,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAGjB,cAAC2M,GAAA,EAAD,CAAahH,MAAM,mBAAmB4C,OAAO,mBAAmB0E,QAAS,CACzE,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,uBAElB,cAACoE,GAAA,EAAD,CAAahH,MAAM,2BAA2B4C,OAAO,2BAA2B0E,QAAS,CACzF,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAAC2M,GAAA,EAAD,CAAapE,OAAO,qBAAqB0E,QAAS,CAClD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAGjB,cAAC2M,GAAA,EAAD,CAAapE,OAAO,gBAAgB0E,QAAS,CAC7C,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAACiL,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,oBAEnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,yBAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,yBACnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,4BAClB,cAACsE,GAAA,EAAD,CAAWtE,OAAO,mBAClB,cAACsE,GAAA,EAAD,CAAWtE,OAAO,uBAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,8BACnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,iBAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,4BACnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,qBAGlB,cAACsE,GAAA,EAAD,CAAWtE,OAAO,sBAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,4BACnE,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAQC,WAAW,EAAM9C,OAAO,mCClE1EiC,GAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAYF,SAAUA,EAAU9E,MAAM,uBA0FzBiF,GAhFE,SAACnE,GAAD,OACf,cAACoE,GAAA,EAAD,2BAAUpE,GAAV,IAAiB0D,UAAU,EAAQW,QAAS,cAAC,GAAD,IAAoBC,eAAe,6BAA/E,SAEJ,eAACC,GAAA,EAAD,WACY,cAACC,GAAA,EAAD,CAAWC,UAAQ,EAAC3C,OAAO,OAC3B,cAACmE,GAAA,EAAD,CAAgBnE,OAAO,cAAcY,UAAU,aAA/C,SAA4D,cAACwD,GAAA,EAAD,CAAaC,WAAW,qBAEpF,cAAC3B,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,eAClE,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,YAClE,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,yBAClE,cAACoF,GAAA,EAAD,CAAaxC,WAAY,CAAEC,UAAW,IAAM7C,OAAO,uBACnD,cAACoE,GAAA,EAAD,CAAapE,OAAO,wBAAwB0E,QAAS,CACrD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,4BAElB,cAACoE,GAAA,EAAD,CAAapE,OAAO,4BAA4B0E,QAAS,CACzD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,gCAElB,cAACoE,GAAA,EAAD,CAAapE,OAAO,mBAAmB0E,QAAS,CAChD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,uBAClB,cAACoE,GAAA,EAAD,CAAapE,OAAO,qBAAqB0E,QAAS,CAClD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAAC2M,GAAA,EAAD,CAAapE,OAAO,gBAAgB0E,QAAS,CAC7C,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAACiL,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,oBAEnE,cAACoE,GAAA,EAAD,CAAapE,OAAO,cAAc0E,QAAS,CAC3C,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAGjB,cAAC2M,GAAA,EAAD,CAAapE,OAAO,2BAA2B0E,QAAS,CACxD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAGjB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,yBAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,yBACnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,4BAClB,cAACsE,GAAA,EAAD,CAAWtE,OAAO,mBAClB,cAACsE,GAAA,EAAD,CAAWtE,OAAO,uBAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,8BACnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,iBAClB,cAACsE,GAAA,EAAD,CAAW1B,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,4BACnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,qBAElB,cAACsE,GAAA,EAAD,CAAWtE,OAAO,sBAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,4BACnE,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,kC,UCnEhE3H,GARE,CACfgL,KAAMgC,GACL/B,KAAMgC,GACN7B,K,QAAM8B,EACNjL,OAAQuK,GACRlB,KAAM6B,ICMH5H,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCC,gBAAiB,CACfC,aAAc,gBAIZ0G,GAA4B,SAACvH,GACjC,IAAMe,EAAUrB,KACVsB,EAAWC,cAETrH,EAASoG,EAATpG,KAER,OACE,cAACsH,EAAA,EAAD,CAAKC,OAAO,QAAZ,SACGC,OAAOC,KAAKzH,GACVa,MAAK,SAACzB,EAAGsI,GAAJ,OAAU1H,EAAK0H,GAAG/F,GAAK3B,EAAKZ,GAAGuC,MACpCU,KAAI,SAAUoE,EAAQkB,GACrB,OACE,cAACC,EAAA,EAAD,CAA6CC,MAAO7H,EAAKyG,GAAzD,SACE,eAACqB,EAAA,EAAD,CAAMC,GAAI,CAAER,OAAQ,YAApB,UACE,cAACS,EAAA,EAAD,CACEtC,MACE,yDAEE,cAACuC,EAAA,EAAD,CACEC,OAAO,KACPC,QAAQ,KACRC,MAAO,CAAEC,WAAY,UAI3BC,qBAAsB,CAAEH,QAAS,KAAME,WAAY,KACnDE,OACE,cAACC,EAAA,EAAD,CACEjD,QAAS,kBACP6B,EAAS,OAAQ,mBAAoBpH,EAAKyG,GAAQ9E,SAK1D,eAAC8G,EAAA,EAAD,CAAaV,GAAI,CAAEW,GAAI,GAAvB,UACE,eAACC,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,6BACA,cAACQ,EAAA,EAAD,CAAgBX,OAAO,UAAUY,UAAU,QAA3C,SACE,cAACb,EAAA,EAAD,CAAWC,OAAO,mBAItB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,iCAGA,cAACQ,EAAA,EAAD,CAAgBX,OAAO,cAAcY,UAAU,aAA/C,SACE,cAACb,EAAA,EAAD,CAAWC,OAAO,wBAItB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,8BACA,cAACJ,EAAA,EAAD,CACEC,OAAO,cACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,4BACA,cAACJ,EAAA,EAAD,CACEC,OAAO,UACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,uCAGA,cAACJ,EAAA,EAAD,CACEC,OAAO,uBACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,qCAGA,cAAC0D,GAAA,EAAD,CAAa7D,OAAO,0BAGtB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,4CAGA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,iCAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,8CAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,mCAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,wCAGA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,6BAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,0CAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,+BAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,mCAGA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,wBAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,qCAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,0BAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,qCAGA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,0BAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,gCAGA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,qBAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,kCAGA,cAACJ,EAAA,EAAD,CACEC,OAAO,kBACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,uCAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,4BAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,uCAGA,cAACJ,EAAA,EAAD,CACEC,OAAO,uBACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,0CAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,+BAEpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,0CAGA,cAACJ,EAAA,EAAD,CACEC,OAAO,0BACP3B,UAAWY,EAAQH,qBAGvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,iCAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,sBAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,qCAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,0BAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,4CAGA,cAACJ,EAAA,EAAD,CACEC,OAAO,4BACP3B,UAAWY,EAAQH,qBAIvB,eAAC2B,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,8BACA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,mBAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,2CAGA,cAAC+E,GAAA,EAAD,CAAclF,OAAO,gCAGvB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,yCAGA,cAAC2D,GAAA,EAAD,CAAW9D,OAAO,8BAGpB,eAACS,EAAA,EAAD,CAAYR,QAAQ,QAAQS,cAAY,EAAxC,UACE,sBAAMR,MAAO,CAAEC,WAAY,KAA3B,yCAGA,cAACJ,EAAA,EAAD,CACEC,OAAO,yBACP3B,UAAWY,EAAQH,4BA3NDhH,EAAKyG,GAAQ9E,UAuOrDgM,GAA0B9G,aAAe,CACvC7G,KAAM,GACN6B,IAAK,IAGQ8L,UC3PT7H,GAAYC,aAAW,SAACgB,GAAD,MAAY,CACvCC,gBAAiB,CACf+B,QAAS,QACT7C,MAAO,IACP8C,WAAY,SACZC,SAAU,SACVC,aAAc,gBAoIHgD,GAhIM,SAAC9F,GACpB,IAAMe,EAAUrB,KACVlB,EAASC,cACXuE,EAAUC,aAAc,SAACtC,GAAD,OAAWA,EAAMuC,YAAYC,KAAK,SAC9D,OACE,cAACC,EAAA,EAAD,2BAAUpD,GAAV,aACGgD,EACC,cAAC,GAAD,IAEA,mCACE,eAACO,EAAA,EAAD,CAAUC,SAAS,OAAOrD,UAAU,WAApC,UACE,cAAC0B,EAAA,EAAD,CAAWC,OAAO,OAClB,cAACW,EAAA,EAAD,CAAgBX,OAAO,UAAUY,UAAU,QAA3C,SACE,cAACb,EAAA,EAAD,CAAWC,OAAO,gBAEpB,cAACW,EAAA,EAAD,CAAgBX,OAAO,cAAcY,UAAU,aAA/C,SACE,cAACb,EAAA,EAAD,CAAWC,OAAO,qBAGpB,cAACD,EAAA,EAAD,CACE3C,MAAM,aACN4C,OAAO,cACP3B,UAAWY,EAAQH,kBAErB,cAACiB,EAAA,EAAD,CACE3C,MAAM,UACN4C,OAAO,UACP3B,UAAWY,EAAQH,kBAErB,cAACiB,EAAA,EAAD,CACE3C,MAAM,qBACN4C,OAAO,uBACP3B,UAAWY,EAAQH,kBAErB,cAAC+E,GAAA,EAAD,CAAazG,MAAM,mBAAmB4C,OAAO,uBAC7C,cAACkF,GAAA,EAAD,CACE9H,MAAM,yBACN4C,OAAO,8BAET,cAAC8D,GAAA,EAAD,CACE1G,MAAM,2BACN4C,OAAO,gCAET,cAACkF,GAAA,EAAD,CACE9H,MAAM,qBACN4C,OAAO,0BAET,cAAC8D,GAAA,EAAD,CACE1G,MAAM,uBACN4C,OAAO,4BAET,cAACkF,GAAA,EAAD,CAAc9H,MAAM,iBAAiB4C,OAAO,qBAC5C,cAAC8D,GAAA,EAAD,CAAW1G,MAAM,mBAAmB4C,OAAO,uBAC3C,cAACkF,GAAA,EAAD,CACE9H,MAAM,mBACN4C,OAAO,uBAET,cAACkF,GAAA,EAAD,CAAc9H,MAAM,cAAc4C,OAAO,kBAEzC,cAACD,EAAA,EAAD,CACE3C,MAAM,gBACN4C,OAAO,kBACP3B,UAAWY,EAAQH,kBAErB,cAACgF,GAAA,EAAD,CACE1G,MAAM,qBACN4C,OAAO,yBAET,cAACD,EAAA,EAAD,CACE3C,MAAM,qBACN4C,OAAO,uBACP3B,UAAWY,EAAQH,kBAErB,cAACgF,GAAA,EAAD,CACE1G,MAAM,wBACN4C,OAAO,4BAET,cAACD,EAAA,EAAD,CACE3C,MAAM,wBACN4C,OAAO,0BACP3B,UAAWY,EAAQH,kBAErB,cAACgF,GAAA,EAAD,CAAW1G,MAAM,gBAAgB4C,OAAO,mBACxC,cAAC8D,GAAA,EAAD,CAAW1G,MAAM,mBAAmB4C,OAAO,uBAC3C,cAACD,EAAA,EAAD,CACE3C,MAAM,0BACN4C,OAAO,4BACP3B,UAAWY,EAAQH,kBAErB,cAACoG,GAAA,EAAD,CAAc9H,MAAM,YAAY4C,OAAO,gBACvC,cAACkF,GAAA,EAAD,CACE9H,MAAM,wBACN4C,OAAO,6BAET,cAAC8D,GAAA,EAAD,CACE1G,MAAM,sBACN4C,OAAO,2BAGT,cAACD,EAAA,EAAD,CACE3C,MAAM,uBACN4C,OAAO,yBACP3B,UAAWY,EAAQH,kBAErB,cAACwB,EAAA,EAAD,CACEvD,UAAW,WACTL,EAAO,mBAETmF,QAAS,WACPnF,EAAO,uBAGX,cAACiF,EAAA,EAAD,CACEC,UAAU,EACV7E,UAAW,WACTL,EAAO,mBAETmF,QAAS,WACPnF,EAAO,gCCpERuH,IArEOlC,aAAS,oBACRA,aAAS,qBAAsBjH,aAAM,mBAClCiH,aAAS,wBAAyBC,aAAU,GAEnD,SAAC9D,GAAD,OACjB,cAACgG,GAAA,EAAD,2BAAYhG,GAAZ,IAAmBsE,eAAe,8BAAlC,SACA,eAACC,GAAA,EAAD,WACU,cAAC0B,GAAA,EAAD,CAAgBnE,OAAO,cAAcY,UAAU,aAA/C,SAA4D,cAACwD,GAAA,EAAD,CAAaC,WAAW,qBACpF,cAAC3B,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,gBAClE,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,YAClE,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,yBAClE,cAACoF,GAAA,EAAD,CAAapF,OAAO,uBACpB,cAACoE,GAAA,EAAD,CAAapE,OAAO,4BAA4B0E,QAAS,CACzD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,gCAElB,cAACoE,GAAA,EAAD,CAAapE,OAAO,wBAAwB0E,QAAS,CACrD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEhB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,4BAEnB,cAACoE,GAAA,EAAD,CAAapE,OAAO,mBAAmB0E,QAAS,CAChD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,uBAElB,cAACoE,GAAA,EAAD,CAAapE,OAAO,qBAAqB0E,QAAS,CAClD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAGjB,cAAC2M,GAAA,EAAD,CAAapE,OAAO,gBAAgB0E,QAAS,CAC7C,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAGjB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,oBAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,oBAEnE,cAACoE,GAAA,EAAD,CAAapE,OAAO,cAAc0E,QAAS,CAC3C,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAGjB,cAAC2M,GAAA,EAAD,CAAapE,OAAO,2BAA2B0E,QAAS,CACxD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAGjB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,yBAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,yBACnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,4BAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,4BACnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,mBAClB,cAACsE,GAAA,EAAD,CAAWtE,OAAO,uBAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,8BAEnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,2BAClB,cAACsE,GAAA,EAAD,CAAWtE,OAAO,gCAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,mCCjEzEiC,GAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAYF,SAAUA,EAAU9E,MAAM,uBA6FzBiF,GAnFE,SAACnE,GAAD,OACf,cAACoE,GAAA,EAAD,2BAAUpE,GAAV,IAAiB0D,UAAU,EAAQW,QAAS,cAAC,GAAD,IAAoBC,eAAe,8BAA/E,SAEJ,eAACC,GAAA,EAAD,WACY,cAACC,GAAA,EAAD,CAAW1C,OAAO,OAClB,cAACmE,GAAA,EAAD,CAAgBnE,OAAO,cAAcY,UAAU,aAA/C,SAA4D,cAACwD,GAAA,EAAD,CAAaC,WAAW,qBACpF,cAAC3B,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,gBAClE,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,YAClE,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,IAAMC,WAAW,EAAM9C,OAAO,yBAClE,cAACoF,GAAA,EAAD,CAAaxC,WAAY,CAAEC,UAAW,IAAM7C,OAAO,uBACnD,cAACoE,GAAA,EAAD,CAAapE,OAAO,4BAA4B0E,QAAS,CACzD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEhB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,gCAElB,cAACoE,GAAA,EAAD,CAAapE,OAAO,wBAAwB0E,QAAS,CACtD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,4BAElB,cAACoE,GAAA,EAAD,CAAapE,OAAO,mBAAmB5C,MAAM,mBAAmBsH,QAAS,CACzE,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEhB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,qBAAqB5C,MAAM,uBAE7C,cAACgH,GAAA,EAAD,CAAapE,OAAO,qBAAqB0E,QAAS,CACnD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAAC2M,GAAA,EAAD,CAAapE,OAAO,gBAAgB0E,QAAS,CAC7C,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAGjB,cAAC2M,GAAA,EAAD,CAAapE,OAAO,cAAc0E,QAAS,CAC3C,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAGjB,cAAC2M,GAAA,EAAD,CAAapE,OAAO,2BAA2B0E,QAAS,CACxD,CAAEjL,GAAI,IAAKhC,KAAM,MACjB,CAAEgC,GAAI,IAAKhC,KAAM,UAEjB,cAAC6M,GAAA,EAAD,CAAWtE,OAAO,oBAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,oBAGnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,yBAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,yBACnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,4BAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,4BACnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,mBAClB,cAACsE,GAAA,EAAD,CAAWtE,OAAO,uBAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,8BAKnE,cAACsE,GAAA,EAAD,CAAWtE,OAAO,2BAClB,cAACsE,GAAA,EAAD,CAAWtE,OAAO,gCAClB,cAAC0C,GAAA,EAAD,CAAWE,WAAY,CAAEC,UAAW,KAAOC,WAAW,EAAM9C,OAAO,kCC3D/EgD,KAAOC,GAAGC,WAAW,YAER,IAAIC,MAAOC,oBAAxB,IAmDeQ,GA5CE,SAAC1F,GAEhB,OADAhD,QAAQC,IAAI,CAAC+C,UAGX,cAACqF,GAAA,EAAD,2BAAUrF,GAAV,aACD,eAACsF,GAAA,EAAD,CAAkBnF,UAAW,mBAA7B,UACS,cAAC0B,EAAA,EAAD,CAAWC,OAAO,OAClB,cAACW,EAAA,EAAD,CAAgBX,OAAO,UAAUY,UAAU,QAA3C,SAAmD,cAACb,EAAA,EAAD,CAAWC,OAAO,gBACrE,cAACW,EAAA,EAAD,CAAgBX,OAAO,cAAcY,UAAU,aAA/C,SAA4D,cAACb,EAAA,EAAD,CAAWC,OAAO,qBAE9E,cAACD,EAAA,EAAD,CAAWC,OAAO,gBAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,YAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,yBAClB,cAAC6D,GAAA,EAAD,CAAa7D,OAAO,uBACpB,cAACkF,GAAA,EAAD,CAAclF,OAAO,8BACrB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,gCAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,yBAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,yBAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,4BAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,4BAClB,cAACkF,GAAA,EAAD,CAAclF,OAAO,uBACrB,cAACkF,GAAA,EAAD,CAAclF,OAAO,kBACrB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,oBAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,oBAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,mBAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,uBAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,8BAClB,cAACkF,GAAA,EAAD,CAAclF,OAAO,gBACrB,cAACkF,GAAA,EAAD,CAAclF,OAAO,6BACrB,cAACkF,GAAA,EAAD,CAAclF,OAAO,0BACrB,cAACkF,GAAA,EAAD,CAAclF,OAAO,qBACrB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,4BAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,2BAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,gCAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,2BAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,8B,UCxDf3H,GARE,CACfgL,KAAMW,GACLV,KAAMoC,GACNjC,K,QAAMkC,EACNrL,OAAQuK,GACRlB,KAAMmB,I,UCcHc,GAAoB,SAAC1H,GACzB,OAAOA,EAAMK,QAAUL,EAAMK,OAAOsH,SAClC,cAAC9F,EAAA,EAAD,CAAWC,OAAO,WAAW5C,MAAOc,EAAMd,QAE1C,cAAC2C,EAAA,EAAD,CAAWC,OAAO,QAAQ5C,MAAOc,EAAMd,SAwE5B6D,GAzDG,SAAC/C,GAEjB,IAAIgD,EAAUC,aAAc,SAACtC,GAAD,OAAWA,EAAMuC,YAAYC,KAAK,SAC9D,OACE,cAACC,EAAA,EAAD,2BACMpD,GADN,IAGEqD,kBAAmB,cAAC,EAAD,CAAkBrL,aAAa,UAClDyC,KAAM,CAAEC,MAAO,aAAcC,MAAO,QACpC2I,SAAS,EALX,SAOGN,EACC,cAAC4E,GAAA,EAAD,CAEEC,YAAa,cAAChG,EAAA,EAAD,CAAWC,OAAO,SAC/BgG,cACE,cAAC,GAAD,CAAmB5I,MAAM,mBAAmB6I,OAAO,YAOvD,qCACE,eAACxE,EAAA,EAAD,CAAUC,SAAS,OAAnB,UACE,cAAC3B,EAAA,EAAD,CAAWC,OAAO,OAClB,cAACW,EAAA,EAAD,CAAgBX,OAAO,cAAcY,UAAU,aAA/C,SAA4D,cAACb,EAAA,EAAD,CAAWC,OAAO,qBAE9E,cAACD,EAAA,EAAD,CAAWC,OAAO,gBAClB,cAAC8D,GAAA,EAAD,CAAW9D,OAAO,eAClB,cAACM,EAAA,EAAD,IACA,cAACqB,EAAA,EAAD,CAAcC,UAAU,OAG1B,cAACH,EAAA,EAAD,CAAUK,WAAS,EAACJ,SAAS,OAA7B,4BCpDKwE,IAfOnE,aAAS,oBACRA,aAAS,qBAAsBjH,aAAM,mBAClCiH,aAAS,wBAAyBC,aAAU,GAEnD,SAAC9D,GAAD,OACjB,cAACgG,GAAA,EAAD,2BAAYhG,GAAZ,aACE,eAACuE,GAAA,EAAD,WACQ,cAAC0B,GAAA,EAAD,CAAgBnE,OAAO,cAAcY,UAAU,aAA/C,SAA4D,cAACwD,GAAA,EAAD,CAAaC,WAAW,qBAEpF,cAAC3B,GAAA,EAAD,CAAWyD,WAAS,EAACnG,OAAO,wBCRlCiC,GAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAYF,SAAUA,EAAU9E,MAAM,uBAsCzBiF,GA5BE,SAACnE,GAAD,OACf,cAACoE,GAAA,EAAD,2BAAUpE,GAAV,IAAiB0D,UAAU,EAASW,QAAS,cAAC,GAAD,IAA7C,SAEE,eAACE,GAAA,EAAD,WACA,cAACC,GAAA,EAAD,CAAWC,UAAQ,EAAC3C,OAAO,OACrB,cAACmE,GAAA,EAAD,CAAgBnE,OAAO,cAAcY,UAAU,aAA/C,SAA4D,cAACwD,GAAA,EAAD,CAAaC,WAAW,qBAEpF,cAAC3B,GAAA,EAAD,CAAWyD,WAAS,EAACnG,OAAO,uBCRxCgD,KAAOC,GAAGC,WAAW,YAER,IAAIC,MAAOC,oBCjBhBM,IDiBR,I,wHEjBM9F,GAAYC,aAAW,SAAAgB,GAAK,MAAK,CACrC4E,KAAM,CAAE2C,SAAUvH,EAAMwH,QAAQ,IAChCC,cAAe,CACb,MAAO,CACLC,YAAa1H,EAAMwH,QAAQ,GAC3BG,WAAY,wDAGhBC,gBAAiB,CACf,MAAO,CACLF,YAAa1H,EAAMwH,QAAQ,GAC3BG,WAAY,4DA8DHE,GAzDC,SAAC,GAQV,IAPLC,EAOI,EAPJA,aACAL,EAMI,EANJA,cACA/I,EAKI,EALJA,OACA9F,EAII,EAJJA,KACAgM,EAGI,EAHJA,KACAmD,EAEI,EAFJA,SACAC,EACI,EADJA,MAEM5H,EAAUrB,KAEVkJ,EACJ,eAACC,GAAA,EAAD,CAAUF,MAAOA,EAAOG,QAAM,EAAC3J,QAASsJ,EAAxC,UACE,cAACM,GAAA,EAAD,CAAc5I,UAAWY,EAAQwE,KAAjC,SACGlG,EAAS,cAAC,KAAD,IAAiBkG,IAE7B,cAAC,KAAD,CAAYxD,QAAQ,UAAUiH,MAAM,gBAApC,SACGzP,OAKP,OACE,eAAC,WAAD,WACG6O,GAAiB/I,EAENuJ,EAGF,cAACK,GAAA,EAAD,CAAS3J,MAAO/F,EAAM2P,UAAU,QAAhC,SACGN,IAGb,cAACO,GAAA,EAAD,CAAUC,GAAI/J,EAAQgK,QAAQ,OAAOC,eAAa,EAAlD,SACE,cAAC,KAAD,CACEX,MAAOA,EACPY,UAAU,MACVC,gBAAc,EACdrJ,UAAWiI,EAAgBrH,EAAQqH,cAAgBrH,EAAQwH,gBAJ7D,SAMGG,UC8EIe,GApIF,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,YAAajM,EAA4B,EAA5BA,OAA4B,IAApBkL,aAAoB,SACvD,EAA0BxK,mBAAS,CACjCwL,WAAW,EACXC,gBAAgB,IAFlB,mBAAOC,EAAP,KAAcC,EAAd,KAMM1L,GADW6E,aAAc,SAACtC,GAAD,OAAWA,EAAMuC,YAAYC,KAAK,SACpD4G,aAAY,SAACF,GAAD,OAAWA,EAAMG,MAAMC,GAAGC,gBACnDH,aAAY,SAACF,GAAD,OAAWA,EAAMlJ,SAE7B,IAAM8H,EAAe,SAAC0B,GACpBL,GAAS,SAACD,GAAD,mBAAC,eAAgBA,GAAjB,kBAAyBM,GAAQN,EAAMM,SAGlD,OACE,eAAC,KAAD,CAAKC,GAAI,EAAT,UAGE,cAAC,GAAD,CACE3B,aAAc,kBAAMA,EAAa,cACjCpJ,OAAQwK,EAAMF,UACdvB,cAAehK,EACf7E,KAAK,QACLgM,KAAM,cAAC8E,GAAM9E,KAAP,IACNoD,MAAOA,EANT,SAQE,cAAC2B,GAAA,EAAD,CACEC,GAAI,SACJ1C,YAAa,OACb2C,SAAU,cAACH,GAAM9E,KAAP,IACVpG,QAASuK,EACTtB,cAAehK,EACfuK,MAAOA,MAGX,cAAC,GAAD,CACEF,aAAc,kBAAMA,EAAa,mBACjCpJ,OAAQwK,EAAMD,eACdxB,cAAehK,EACf7E,KAAK,aACLgM,KAAM,cAACkF,GAAWlF,KAAZ,IACNoD,MAAOA,EANT,SAQE,cAAC2B,GAAA,EAAD,CACEC,GAAI,cACJ1C,YAAa,OACb2C,SAAU,cAACC,GAAWlF,KAAZ,IACVpG,QAASuK,EACTtB,cAAehK,EACfuK,MAAOA,MAoBX,cAAC,GAAD,CACEF,aAAc,kBAAMA,EAAa,uBACjCpJ,OAAQwK,EAAMa,mBACdtC,cAAehK,EACf7E,KAAK,iBACLgM,KAAM,cAAC,GAAcA,KAAf,IACNoD,MAAOA,EANT,SAQE,cAAC2B,GAAA,EAAD,CACEC,GAAI,mBACJ1C,YAAa,OACb2C,SAAU,cAAC,GAAcjF,KAAf,IACVpG,QAASuK,EACTtB,cAAehK,EACfuK,MAAOA,MAGX,cAAC,GAAD,CACEF,aAAc,kBAAMA,EAAa,wBACjCpJ,OAAQwK,EAAMc,oBACdvC,cAAehK,EACf7E,KAAK,kBACLgM,KAAM,cAAC,GAAeA,KAAhB,IACNoD,MAAOA,EANT,SAQE,cAAC2B,GAAA,EAAD,CACEC,GAAI,oBACJ1C,YAAa,OACb2C,SAAU,cAAC,GAAejF,KAAhB,IACVpG,QAASuK,EACTtB,cAAehK,EACfuK,MAAOA,MAqBVlL,M,UCtIQ,OAA0B,iCCMnCiC,GAAYC,YAAW,CAC3BL,MAAO,CACLsL,KAAM,EACN9H,aAAc,WACdF,WAAY,SACZC,SAAU,UAEZgI,OAAQ,CACND,KAAM,GAERE,WAAY,CACVjL,OAAQ,GACRC,MAAO,KAET8I,OAAQ,CACNmC,WAAY,UACZ/B,MAAO,UACPgC,UAAW,uCAyBAC,GArBM,SAACjL,GACpB,IAAMe,EAAUrB,KAChB,OACE,eAACwL,GAAA,EAAD,2BACMlL,GADN,IAEEmL,UAAW,EACXhL,UAAWY,EAAQ6H,OAHrB,UAKE,cAAC,KAAD,CACE7G,QAAQ,KACRiH,MAAM,UACN7I,UAAWY,EAAQzB,MACnB/D,GAAG,sBAEL,qBAAK6E,IAAKgL,GAAMC,IAAI,OAAOlL,UAAWY,EAAQ+J,aAE9C,sBAAM3K,UAAWY,EAAQ8J,cCvCzBS,GAAgB,SAACtL,GAAD,OAAW,cAACuL,GAAA,EAAD,2BAAavL,GAAb,IAAoBwL,KAAM,QAO5CC,GALA,SAACzL,GACd,OACE,cAAC0L,GAAA,EAAD,2BAAY1L,GAAZ,IAAmB2L,QAASL,GAAenB,KAAMV,GAAMmC,OAAQV,OCM7DW,GAAUC,cAyBDC,GAjBH,kBACV,eAACC,EAAA,EAAD,CAEEC,aAAcC,EACdC,aAAcA,EACdN,QAASA,GACTJ,OAAQC,GALV,UAOE,cAACU,EAAA,EAAD,aAAU7S,KAAK,SAAY8Q,KAC3B,cAAC+B,EAAA,EAAD,aAAU7S,KAAK,cAAiBkR,KAChC,cAAC2B,EAAA,EAAD,aAAU7S,KAAK,kBAAqB8S,KACpC,cAACD,EAAA,EAAD,aAAU7S,KAAK,mBAAsB+S,KACrC,cAACF,EAAA,EAAD,aAAU7S,KAAK,oBAAuBgT,SCtB3BC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzR,MAAK,YAAkD,IAA/C0R,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.05d4cf44.chunk.js","sourcesContent":["const PROD_URL = 'https://rlty-proxy.herokuapp.com/';\nconst DEV_URL = 'https://rlty-proxy.herokuapp.com/';\nconst LOCALHOST_URL = 'https://rlty-proxy.herokuapp.com/';\nexport const BASE_URL = (process.env.REACT_APP_ENVIRONMENT === 'production' ? PROD_URL : (process.env.REACT_APP_ENVIRONMENT === 'staging' ? DEV_URL : LOCALHOST_URL)) + 'api/v1/admin';\n\nexport const RESOURCES = {\n  users: 'users',\n  properties: 'properties',\n  property_types: 'property_types',\n  property_buyers: 'property_buyers',\n  property_sellers: 'property_sellers',\n  notes: 'notes',\n};\n\n/**\n * \n * @param {String} resourceName \n * @returns {String}\n */\nexport function getResourcePath(resourceName) {\n  return RESOURCES[resourceName.toLowerCase()];\n}\n","import { fetchUtils } from 'react-admin';\nimport { stringify } from 'query-string';\nimport _ from 'lodash';\nimport { BASE_URL, getResourcePath } from '../constants';\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: 'application/json'\n    });\n  }\n  const token = localStorage.getItem('auth');\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\nconst sentImageToS3 = async (files) => {\n\n  if ( files && files.length ){\n    let exts = '';\n\n    files.forEach((item,i)=>{\n      if ( item.rawFile ){\n        if ( i > 0 ){\n          exts += ',';\n        }\n        exts += item.rawFile.name.split('.')[1];\n      }\n    });\n\n    const response = await fetch(BASE_URL + '/upload/sign?ext='+exts);\n    const { data } = await response.json();\n\n    let imageUrls = [];\n\n    if ( data && data.length ){\n\n      for(let a=0; a<data.length; a++){\n        await fetch(data[a], {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          body: files[a].rawFile\n        });\n        const imageUrl = data[a].split('?')[0];\n        imageUrls.push(imageUrl);\n      }\n    }\n\n    return imageUrls;\n  }\n};\n\nexport default {\n  getList: (resource, params) => {\n    const mResource = getResourcePath(resource);\n\n    const { page, perPage } = params.pagination;\n    const { field, order } = params.sort;\n    const query = {\n      sort: JSON.stringify([field, order]),\n      range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n      filter: JSON.stringify(params.filter)\n    };\n    const url = `${BASE_URL}/${mResource}?${stringify(query)}`;\n\n    return httpClient(url).then(({ headers, json }) => ({\n      data: json.data,\n      total: parseInt(headers.get('content-range').split('/').pop(), 10)\n    }));\n  },\n\n  getOne: (resource, params) => {\n    \n    const mResource = getResourcePath(resource);\n    return httpClient(`${BASE_URL}/${mResource}/${params.id}`).then(\n      ({ json }) => ({\n        \n        data: json.data,\n        id:params.id\n      }\n    ));\n  },\n\n  getMany: (resource, params) => {\n    const mResource = getResourcePath(resource);\n    const query = {\n      filter: JSON.stringify({ id: params.ids }),\n      sort: '[]',\n      range: '[]'\n    };\n    const url = `${BASE_URL}/${mResource}?${stringify(query)}`;\n    return httpClient(url).then(({ json }) => ({ data: json.data }));\n  },\n\n  getManyReference: (resource, params) => {\n    const mResource = getResourcePath(resource);\n    const { page, perPage } = params.pagination;\n    const { field, order } = params.sort;\n    const query = {\n      sort: JSON.stringify([field, order]),\n      range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n      filter: JSON.stringify({\n        ...params.filter,\n        [params.target]: params.id\n      })\n    };\n    const url = `${BASE_URL}/${mResource}?${stringify(query)}`;\n\n    return httpClient(url).then(({ headers, json }) => ({\n      data: json.data,\n      total: parseInt(headers.get('content-range').split('/').pop(), 10)\n    }));\n  },\n\n  update: async (resource, params) => {\n    const mResource = getResourcePath(resource);\n    if (\n      _.has(params, 'data') &&\n      _.has(params.data, 'mediaUrls') &&\n      params.data.mediaUrls.length\n    ) {\n\n      let files = params.data.mediaUrls.filter((item)=>{\n        return item.rawFile;\n      });\n\n      let urls = await sentImageToS3(files);\n      params.data.mediaUrls = params.data.mediaUrls.filter((item)=>{\n        return !_.has(item,'rawFile');\n      });\n      params.data.mediaUrls = params.data.mediaUrls.map((item)=>{\n        let url = item;\n        if ( _.has(item,'media_url') ){\n          url = item.media_url;\n        }\n        return url;\n      });\n      if ( urls && urls.length ){\n        for(let a=0; a<urls.length; a++){\n          params.data.mediaUrls.push(urls[a]);\n        }\n      }\n    }\n\n    return httpClient(`${BASE_URL}/${mResource}/${params.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(params.data)\n    }).then(({ json }) => ({ data: json.data }));\n  },\n\n  updateMany: (resource, params) => {\n    const mResource = getResourcePath(resource);\n    const query = {\n      filter: JSON.stringify({ id: params.ids })\n    };\n    return httpClient(`${BASE_URL}/${mResource}?${stringify(query)}`, {\n      method: 'PUT',\n      body: JSON.stringify(params.data)\n    }).then(({ json }) => ({ data: json.data }));\n  },\n\n  create: async (resource, params) => {\n    const mResource = getResourcePath(resource);\n    if (\n      _.has(params, 'data') &&\n      _.has(params.data, 'mediaUrls') &&\n      params.data.mediaUrls.length\n    ) {\n      params.data.mediaUrls = await sentImageToS3(params.data.mediaUrls);\n    }\n\n    return httpClient(`${BASE_URL}/${mResource}`, {\n      method: 'POST',\n      body: JSON.stringify(params.data)\n    }).then(({ json }) => ({\n      data: { ...params.data, id: json.data.id }\n    }));\n  },\n\n  delete: (resource, params) => {\n    const mResource = getResourcePath(resource);\n    return httpClient(`${BASE_URL}/${mResource}/${params.id}`, {\n      method: 'DELETE'\n    }).then(({ json }) => ({ data: json.data }));\n  },\n\n  deleteMany: (resource, params) => {\n    const mResource = getResourcePath(resource);\n    const query = {\n      filter: { id: params.ids }\n    };\n\n    return httpClient(`${BASE_URL}/${mResource}?${stringify(query)}`, {\n      method: 'DELETE',\n      body: JSON.stringify(query)\n    }).then(({ json }) => ({ data: json.data }));\n  }\n};\n","import { BASE_URL } from '../constants';\nimport icon from '../assets/icon.png';\n\n// Authenticated by default\nexport default {\n  login: ({ username, password }) => {\n    const url = BASE_URL + '/login';\n\n    const request = new Request(url, {\n      method: 'POST',\n      body: JSON.stringify({ email: username, password: password }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    });\n    return fetch(request)\n      .then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then((response) => {\n       // debugger\n        console.log(response.data);\n        console.log(response.data && response.data.isAdmin);\n        if(response.data.email == \"admin@myrlty.com\"){\n          response.data.isAdmin = 1;\n        }\n        if (response.data && response.data.isAdmin) {\n          localStorage.removeItem('not_authenticated');\n          localStorage.setItem('auth', response.data.access_token);\n          return Promise.resolve();\n        }\n        localStorage.setItem('not_authenticated', true);\n        return Promise.reject(new Error('Authentication Failed'));\n      });\n  },\n  logout: async () => {\n    const url = BASE_URL + '/logout';\n    const token = localStorage.getItem('auth');\n\n    if (token) {\n      const request = new Request(url, {\n        method: 'POST',\n        body: JSON.stringify({ token }),\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      });\n      return fetch(request)\n        .then((response) => {\n          if (response.status < 200 || response.status >= 300) {\n            throw new Error(response.statusText);\n          }\n          return response.json();\n        })\n        .then((response) => {\n          if (response.data) {\n            localStorage.setItem('not_authenticated', true);\n            localStorage.clear();\n            return Promise.resolve();\n          }\n          localStorage.removeItem('not_authenticated');\n          return Promise.reject(new Error('Authentication Failed'));\n        });\n    } else {\n      localStorage.setItem('not_authenticated', true);\n      localStorage.clear();\n      return Promise.resolve();\n    }\n  },\n  checkError: ({ status }) => {\n    return status === 401 || status === 403\n      ? Promise.reject(new Error('check_error'))\n      : Promise.resolve();\n  },\n  checkAuth: () => {\n    const auth = localStorage.getItem('auth');\n    return auth !== null && auth !== '' ? Promise.resolve() : Promise.reject(new Error('Authentication Failed'));\n  },\n  getPermissions: () => {\n    const role = localStorage.getItem('roles');\n    return Promise.resolve(role);\n  },\n  getIdentity: () => {\n    return {\n      id: localStorage.getItem('login'),\n     // fullName: 'Athes',\n     // avatar: icon\n    };\n  }\n};\n","import { Fragment, useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport {\n  Button,\n  Confirm,\n  useDeleteMany,\n  useRefresh,\n  useNotify,\n  useUnselectAll\n} from 'react-admin';\n\nconst BulkDeleteButton = ({ selectedIds, resourceName }) => {\n  const [open, setOpen] = useState(false);\n  const refresh = useRefresh();\n  const notify = useNotify();\n  const unselectAll = useUnselectAll();\n  const [deleteMany, { loading }] = useDeleteMany(resourceName, selectedIds, {\n    onSuccess: () => {\n      refresh();\n      notify(`${resourceName} deleted`);\n      unselectAll(resourceName);\n    },\n    onFailure: (error) => {\n      notify(`Error: ${resourceName} not deleted. ${error}`, 'warning');\n    }\n  });\n\n  const handleClick = () => setOpen(true);\n  const handleDialogClose = () => setOpen(false);\n\n  const handleConfirm = () => {\n    deleteMany();\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Button label=\"ra.action.delete\" onClick={handleClick} />\n      <Confirm\n        isOpen={open}\n        loading={loading}\n        title={`Delete ${resourceName}`}\n        content=\"Are you sure you want to delete these items?\"\n        onConfirm={handleConfirm}\n        onClose={handleDialogClose}\n      />\n    </Fragment>\n  );\n};\n\nBulkDeleteButton.propTypes = {\n  selectedIds: PropTypes.array,\n  resourceName: PropTypes.string\n};\n\nexport default BulkDeleteButton;\n","import Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles({\n  avatar: {\n    height: 30,\n    width: 30\n  }\n});\n\nconst ImageAvatar = (props) => {\n  const classes = useStyles();\n  const styles = classes.avatar;\n\n  return <Avatar className={styles} src={props.record && props.record.photo ? props.record.photo : (props.record && props.record.info && props.record.info.photo ? props.record.info.photo : (props.record.image ? props.record.image : ''))} />;\n};\nImageAvatar.propTypes = {\n  record: PropTypes.object\n};\n\nImageAvatar.defaultProps = {\n  label: 'Image',\n  addLabel: true\n};\n\nexport default ImageAvatar;\n","// in src/comments.js\nimport * as React from \"react\";\nimport { Box, Card, CardHeader, CardContent, Typography } from \"@mui/material\";\nimport {\n  DateField,\n  EditButton,\n  NumberField,\n  TextField,\n  BooleanField,\n  useTranslate,\n  useListContext,\n  RaRecord,\n  RecordContextProvider,\n  DeleteButton,\n  useNotify,\n  ReferenceField,\n  useRedirect,\n} from \"react-admin\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fontWeight } from \"@mui/system\";\n\nconst useStyles = makeStyles((theme) => ({\n  descriptionText: {\n    overflowWrap: \"anywhere\",\n  },\n}));\n\nconst UsersMobileGrid = (props) => {\n  const classes = useStyles();\n  const redirect = useRedirect();\n\n  const { data } = props;\n\n  return (\n    <Box margin=\"0.5em\">\n      {Object.keys(data)\n        .sort((a, b) => data[b].id - data[a].id)\n        .map(function (record, index) {\n          return (\n            <RecordContextProvider key={data[record].id} value={data[record]}>\n              <Card sx={{ margin: \"0.5rem 0\" }}>\n                <CardHeader\n                  title={\n                    <>\n                      User #\n                      <TextField\n                        source=\"id\"\n                        variant=\"h6\"\n                        style={{ fontWeight: 800 }}\n                      />\n                    </>\n                  }\n                  titleTypographyProps={{ variant: \"h6\", fontWeight: 800 }}\n                  action={\n                    <EditButton\n                      onClick={() => redirect(\"edit\", \"users\", data[record].id)}\n                    />\n                  }\n                />\n                <CardContent sx={{ pt: 0 }}>\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}> Full Name:&nbsp;</span>\n                    <ReferenceField source=\"id\" reference=\"users\">\n                      <TextField source=\"full_name\" />\n                    </ReferenceField>\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>Agency Name:&nbsp;</span>\n                    <TextField source=\"agency_name\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}> Bio:&nbsp; </span>\n                    <TextField\n                      source=\"bio\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}> Location:&nbsp; </span>\n                    <TextField source=\"location\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Availability From:&nbsp;\n                    </span>\n                    <TextField source=\"availability_from\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Availability To:&nbsp;\n                    </span>\n                    <TextField source=\"availability_to\" />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </RecordContextProvider>\n          );\n        })}\n    </Box>\n  );\n};\n\nUsersMobileGrid.defaultProps = {\n  data: {},\n  ids: [],\n};\n\nexport default UsersMobileGrid;\n","import {\n  TextField,\n  List,\n  Datagrid,\n  Filter,\n  SearchInput,\n  DeleteButton,\n  FunctionField,\n  SimpleList,\n  DateField,\n  ReferenceField,\n  EditButton,\n  useNotify,\n} from \"react-admin\";\nimport BulkDeleteButton from \"../components/Buttons/BulkDeleteButton\";\nimport ImageAvatar from \"../components/ImageAvatar\";\nimport PropTypes from \"prop-types\";\nimport MarkAsBlocked from \"../components/Buttons/MarkAsBlocked\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport UsersMobileGrid from \"./UsersMobileGrid\";\n\nconst useStyles = makeStyles((theme) => ({\n  descriptionText: {\n    display: \"block\",\n    width: 250,\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n  },\n}));\n// const UserFilter = (props) => {\n//   return (\n//     <Filter {...props}>\n//       <SearchInput source=\"q\" alwaysOn />\n//     </Filter>\n//   );\n// };\n\nconst UserEmailUsername = (props) => {\n  return props.record && props.record.parentId ? (\n    <TextField source=\"username\" label={props.label} />\n  ) : (\n    <TextField source=\"email\" label={props.label} />\n  );\n};\n\nconst CreatedDate = (props) => {\n  return props.record && props.record.createdAt ? (\n    <FunctionField\n      render={() => new Date(props.record.createdAt).toDateString()}\n      label={props.label}\n    />\n  ) : (\n    \"\"\n  );\n};\n\nconst UsersList = (props) => {\n  const classes = useStyles();\n  const notify = useNotify();\n\n  let isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n  return (\n    <List\n      {...props}\n      /*  filters={<UserFilter />} */\n      bulkActionButtons={<BulkDeleteButton resourceName=\"users\" />}\n      sort={{ field: \"created_at\", order: \"DESC\" }}\n      hasShow={true}\n      className=\"listWrap\"\n    >\n      {isSmall ? (\n        <UsersMobileGrid />\n      ) : (\n        <>\n          <Datagrid rowClick=\"show\">\n            <TextField source=\"id\" />\n            <ReferenceField source=\"id\" label=\"User\" reference=\"users\">\n              <TextField source=\"full_name\" />\n            </ReferenceField>\n            <TextField source=\"agency_name\" />\n            <TextField source=\"bio\" className={classes.descriptionText} />\n            <TextField source=\"location\" />\n            <TextField source=\"availability_from\" />\n            <TextField source=\"availability_to\" />\n\n            <EditButton />\n            <DeleteButton\n              undoable={false}\n              onSuccess={() => {\n                notify(`User Deleted`);\n              }}\n              onError={() => {\n                notify(`Unable to delete`);\n              }}\n            />\n          </Datagrid>\n          <Datagrid optimized rowClick=\"edit\">\n            content\n          </Datagrid>\n        </>\n      )}\n    </List>\n  );\n};\n\nUsersList.propTypes = {\n  record: PropTypes.object,\n  label: PropTypes.string,\n};\n\nUserEmailUsername.propTypes = {\n  record: PropTypes.object,\n  label: PropTypes.string,\n};\n\nCreatedDate.propTypes = {\n  record: PropTypes.object,\n  label: PropTypes.string,\n};\n\nexport default UsersList;\n","import {\n  Create,\n  SimpleForm,\n  TextInput,\n  required,\n  NumberInput,\n  email,\n  minLength,\n  PasswordInput,\n  ReferenceInput,\n  AutocompleteInput,\n  TextField\n} from 'react-admin';\nconst validateName = [required('Name is required')];\nconst validateEmail = [required('Email is required'), email('Incorrect Email')];\nconst validatePassword = [required('Password is required'), minLength(6)];\n\nconst UserCreate = (props) => (\n  <Create {...props} successMessage=\"User created successfully\">\n    <SimpleForm>\n    <TextInput source=\"name\" validate={[required()]}/>\n              <TextInput source=\"email\" validate={[required()]}/>\n              <TextInput label=\"Password\" source=\"password\" validate={[required()]}/>\n              <TextInput label=\"Confirm Password\" source=\"confirm_password\" validate={[required()]}/>\n              <NumberInput label=\"Phone Number\" source=\"phone\" validate={[required()]}/>\n              <TextInput multiline={true} label=\"Agency Name\" source=\"agency_name\" validate={[required()]}/>\n              <TextInput label=\"Location\" source=\"location\" validate={[required()]}/>\n              <TextInput label=\"Availability From\" source=\"availability_from\" validate={[required()]}/>\n              <TextInput label=\"Availability To\" source=\"availability_to\" validate={[required()]}/>\n              <TextInput multiline={true}label=\"Bio\" source=\"bio\" validate={[required()]}/>\n             \n            {/*   <TextInput source=\"agency_name\" validate={[required()]}/>\n              <TextInput source=\"location\" validate={[required()]}/>\n              <TextInput source=\"availability_from\" validate={[required()]}/>\n              <TextInput source=\"availability_to\" validate={[required()]}/>\n              <TextInput source=\"bio\" validate={[required()]}/>\n             */} \n    </SimpleForm>\n  </Create>\n);\n\nexport default UserCreate;\n","import {\n  Edit,\n  SimpleForm,\n  TextInput,\n  required,\n  TopToolbar,\n  ListButton,\n  DateTimeInput,\n  DateInput\n} from 'react-admin';\nimport PropTypes from 'prop-types';\nimport DateFnsUtils from '@date-io/date-fns';\n//import { TimeInput } from \"react-admin-date-inputs2\";\nconst UserShowActions = ({ basePath }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Go Back to List\" />\n  </TopToolbar>\n);\n  \nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\n  \n  const UserEdit = (props) => (\n    <Edit {...props} undoable={false}   actions={<UserShowActions/>} successMessage=\"User updated successfully\">\n\n      <SimpleForm>\n              <TextInput disabled label=\"Id\" source=\"id\"/>\n              <TextInput inputProps={{ maxLength: 20 }} multiline={true} source=\"full_name\" validate={[required()]}/>\n              <TextInput inputProps={{ maxLength: 20 }} multiline={true} source=\"agency_name\" validate={[required()]}/>\n              <TextInput inputProps={{ maxLength: 50 }} multiline={true} source=\"location\" validate={[required()]}/>\n              <TextInput source=\"availability_from\" validate={[required()]}/>\n              <TextInput source=\"availability_to\" validate={[required()]}/>\n              <TextInput  multiline={true} source=\"bio\" validate={[required()]}/>\n             \n        {/* <TextInput source=\"users\" validate={[required()]} /> */}\n      </SimpleForm>\n    </Edit>\n  );\n  \n  UserShowActions.propTypes = {\n    basePath: PropTypes.string\n  };\n\n  UserEdit.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n\n  UserTitle.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n  \n  export default UserEdit;\n  ","import {useCallback} from 'react';\nimport {\n  Show,\n  TextField,\n  ShowController,\n  TabbedShowLayout,\n  Tab,\n  Datagrid,\n  ArrayField,\n  ImageField,\n  ListButton,\n  TopToolbar,\n  DateField,\n  TextInput,\n  SimpleShowLayout\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageAvatar from '../components/ImageAvatar';\nimport PropTypes, { element } from 'prop-types';\nimport ResponsiveGallery from 'react-responsive-gallery';\n//import moment from 'moment';\nimport moment from 'moment-timezone';\nimport _ from 'lodash';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nmoment.tz.setDefault('UTC/Etc');\n\nlet offset = new Date().getTimezoneOffset();\n\nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\nconst ShowUser = (props) => {\n  console.log({props})\n  return (    \n    \n        <Show\n          {...props}\n                      \n        >\n\n                 <SimpleShowLayout className={\"textWrapperStyle\"}>\n\n              <TextField source=\"id\" label=\"User Id\" />\n              <TextField source=\"full_name\" />\n              <TextField label=\"Agency Name\" source=\"agency_name\" />\n              <TextField label=\"Location\" source=\"location\" />\n              <TextField label=\"Availability From\" source=\"availability_from\" />\n              <TextField label=\"Availability To\" source=\"availability_to\" />\n              <TextField label=\"Bio\" source=\"bio\" />\n              </SimpleShowLayout>\n\n                 \n        </Show>\n     \n    \n  );\n};\n\nexport default ShowUser;\n","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nimport UsersList from './UsersList';\nimport UserCreate from './UserCreate';\nimport UserEdit from './UserEdit';\nimport ShowUser from './ShowUser';\n\nconst resource = {\n  list: UsersList,\n  show: ShowUser,\n  icon: AccountCircleIcon,\n  //create: UserCreate,\n  edit: UserEdit\n};\n\nexport default resource;\n","import {useCallback} from 'react';\nimport {\n  Show,\n  TextField,\n  ShowController,\n  TabbedShowLayout,\n  Tab,\n  Datagrid,\n  ArrayField,\n  ImageField,\n  ListButton,\n  TopToolbar,\n  DateField,\n  TextInput,\n  SimpleShowLayout,\n  ReferenceField,\n  NumberField\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageAvatar from '../components/ImageAvatar';\nimport PropTypes, { element } from 'prop-types';\nimport ResponsiveGallery from 'react-responsive-gallery';\n//import moment from 'moment';\nimport moment from 'moment-timezone';\nimport _ from 'lodash';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nmoment.tz.setDefault('UTC/Etc');\n\nlet offset = new Date().getTimezoneOffset();\n\nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\nconst ShowUser = (props) => {\n  console.log({props})\n  return (    \n    \n    <Show {...props}>\n    <SimpleShowLayout className={\"textWrapperStyle\"}>\n        <TextField source=\"id\" />\n        <TextField source=\"property_title\" />\n        <ReferenceField source=\"user_id\" reference=\"users\"><TextField source=\"id\" /></ReferenceField>\n        <ReferenceField source=\"property_type_id\" reference=\"property_types\"><TextField source=\"category_name\" /></ReferenceField>\n        <TextField source=\"property_address\" />\n        <TextField source=\"property_description\" />\n        <NumberField source=\"property_price\" />\n        <NumberField source=\"property_area\" />\n        <NumberField source=\"property_square_feet\" />\n        <DateField source=\"property_year_built\" />\n        \n    </SimpleShowLayout>\n</Show>\n     \n    \n  );\n};\n\nexport default ShowUser;\n","// in src/comments.js\nimport * as React from \"react\";\nimport { Box, Card, CardHeader, CardContent, Typography } from \"@mui/material\";\nimport {\n  DateField,\n  EditButton,\n  NumberField,\n  TextField,\n  BooleanField,\n  useTranslate,\n  useListContext,\n  RaRecord,\n  RecordContextProvider,\n  DeleteButton,\n  useNotify,\n  ReferenceField,\n  useRedirect,\n} from \"react-admin\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fontWeight } from \"@mui/system\";\n\nconst useStyles = makeStyles((theme) => ({\n  descriptionText: {\n    overflowWrap: \"anywhere\",\n  },\n}));\n\nconst PropertiesMobileGrid = (props) => {\n  const classes = useStyles();\n  const redirect = useRedirect();\n\n  const { data } = props;\n\n  return (\n    <Box margin=\"0.5em\">\n      {Object.keys(data)\n        .sort((a, b) => data[b].id - data[a].id)\n        .map(function (record, index) {\n          return (\n            <RecordContextProvider key={data[record].id} value={data[record]}>\n              <Card sx={{ margin: \"0.5rem 0\" }}>\n                <CardHeader\n                  title={\n                    <>\n                      Property #\n                      <TextField\n                        source=\"id\"\n                        variant=\"h6\"\n                        style={{ fontWeight: 800 }}\n                      />\n                    </>\n                  }\n                  titleTypographyProps={{ variant: \"h6\", fontWeight: 800 }}\n                  action={\n                    <EditButton\n                      onClick={() =>\n                        redirect(\"edit\", \"properties\", data[record].id)\n                      }\n                    />\n                  }\n                />\n                <CardContent sx={{ pt: 0 }}>\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}> User Name:&nbsp;</span>\n                    <ReferenceField source=\"id\" reference=\"users\">\n                      <TextField source=\"full_name\" />\n                    </ReferenceField>\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>Type:&nbsp;</span>\n                    <ReferenceField\n                      source=\"property_type_id\"\n                      reference=\"property_types\"\n                    >\n                      <TextField source=\"category_name\" />\n                    </ReferenceField>\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}> Address:&nbsp; </span>\n                    <TextField\n                      source=\"property_address\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}> Title:&nbsp; </span>\n                    <TextField\n                      source=\"property_title\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>Price:&nbsp;</span>\n                    <NumberField\n                      source=\"property_price\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>Area:&nbsp;</span>\n                    <NumberField\n                      source=\"property_area\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>SQFT:&nbsp;</span>\n                    <NumberField\n                      source=\"property_square_feet\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>Year Built:&nbsp;</span>\n                    <DateField source=\"property_year_built\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>Description:&nbsp;</span>\n                    <TextField\n                      source=\"property_description\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </RecordContextProvider>\n          );\n        })}\n    </Box>\n  );\n};\n\nPropertiesMobileGrid.defaultProps = {\n  data: {},\n  ids: [],\n};\n\nexport default PropertiesMobileGrid;\n","import {\n  TextField,\n  List,\n  Datagrid,\n  ReferenceField,\n  NumberField,\n  DateField,\n  Filter,\n  SearchInput,\n  DeleteButton,\n  FunctionField,\n  SimpleList,\n  EditButton,\n  useNotify,\n} from \"react-admin\";\nimport BulkDeleteButton from \"../components/Buttons/BulkDeleteButton\";\nimport ImageAvatar from \"../components/ImageAvatar\";\nimport PropTypes from \"prop-types\";\nimport MarkAsBlocked from \"../components/Buttons/MarkAsBlocked\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropertiesMobileGrid from \"./PropertiesMobileGrid\";\n\nconst useStyles = makeStyles((theme) => ({\n  descriptionText: {\n    display: \"block\",\n    width: 100,\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n  },\n}));\n\nconst PropertyList = (props) => {\n  const classes = useStyles();\n  const notify = useNotify();\n  let isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n  return (\n    <List\n      {...props}\n      className=\"listWrap\"\n      sort={{ field: \"created_at\", order: \"DESC\" }}\n    >\n      {isSmall ? (\n        <PropertiesMobileGrid />\n      ) : (\n        <>\n          <Datagrid rowClick=\"show\">\n            <TextField source=\"id\" />\n            <ReferenceField label=\"Name\" source=\"user_id\" reference=\"users\">\n              <TextField source=\"full_name\" />\n            </ReferenceField>\n            <ReferenceField\n              label=\"Type\"\n              source=\"property_type_id\"\n              reference=\"property_types\"\n            >\n              <TextField source=\"category_name\" />\n            </ReferenceField>\n            <TextField\n              label=\"Address\"\n              source=\"property_address\"\n              className={classes.descriptionText}\n            />\n            <TextField\n              label=\"Title\"\n              source=\"property_title\"\n              className={classes.descriptionText}\n            />\n            <NumberField\n              label=\"Price\"\n              source=\"property_price\"\n              className={classes.descriptionText}\n            />\n            <NumberField\n              label=\"Area\"\n              source=\"property_area\"\n              className={classes.descriptionText}\n            />\n            <NumberField\n              label=\"SQFT\"\n              source=\"property_square_feet\"\n              className={classes.descriptionText}\n            />\n            <DateField label=\"YearBuilt\" source=\"property_year_built\" />\n            <TextField\n              label=\"Description\"\n              source=\"property_description\"\n              className={classes.descriptionText}\n            />\n\n            <EditButton />\n            <DeleteButton\n              undoable={false}\n              onSuccess={() => {\n                notify(`Property Deleted`);\n              }}\n              onError={() => {\n                notify(`Unable to delete`);\n              }}\n            />\n          </Datagrid>\n        </>\n      )}\n    </List>\n  );\n};\n\nexport default PropertyList;\n","import {\n  Create,\n  SimpleForm,\n  TextInput,\n  required,\n  NumberInput,\n  email,\n  minLength,\n  PasswordInput,\n  ReferenceInput,\n  AutocompleteInput,\n  SelectInput,\n  DateInput,\n  DateTimeInput,\n  SelectField\n} from 'react-admin';\nimport { TimeInput } from 'react-admin-date-inputs2';\nimport { RESOURCES } from '../constants';\n\nconst validateName = [required('Name is required')];\nconst validateEmail = [required('Email is required'), email('Incorrect Email')];\nconst validatePassword = [required('Password is required'), minLength(6)];\n\nconst UserCreate = (props) => (\n  <Create {...props} successMessage=\"Property created successfully\">\n    <SimpleForm>\n      <ReferenceInput\n        label=\"select user\"\n        source=\"user_id\"\n        reference={RESOURCES.users}\n      //filter={{ is_artist: true }}\n      >\n        <SelectInput optionText=\"full_name\" />\n\n      </ReferenceInput>\n\n      <TextInput source=\"property_address\" validate={[required()]} />\n      <DateInput source=\"property_year_built\" label=\"property year built\" options={{ format: 'YYYY-MM-DD', ampm: false, clearable: true }} />\n      <TextInput inputProps={{ maxLength: 20 }} source=\"property_title\" validate={[required()]} />\n      <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"property_description\" validate={[required()]} />\n      <SelectInput source=\"property_type_id\" choices={[\n        { id: '1', name: 'residential' },\n        { id: '2', name: 'land' },\n        { id: '3', name: 'commercial' },\n      ]} />\n      <TextInput source=\"property_price\" validate={[required()]} />\n      <TextInput inputProps={{ maxLength: 10 }} source=\"property_area\" validate={[required()]} />\n      <TextInput inputProps={{ maxLength: 8 }} source=\"property_square_feet\" validate={[required()]} />\n      {/*  <TextInput source=\"latitude\" validate={[required()]} />\n            <TextInput source=\"longitude\" validate={[required()]} />\n       */}\n    </SimpleForm>\n  </Create>\n);\n\nexport default UserCreate;\n","import {\n  Edit,\n  SimpleForm,\n  TextInput,\n  required,\n  TopToolbar,\n  ListButton,\n  ReferenceInput,\n  SelectInput,\n  DateTimeInput,\n  DateInput\n} from 'react-admin';\nimport PropTypes from 'prop-types';\nimport { RESOURCES } from '../constants';\nconst UserShowActions = ({ basePath }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Go Back to List\" />\n  </TopToolbar>\n);\n\nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\n\nconst UserEdit = (props) => (\n  <Edit {...props} undoable={false} actions={<UserShowActions />} successMessage=\"Property updated successfully\">\n\n    <SimpleForm>\n      <TextInput disabled label=\"Id\" source=\"id\" />\n      <TextInput source=\"property_address\" validate={[required()]} />\n      <ReferenceInput\n        label=\"select user\"\n        source=\"user_id\"\n        reference={RESOURCES.users}\n      //filter={{ is_artist: true }}\n      >\n        <SelectInput optionText=\"full_name\" />\n\n      </ReferenceInput>\n\n      <TextInput inputProps={{ maxLength: 20 }} multiline={true} source=\"property_title\" validate={[required()]} />\n      <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"property_description\" validate={[required()]} />\n      <TextInput source=\"property_price\" validate={[required()]} />\n      <SelectInput source=\"property_type_id\" choices={[\n        { id: '1', name: 'residential' },\n        { id: '2', name: 'commercial' },\n        { id: '3', name: 'land' },\n      ]} />\n      <TextInput inputProps={{ maxLength: 8 }} multiline={true} source=\"property_area\" validate={[required()]} />\n      <TextInput inputProps={{ maxLength: 8 }} source=\"property_square_feet\" multiline={true} validate={[required()]} />\n      <DateInput source=\"property_year_built\" label=\"property year built\" options={{ format: 'YYYY-MM-DD', ampm: false, clearable: true }} />\n      {/*  <TextInput source=\"latitude\" validate={[required()]} />\n            <TextInput source=\"longitude\" validate={[required()]} />\n            */}\n      {/* <TextInput source=\"users\" validate={[required()]} /> */}\n    </SimpleForm>\n  </Edit>\n);\n\nUserShowActions.propTypes = {\n  basePath: PropTypes.string\n};\n\nUserEdit.propTypes = {\n  record: PropTypes.object,\n  label: PropTypes.string,\n};\n\nUserTitle.propTypes = {\n  record: PropTypes.object,\n  label: PropTypes.string,\n};\n\nexport default UserEdit;\n","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ShowProperty from './ShowProperty';\nimport PropertyList from './PropertyList';\nimport { ListGuesser,ShowGuesser } from 'react-admin';\nimport PropertyCreate from './PropertyCreate';\nimport PropertyEdit from './PropertyEdit';\nimport CottageIcon from '@mui/icons-material/Cottage';\n\nconst resource = {\n  list: PropertyList,\n  show: ShowProperty,\n  icon: CottageIcon,\n  create: PropertyCreate,\n  edit: PropertyEdit\n};\n\nexport default resource;\n","import {useCallback} from 'react';\nimport {\n  Show,\n  TextField,\n  ShowController,\n  TabbedShowLayout,\n  Tab,\n  Datagrid,\n  ArrayField,\n  ImageField,\n  ListButton,\n  TopToolbar,\n  DateField\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageAvatar from '../components/ImageAvatar';\nimport PropTypes, { element } from 'prop-types';\nimport ResponsiveGallery from 'react-responsive-gallery';\n//import moment from 'moment';\nimport moment from 'moment-timezone';\nimport _ from 'lodash';\n\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nmoment.tz.setDefault('UTC/Etc');\n\nlet offset = new Date().getTimezoneOffset();\n\nconst localizer = momentLocalizer(moment);\n\nconst useStyles = makeStyles({\n  idBox: { width: 300, display: 'inline-block' },\n});\n\nconst UserShowActions = ({ basePath }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Go Back to List\" />\n  </TopToolbar>\n);\nconst MyGallery = (props) => {\n\n  let images = [];\n  if( props.record && props.record.gallery && props.record.gallery.length){\n    props.record.gallery.forEach(element =>{\n      images.push({src:element.media_url});\n    });\n  }\n\n  return(\n    <ResponsiveGallery \n      useLightBox\n      images={images}\n      screenWidthSizes={{\n        xs: 400,\n        s: 600,\n        m: 800,\n        l: 1000,\n        xl: 1200\n      }}\n      numOfImagesPerRow={{\n        xs: 1,\n        s: 2,\n        m: 3,\n        l: 4,\n        xl: 5,\n        xxl: 5\n      }}\n      imagesPaddingBottom={{\n        xs: 5,\n        s: 10,\n        m: 15,\n        l: 20,\n        xl: 25,\n        xxl: 20\n      }}\n      imagesMaxWidth={{\n        xs: 100,\n        s: 100,\n        m: 90,\n        l: 90,\n        xl: 100,\n        xxl: 100\n      }}\n      colsPadding={{\n        xs: 5,\n        s: 10,\n        m: 15,\n        l: 10,\n        xl: 10,\n        xxl: 10\n      }}  \n    />\n  );\n};\nconst MyCalendar = (props) => {\nconsole.log(props);\n  const mDate = (date) => {\n    if ( offset > 0 ){\n      return moment(date).subtract(offset,'minutes').format();\n    }else{\n      return moment(date).add(offset,'minutes').format();\n    }\n  };\n\n  let calendarEvents = [];\n  if ( props.record && props.record.events && props.record.events.length ){\n    props.record.events.forEach(element => {\n      calendarEvents.push({\n        id: element.id,\n        title: 'Event: '+element.name+ ' at '+element.venue,\n        start: mDate(element.start),\n        end: mDate(element.end),\n        type: 'events'\n      });\n    });\n  }\n  if ( props.record && props.record.sessions && props.record.sessions.length ){\n    props.record.sessions.forEach(element => {\n      calendarEvents.push({\n        id: element.id,\n        title: 'Session: '+element.name,\n        start: mDate(element.start),\n        end: mDate(element.end),\n        type: 'sessions'\n      });\n    });\n  }\n  if ( props.record && props.record.seasons && props.record.seasons.length ){\n    props.record.seasons.forEach(element => {\n      calendarEvents.push({\n        id: element.id,\n        title: 'Season: '+element.name,\n        start: mDate(element.start),\n        end: mDate(element.end),\n        type: 'seasons'\n      });\n    });\n  }\n  if ( props.record && props.record.meetings && props.record.meetings.length ){\n    props.record.meetings.forEach(element => {\n      calendarEvents.push({\n        id: element.id,\n        title: 'Meeting: with '+element.host,\n        start: mDate(element.start),\n        end: mDate(element.end),\n        type: 'meetings'\n      });\n    });\n  }\n  if ( props.record && props.record.facilities && props.record.facilities.length ){\n    props.record.facilities.forEach(element => {\n      calendarEvents.push({\n        id: element.id,\n        title: 'Facility: '+element.name,\n        start:  mDate(element.start),\n        end: mDate(element.end),\n        type: 'facilityservices'\n      });\n    });\n  }\n\n  const eventPropGetter = useCallback(\n    () => ({\n      ...({\n        style: {\n          backgroundColor: '#042747',\n          color: '#ffffff'\n        },\n      }),\n    }),\n    []\n  );\n\n  return (\n    <Calendar\n      localizer={localizer}\n      popup={true}\n      // onShowMore={(events, date) => setState({ showModal: true, events })}\n      onSelectEvent={(event)=>{\n        console.log(event);\n        window.location.href = window.location.href.replace(window.location.hash,'')+'#/'+event.type+'/'+event.id+'/show';\n        //window.location.href = window.location.href.replace( /show\\/\\d+/g, 'show/'+(event.type === 'event' ? 1 : (event.type === 'session' ? 2 : (event.type === 'season' ? 3 : 0))));\n      }}\n      events={calendarEvents}\n      eventPropGetter={eventPropGetter}\n      step={60}\n      defaultDate={moment().format()} />\n  );\n};\n\nconst ShowUser = (props) => {\n  const classes = useStyles();\n  return (\n    <ShowController {...props}>\n      {(controllerProps) => (\n        <Show {...props} {...controllerProps} title={`User ${\n          !_.isUndefined(controllerProps.record)\n            ? controllerProps.record.name\n            : ''\n        }`} actions={<UserShowActions/>}   >\n          <TabbedShowLayout>\n            <Tab label=\"Details\">\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.photo && (\n                  <ImageAvatar source=\"info.photo\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.photo && (\n                  <ImageAvatar source=\"photo\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.image && (\n                  <ImageAvatar source=\"image\" className={classes.idBox} />\n                )\n              }\n              <TextField source=\"name\" label=\"Name\" className={classes.idBox} />\n              {\n                controllerProps.record &&\n                controllerProps.record.phone && (\n                  <TextField source=\"phone\" label=\"Phone\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.parentId &&\n                controllerProps.record.parent_name ? (\n                  <TextField source=\"username\" label=\"Username\" className={classes.idBox} />\n                ) : (\n                  <TextField source=\"email\" label=\"Email\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.role &&\n                controllerProps.record.role.role_name && (\n                  <TextField source=\"role.role_name\" label=\"Role\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.parentId &&\n                controllerProps.record.parent_name && (\n                  <TextField source=\"parent_name\" label=\"Parent User\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.parentId &&\n                controllerProps.record.privacy && (\n                  <TextField source=\"privacy\" label=\"Privacy\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.acheivement && (\n                  <TextField source=\"info.acheivement\" label=\"Acheivement\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.description && (\n                  <TextField source=\"info.description\" label=\"Description\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.organization_name && (\n                  <TextField source=\"info.organization_name\" label=\"Organization Name\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.experience && (\n                  <TextField source=\"info.experience\" label=\"Experience\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.team_name && (\n                  <TextField source=\"info.team_name\" label=\"Team Name\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.fullname && (\n                  <TextField source=\"info.fullname\" label=\"Full Name\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.dob && (\n                  <TextField source=\"info.dob\" label=\"Date of Birth\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.coverphoto && (\n                  <ImageField source=\"info.coverphoto\" label=\"Cover Photo\" className={classes.idBox} />\n                )\n              }\n              {\n                controllerProps.record &&\n                controllerProps.record.info &&\n                controllerProps.record.info.video && (\n                  <ImageField source=\"info.video\" label=\"Video\" className={classes.idBox} />\n                )\n              }\n\n            </Tab>\n            {\n              controllerProps.record &&\n              controllerProps.record.events &&\n              controllerProps.record.events.length && (\n                <Tab label=\"Events\">\n                  <ArrayField source=\"events\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Title\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.sessions &&\n              controllerProps.record.sessions.length && (\n                <Tab label=\"Sessions\">\n                  <ArrayField source=\"sessions\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Title\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.seasons &&\n              controllerProps.record.seasons.length && (\n                <Tab label=\"Seasons\">\n                  <ArrayField source=\"seasons\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Title\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.childrens &&\n              controllerProps.record.childrens.length && (\n                <Tab label=\"Childrens\">\n                  <ArrayField source=\"childrens\" addLabel={false}>\n\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Name\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.meetings &&\n              controllerProps.record.meetings.length && (\n                <Tab label=\"Meetings\">\n                  <ArrayField source=\"meetings\" addLabel={false}>\n                    <Datagrid>\n                      <DateField source=\"date\" label=\"Date\"  options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }}/>\n                      <TextField source=\"time\" label=\"Time\" />\n                      <TextField source=\"host\" label=\"Host\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.interests &&\n              controllerProps.record.interests.length && (\n                <Tab label=\"Interests\">\n                  <ArrayField source=\"interests\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Name\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.facilities &&\n              controllerProps.record.facilities.length && (\n                <Tab label=\"Facilities\">\n                  <ArrayField source=\"facilities\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Name\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.groups &&\n              controllerProps.record.groups.length && (\n                <Tab label=\"Groups\">\n                  <ArrayField source=\"groups\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"name\" label=\"Name\" />\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.teammembers &&\n              controllerProps.record.teammembers.length && (\n                <Tab label=\"Team Members\">\n                  <ArrayField source=\"teammembers\" addLabel={false}>\n                    <Datagrid>\n                      <TextField source=\"member\" label=\"Name\" />\n                      <DateField source=\"joined\" label=\"Joined Date\"  options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }}/>\n                    </Datagrid>\n                  </ArrayField>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record && (\n                <Tab label=\"Calendar\">\n                  <div style={{height: '70vh'}}>\n                    <MyCalendar\n                      record={controllerProps.record}\n                    />\n                  </div>\n                </Tab>\n              )\n            }\n            {\n              controllerProps.record &&\n              controllerProps.record.gallery && (\n                <Tab label=\"Gallery\">\n                  <MyGallery \n                    record={controllerProps.record}\n                  />\n                </Tab>\n              )\n            }\n          </TabbedShowLayout>\n        </Show>\n      )}\n    </ShowController>\n  );\n};\n\nUserShowActions.propTypes = {\n  basePath: PropTypes.string\n};\n\nMyCalendar.propTypes = {\n  record: PropTypes.object\n};\n\nMyGallery.propTypes = {\n  record: PropTypes.object\n};\nexport default ShowUser;\n","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ShowProperty from './ShowProperty';\nimport PropertyList from './PropertyList';\nimport { ListGuesser } from 'react-admin';\nimport PropertyCreate from './PropertyCreate';\nimport PropertyEdit from './PropertyEdit';\n\nconst resource = {\n  list: ListGuesser,\n  // show: ShowProperty,\n  // icon: AccountCircleIcon,\n  // create: PropertyCreate,\n//  edit: PropertyEdit\n};\n\nexport default resource;\n","import {\n  Create,\n  SimpleForm,\n  TextInput,\n  required,\n  NumberInput,\n  email,\n  minLength,\n  PasswordInput,\n  ReferenceInput,\n  AutocompleteInput\n} from 'react-admin';\n\nconst validateName = [required('Name is required')];\nconst validateEmail = [required('Email is required'), email('Incorrect Email')];\nconst validatePassword = [required('Password is required'), minLength(6)];\n\nconst UserCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" validate={validateName} />\n      <TextInput source=\"email\" type=\"email\" validate={validateEmail} />\n      <NumberInput source=\"phone\" />\n      <PasswordInput source=\"password\" validate={validatePassword} />\n      <ReferenceInput label=\"Role\" source=\"roleId\" reference=\"roles\" validate={[required()]}>\n        <AutocompleteInput optionText=\"role_name\" optionValue=\"id\" />\n      </ReferenceInput>\n    </SimpleForm>\n  </Create>\n);\n\nexport default UserCreate;\n","import {useCallback} from 'react';\nimport {\n  Show,\n  TextField,\n  ShowController,\n  TabbedShowLayout,\n  Tab,\n  Datagrid,\n  ArrayField,\n  ImageField,\n  ListButton,\n  TopToolbar,\n  DateField,\n  TextInput,\n  SimpleShowLayout,\n  ReferenceField,\n  NumberField,\n  BooleanField\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageAvatar from '../components/ImageAvatar';\nimport PropTypes, { element } from 'prop-types';\nimport ResponsiveGallery from 'react-responsive-gallery';\n//import moment from 'moment';\nimport moment from 'moment-timezone';\nimport _ from 'lodash';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nmoment.tz.setDefault('UTC/Etc');\n\nlet offset = new Date().getTimezoneOffset();\n\nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\nconst ShowUser = (props) => {\n  console.log({props})\n  return (    \n    \n    <Show {...props}>\n   <SimpleShowLayout className={\"textWrapperStyle\"}>\n            <TextField source=\"id\" />\n            <ReferenceField source=\"user_id\" reference=\"users\"><TextField source=\"full_name\" /></ReferenceField>\n            <ReferenceField source=\"property_id\" label= \"Property Name\" reference=\"properties\"><TextField source=\"property_title\" /></ReferenceField>\n    \n            <TextField source=\"buyer_name\" />\n            <TextField source=\"address\" />\n            <TextField source=\"title_company_closer\" />\n            <NumberField source=\"amount_of_contract\" />\n            <DateField source=\"contract_to_lender_date\" />\n            <BooleanField source=\"is_contract_to_lender\" />\n            <BooleanField source=\"is_earnest_money_received\" />\n            <DateField source=\"earnest_money_received_date\" />\n            <DateField source=\"home_inspection_date\" />\n            <TextField source=\"home_inspection_info\" />\n            <DateField source=\"termite_inspection_date\" />\n            <BooleanField source=\"is_survey_received\" />\n            <BooleanField source=\"is_new_survey\" />\n           \n            <TextField source=\"new_survey_info\" />\n            <DateField source=\"appraisal_date\" />\n            <DateField source=\"appraisal_due_date\" />\n            <TextField source=\"appraisal_additional_info\" />\n            <DateField source=\"title_commitment\" />\n            <BooleanField source=\"is_cda_sent\" />\n            <BooleanField source=\"is_home_warranty\" />\n            <DateField source=\"home_warranty_date\" />\n            <BooleanField source=\"is_switch_over_utilities\" />\n            <DateField source=\"option_period_end\" />\n            <TextField source=\"termite_inspection_info\" />\n            <TextField source=\"additional_info_entire\" />\n         \n        </SimpleShowLayout>\n</Show>\n     \n    \n  );\n};\n\nexport default ShowUser;\n","// in src/comments.js\nimport * as React from \"react\";\nimport { Box, Card, CardHeader, CardContent, Typography } from \"@mui/material\";\nimport {\n  DateField,\n  EditButton,\n  NumberField,\n  TextField,\n  BooleanField,\n  useTranslate,\n  useListContext,\n  RaRecord,\n  RecordContextProvider,\n  DeleteButton,\n  useNotify,\n  ReferenceField,\n  useRedirect,\n} from \"react-admin\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fontWeight } from \"@mui/system\";\n\nconst useStyles = makeStyles((theme) => ({\n  descriptionText: {\n    overflowWrap: \"anywhere\",\n  },\n}));\n\nconst PropertyBuyersMobileGrid = (props) => {\n  const classes = useStyles();\n  const redirect = useRedirect();\n\n  const { data } = props;\n\n  return (\n    <Box margin=\"0.5em\">\n      {Object.keys(data)\n        .sort((a, b) => data[b].id - data[a].id)\n        .map(function (record, index) {\n          return (\n            <RecordContextProvider key={data[record].id} value={data[record]}>\n              <Card sx={{ margin: \"0.5rem 0\" }}>\n                <CardHeader\n                  title={\n                    <>\n                      Property Buyer #\n                      <TextField\n                        source=\"id\"\n                        variant=\"h6\"\n                        style={{ fontWeight: 800 }}\n                      />\n                    </>\n                  }\n                  titleTypographyProps={{ variant: \"h6\", fontWeight: 800 }}\n                  action={\n                    <EditButton\n                      onClick={() =>\n                        redirect(\"edit\", \"property_buyers\", data[record].id)\n                      }\n                    />\n                  }\n                />\n                <CardContent sx={{ pt: 0 }}>\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}> User Name:&nbsp;</span>\n                    <ReferenceField source=\"user_id\" reference=\"users\">\n                      <TextField source=\"full_name\" />\n                    </ReferenceField>\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Property Title:&nbsp;\n                    </span>\n                    <ReferenceField source=\"property_id\" reference=\"properties\">\n                      <TextField source=\"property_title\" />\n                    </ReferenceField>\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>Buyer:&nbsp;</span>\n                    <TextField\n                      source=\"buyer_name\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}> Address:&nbsp; </span>\n                    <TextField\n                      source=\"address\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Title Company Closer:&nbsp;\n                    </span>\n                    <TextField\n                      source=\"title_company_closer\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Amount Of Contract:&nbsp;\n                    </span>\n                    <NumberField source=\"amount_of_contract\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Is Earnest Money Received:&nbsp;\n                    </span>\n                    <BooleanField source=\"is_earnest_money_received\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Earnest Money Received Date:&nbsp;\n                    </span>\n                    <DateField source=\"earnest_money_received_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Is Contract To Lender:&nbsp;\n                    </span>\n                    <BooleanField source=\"is_contract_to_lender\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Contract To Lender Date:&nbsp;\n                    </span>\n                    <DateField source=\"contract_to_lender_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Is Home Warranty:&nbsp;\n                    </span>\n                    <BooleanField source=\"is_home_warranty\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Home Warranty Date:&nbsp;\n                    </span>\n                    <DateField source=\"home_warranty_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Is Survey Received:&nbsp;\n                    </span>\n                    <BooleanField source=\"is_survey_received\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Is New Survey:&nbsp;\n                    </span>\n                    <BooleanField source=\"is_new_survey\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      New Survey Info:&nbsp;\n                    </span>\n                    <TextField\n                      source=\"new_survey_info\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Home Inspection Date:&nbsp;\n                    </span>\n                    <DateField source=\"home_inspection_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Home Inspection Info:&nbsp;\n                    </span>\n                    <TextField\n                      source=\"home_inspection_info\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Termite Inspection Date:&nbsp;\n                    </span>\n                    <DateField source=\"termite_inspection_date\" />\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Termite Inspection Info:&nbsp;\n                    </span>\n                    <TextField\n                      source=\"termite_inspection_info\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Appraisal Date:&nbsp;\n                    </span>\n                    <DateField source=\"appraisal_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Appraisal Due Date:&nbsp;\n                    </span>\n                    <DateField source=\"appraisal_due_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Appraisal Additional Info:&nbsp;\n                    </span>\n                    <TextField\n                      source=\"appraisal_additional_info\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>Closing Date:&nbsp;</span>\n                    <DateField source=\"closing_date\" />\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Title Commitment:&nbsp;\n                    </span>\n                    <DateField source=\"title_commitment\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>Is Cda Sent:&nbsp;</span>\n                    <BooleanField source=\"is_cda_sent\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Is Switch Over Utilities:&nbsp;\n                    </span>\n                    <BooleanField source=\"is_switch_over_utilities\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Option Period End Date:&nbsp;\n                    </span>\n                    <DateField source=\"option_period_end_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Additional Info Entire:&nbsp;\n                    </span>\n                    <TextField\n                      source=\"additional_info_entire\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </RecordContextProvider>\n          );\n        })}\n    </Box>\n  );\n};\n\nPropertyBuyersMobileGrid.defaultProps = {\n  data: {},\n  ids: [],\n};\n\nexport default PropertyBuyersMobileGrid;\n","import {\n  TextField,\n  List,\n  Datagrid,\n  ReferenceField,\n  NumberField,\n  DateField,\n  Filter,\n  SearchInput,\n  DeleteButton,\n  FunctionField,\n  SimpleList,\n  EditButton,\n  BooleanField,\n  useNotify,\n} from \"react-admin\";\nimport BulkDeleteButton from \"../components/Buttons/BulkDeleteButton\";\nimport ImageAvatar from \"../components/ImageAvatar\";\nimport PropTypes from \"prop-types\";\nimport MarkAsBlocked from \"../components/Buttons/MarkAsBlocked\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropertyBuyersMobileGrid from \"./PropertyBuyersMobileGrid\";\n\nconst useStyles = makeStyles((theme) => ({\n  descriptionText: {\n    display: \"block\",\n    width: 250,\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n  },\n}));\nconst PropertyList = (props) => {\n  const classes = useStyles();\n  const notify = useNotify();\n  let isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n  return (\n    <List {...props} className=\"listWrap\">\n      {isSmall ? (\n        <PropertyBuyersMobileGrid />\n      ) : (\n        <>\n          <Datagrid rowClick=\"show\">\n            <TextField source=\"id\" />\n            <ReferenceField source=\"user_id\" reference=\"users\">\n              <TextField source=\"full_name\" />\n            </ReferenceField>\n            <ReferenceField source=\"property_id\" reference=\"properties\">\n              <TextField source=\"property_title\" />\n            </ReferenceField>\n\n            <TextField source=\"buyer_name\" label={\"Buyer\"} />\n            <TextField\n              source=\"address\"\n              label={\"Address\"}\n              className={classes.descriptionText}\n            />\n            <TextField\n              source=\"title_company_closer\"\n              label={\"TitleCompanyCloser\"}\n              className={classes.descriptionText}\n            />\n            <NumberField\n              source=\"amount_of_contract\"\n              label={\"AmountOfContract\"}\n            />\n            <BooleanField\n              source=\"is_contract_to_lender\"\n              label=\"IsContractToLender\"\n            />\n\n            <DateField\n              label=\"ContractToLenderDate\"\n              source=\"contract_to_lender_date\"\n            />\n            <BooleanField\n              label=\"IsEarnestMoneyReceived\"\n              source=\"is_earnest_money_received\"\n            />\n            <DateField\n              label=\"EarnestMoneyReceiveDate\"\n              source=\"earnest_money_received_date\"\n            />\n            <BooleanField label=\"IsHomeWarranty\" source=\"is_home_warranty\" />\n            <DateField label=\"HomeWarrantyDate\" source=\"home_warranty_date\" />\n            <BooleanField\n              label=\"IsSurveyReceived\"\n              source=\"is_survey_received\"\n            />\n            <BooleanField label=\"IsNewSurvey\" source=\"is_new_survey\" />\n            <TextField\n              label=\"NewSurveyInfo\"\n              source=\"new_survey_info\"\n              className={classes.descriptionText}\n            />\n\n            <DateField\n              label=\"HomeInspectionDate\"\n              source=\"home_inspection_date\"\n            />\n            <TextField\n              label=\"HomeInspectionInfo\"\n              source=\"home_inspection_info\"\n              className={classes.descriptionText}\n            />\n            <DateField\n              label=\"TermiteInspectionDate\"\n              source=\"termite_inspection_date\"\n            />\n            <DateField label=\"AppraisalDate\" source=\"appraisal_date\" />\n            <DateField label=\"AppraisalDueDate\" source=\"appraisal_due_date\" />\n            <TextField\n              label=\"AppraisalAdditionalInfo\"\n              source=\"appraisal_additional_info\"\n              className={classes.descriptionText}\n            />\n            <DateField label=\"ClosingDate\" source=\"closing_date\" />\n            <DateField label=\"TitleCommitment\" source=\"title_commitment\" />\n            <BooleanField label=\"IsCdaSent\" source=\"is_cda_sent\" />\n            <BooleanField\n              label=\"IsSwitchOverUtilities\"\n              source=\"is_switch_over_utilities\"\n            />\n            <DateField label=\"OptionPeriodEnd\" source=\"option_period_end\" />\n            <TextField\n              label=\"TermiteInspectionInfo\"\n              source=\"termite_inspection_info\"\n              className={classes.descriptionText}\n            />\n            <TextField\n              label=\"AdditionalInfoEntire\"\n              source=\"additional_info_entire\"\n              className={classes.descriptionText}\n            />\n            <EditButton />\n            <DeleteButton\n              undoable={false}\n              onSuccess={() => {\n                notify(`Property Deleted`);\n              }}\n              onError={() => {\n                notify(`Unable to delete`);\n              }}\n            />\n          </Datagrid>\n        </>\n      )}\n    </List>\n  );\n};\n\nexport default PropertyList;\n","import {\n  Create,\n  SimpleForm,\n  TextInput,\n  required,\n  NumberInput,\n  email,\n  minLength,\n  PasswordInput,\n  ReferenceInput,\n  AutocompleteInput,\n  DateInput,\n  SelectInput\n} from 'react-admin';\n\nconst validateName = [required('Name is required')];\nconst validateEmail = [required('Email is required'), email('Incorrect Email')];\nconst validatePassword = [required('Password is required'), minLength(6)];\n\nconst UserCreate = (props) => (\n  <Create {...props} successMessage=\"Buyer created successfully\">\n   <SimpleForm>\n            <ReferenceInput source=\"property_id\" reference=\"properties\"><SelectInput optionText=\"property_title\" /></ReferenceInput>\n     \n            <TextInput inputProps={{ maxLength: 50 }} source=\"buyer_name\" />\n            <TextInput inputProps={{ maxLength: 50 }} multiline={true} source=\"address\" />\n            <TextInput inputProps={{ maxLength: 50 }} multiline={true} source=\"title_company_closer\" />\n            <NumberInput source=\"amount_of_contract\" />\n            <SelectInput source=\"is_contract_to_lender\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"contract_to_lender_date\" />\n            \n            <SelectInput source=\"is_earnest_money_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n          \n            <DateInput source=\"earnest_money_received_date\" />\n            <SelectInput label=\"Is CDA Sent\" source=\"is_cda_sent\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n          \n            <SelectInput label=\"Is Home Warranty\" source=\"is_home_warranty\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"home_warranty_date\" />\n            \n            <SelectInput label=\"is switch over utilities\" source=\"is_switch_over_utilities\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <SelectInput source=\"is_survey_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n          \n            <SelectInput source=\"is_new_survey\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"new_survey_info\" />\n            \n            <DateInput source=\"home_inspection_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"home_inspection_info\" />\n            <DateInput source=\"termite_inspection_date\" />\n            <DateInput source=\"appraisal_date\" />\n            <DateInput source=\"appraisal_due_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"appraisal_additional_info\" />\n            <DateInput source=\"closing_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"closing_additional_info\" />\n            <DateInput source=\"title_commitment\" />\n            \n            \n            <DateInput source=\"option_period_end\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"termite_inspection_info\" />\n            <TextInput inputProps={{ maxLength: 200 }}  multiline={true} source=\"additional_info_entire\" />\n        </SimpleForm>\n\n  </Create>\n);\n\nexport default UserCreate;\n","import {\n  Edit,\n  SimpleForm,\n  TextInput,\n  required,\n  TopToolbar,\n  ListButton,\n  NumberInput,\n  DateInput,\n  ReferenceInput,\n  SelectInput\n} from 'react-admin';\nimport PropTypes from 'prop-types';\nconst UserShowActions = ({ basePath }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Go Back to List\" />\n  </TopToolbar>\n);\n  \nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\n  \n  const UserEdit = (props) => (\n    <Edit {...props} undoable={false}  actions={<UserShowActions/>} successMessage=\"Buyer updated successfully\">\n\n<SimpleForm>\n            <TextInput disabled source=\"id\" />\n            <ReferenceInput source=\"property_id\" reference=\"properties\"><SelectInput optionText=\"property_title\" /></ReferenceInput>\n        \n            <TextInput inputProps={{ maxLength: 20 }} multiline={true} source=\"buyer_name\" />\n            <TextInput inputProps={{ maxLength: 20 }} multiline={true} source=\"address\" />\n            <TextInput inputProps={{ maxLength: 50 }} multiline={true} source=\"title_company_closer\" />\n            <NumberInput inputProps={{ maxLength: 20 }} source=\"amount_of_contract\" />\n            <SelectInput source=\"is_contract_to_lender\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"contract_to_lender_date\" />\n            \n            <SelectInput source=\"is_earnest_money_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"earnest_money_received_date\" />\n\n            <SelectInput source=\"is_home_warranty\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"home_warranty_date\" />\n            <SelectInput source=\"is_survey_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <SelectInput source=\"is_new_survey\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"new_survey_info\" />\n            \n            <SelectInput source=\"is_cda_sent\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n          \n            <SelectInput source=\"is_switch_over_utilities\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n          \n            <DateInput source=\"home_inspection_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"home_inspection_info\" />\n            <DateInput source=\"termite_inspection_date\" />\n            <DateInput source=\"appraisal_date\" />\n            <DateInput source=\"appraisal_due_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"appraisal_additional_info\" />\n            <DateInput source=\"closing_date\" />\n            <DateInput inputProps={{ maxLength: 200 }} multiline={true} source=\"closing_additional_info\" />\n            <DateInput source=\"title_commitment\" />\n            \n            <DateInput source=\"option_period_end\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"termite_inspection_info\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"additional_info_entire\" />\n            </SimpleForm>\n\n    </Edit>\n  );\n  \n  UserShowActions.propTypes = {\n    basePath: PropTypes.string\n  };\n\n  UserEdit.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n\n  UserTitle.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n  \n  export default UserEdit;\n  ","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ShowProperty from './PropertyBuyerShow';\nimport PropertyBuyerList from './PropertyBuyerList';\nimport { ListGuesser, ShowGuesser,EditGuesser, CreateGuesser } from 'react-admin';\nimport PropertyCreate from './PropertyBuyerCreate';\nimport PropertyBuyerEdit from './PropertyBuyerEdit';\nimport PropertyBuyerShow from './PropertyBuyerShow';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\n\n\nconst resource = {\n  list: PropertyBuyerList,\n   show: PropertyBuyerShow,\n   icon: ShoppingCartIcon,\n   create: PropertyCreate,\n   edit: PropertyBuyerEdit\n};\n\nexport default resource;\n","// in src/comments.js\nimport * as React from \"react\";\nimport { Box, Card, CardHeader, CardContent, Typography } from \"@mui/material\";\nimport {\n  DateField,\n  EditButton,\n  NumberField,\n  TextField,\n  BooleanField,\n  useTranslate,\n  useListContext,\n  RaRecord,\n  RecordContextProvider,\n  DeleteButton,\n  useNotify,\n  ReferenceField,\n  useRedirect,\n} from \"react-admin\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fontWeight } from \"@mui/system\";\n\nconst useStyles = makeStyles((theme) => ({\n  descriptionText: {\n    overflowWrap: \"anywhere\",\n  },\n}));\n\nconst PropertySellersMobileGrid = (props) => {\n  const classes = useStyles();\n  const redirect = useRedirect();\n\n  const { data } = props;\n\n  return (\n    <Box margin=\"0.5em\">\n      {Object.keys(data)\n        .sort((a, b) => data[b].id - data[a].id)\n        .map(function (record, index) {\n          return (\n            <RecordContextProvider key={data[record].id} value={data[record]}>\n              <Card sx={{ margin: \"0.5rem 0\" }}>\n                <CardHeader\n                  title={\n                    <>\n                      Property Seller #\n                      <TextField\n                        source=\"id\"\n                        variant=\"h6\"\n                        style={{ fontWeight: 800 }}\n                      />\n                    </>\n                  }\n                  titleTypographyProps={{ variant: \"h6\", fontWeight: 800 }}\n                  action={\n                    <EditButton\n                      onClick={() =>\n                        redirect(\"edit\", \"property_sellers\", data[record].id)\n                      }\n                    />\n                  }\n                />\n                <CardContent sx={{ pt: 0 }}>\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}> User Name:&nbsp;</span>\n                    <ReferenceField source=\"user_id\" reference=\"users\">\n                      <TextField source=\"full_name\" />\n                    </ReferenceField>\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Property Title:&nbsp;\n                    </span>\n                    <ReferenceField source=\"property_id\" reference=\"properties\">\n                      <TextField source=\"property_title\" />\n                    </ReferenceField>\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>Seller Name:&nbsp;</span>\n                    <TextField\n                      source=\"seller_name\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}> Address:&nbsp; </span>\n                    <TextField\n                      source=\"address\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Title Company Closer:&nbsp;\n                    </span>\n                    <TextField\n                      source=\"title_company_closer\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Amount Of Contract:&nbsp;\n                    </span>\n                    <NumberField source=\"amount_of_contract\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Is Earnest Money Received:&nbsp;\n                    </span>\n                    <BooleanField source=\"is_earnest_money_received\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Earnest Money Received Date:&nbsp;\n                    </span>\n                    <DateField source=\"earnest_money_received_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Is Contract To Lender:&nbsp;\n                    </span>\n                    <BooleanField source=\"is_contract_to_lender\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Contract To Lender Date:&nbsp;\n                    </span>\n                    <DateField source=\"contract_to_lender_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Is Home Warranty:&nbsp;\n                    </span>\n                    <BooleanField source=\"is_home_warranty\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Home Warranty Date:&nbsp;\n                    </span>\n                    <DateField source=\"home_warranty_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Is Survey Received:&nbsp;\n                    </span>\n                    <BooleanField source=\"is_survey_received\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Is New Survey:&nbsp;\n                    </span>\n                    <BooleanField source=\"is_new_survey\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      New Survey Info:&nbsp;\n                    </span>\n                    <TextField\n                      source=\"new_survey_info\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Home Inspection Date:&nbsp;\n                    </span>\n                    <DateField source=\"home_inspection_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Home Inspection Info:&nbsp;\n                    </span>\n                    <TextField\n                      source=\"home_inspection_info\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Termite Inspection Date:&nbsp;\n                    </span>\n                    <DateField source=\"termite_inspection_date\" />\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Termite Inspection Info:&nbsp;\n                    </span>\n                    <TextField\n                      source=\"termite_inspection_info\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Appraisal Date:&nbsp;\n                    </span>\n                    <DateField source=\"appraisal_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Appraisal Due Date:&nbsp;\n                    </span>\n                    <DateField source=\"appraisal_due_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Appraisal Additional Info:&nbsp;\n                    </span>\n                    <TextField\n                      source=\"appraisal_additional_info\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>Is Cda Sent:&nbsp;</span>\n                    <BooleanField source=\"is_cda_sent\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Is Switch Over Utilities:&nbsp;\n                    </span>\n                    <BooleanField source=\"is_switch_over_utilities\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Option Period End Date:&nbsp;\n                    </span>\n                    <DateField source=\"option_period_end_date\" />\n                  </Typography>\n\n                  <Typography variant=\"body2\" gutterBottom>\n                    <span style={{ fontWeight: 800 }}>\n                      Additional Info Entire:&nbsp;\n                    </span>\n                    <TextField\n                      source=\"additional_info_entire\"\n                      className={classes.descriptionText}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </RecordContextProvider>\n          );\n        })}\n    </Box>\n  );\n};\n\nPropertySellersMobileGrid.defaultProps = {\n  data: {},\n  ids: [],\n};\n\nexport default PropertySellersMobileGrid;\n","import {\n  TextField,\n  List,\n  Datagrid,\n  ReferenceField,\n  NumberField,\n  DateField,\n  Filter,\n  SearchInput,\n  DeleteButton,\n  FunctionField,\n  SimpleList,\n  EditButton,\n  BooleanField,\n  useNotify,\n} from \"react-admin\";\nimport BulkDeleteButton from \"../components/Buttons/BulkDeleteButton\";\nimport ImageAvatar from \"../components/ImageAvatar\";\nimport PropTypes from \"prop-types\";\nimport MarkAsBlocked from \"../components/Buttons/MarkAsBlocked\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropertySellersMobileGrid from \"./PropertySellersMobileGrid\";\n\nconst useStyles = makeStyles((theme) => ({\n  descriptionText: {\n    display: \"block\",\n    width: 250,\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n  },\n}));\n\nconst PropertyList = (props) => {\n  const classes = useStyles();\n  const notify = useNotify();\n  let isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n  return (\n    <List {...props}>\n      {isSmall ? (\n        <PropertySellersMobileGrid />\n      ) : (\n        <>\n          <Datagrid rowClick=\"show\" className=\"listWrap\">\n            <TextField source=\"id\" />\n            <ReferenceField source=\"user_id\" reference=\"users\">\n              <TextField source=\"full_name\" />\n            </ReferenceField>\n            <ReferenceField source=\"property_id\" reference=\"properties\">\n              <TextField source=\"property_title\" />\n            </ReferenceField>\n\n            <TextField\n              label=\"SellerName\"\n              source=\"seller_name\"\n              className={classes.descriptionText}\n            />\n            <TextField\n              label=\"Address\"\n              source=\"address\"\n              className={classes.descriptionText}\n            />\n            <TextField\n              label=\"TitleCompanyCloser\"\n              source=\"title_company_closer\"\n              className={classes.descriptionText}\n            />\n            <NumberField label=\"AmountOfContract\" source=\"amount_of_contract\" />\n            <BooleanField\n              label=\"IsEarnestMoneyReceived\"\n              source=\"is_earnest_money_received\"\n            />\n            <DateField\n              label=\"EarnestMoneyReceivedDate\"\n              source=\"earnest_money_received_date\"\n            />\n            <BooleanField\n              label=\"IsContractToLender\"\n              source=\"is_contract_to_lender\"\n            />\n            <DateField\n              label=\"ContractToLenderDate\"\n              source=\"contract_to_lender_date\"\n            />\n            <BooleanField label=\"IsHomeWarranty\" source=\"is_home_warranty\" />\n            <DateField label=\"HomeWarrantyDate\" source=\"home_warranty_date\" />\n            <BooleanField\n              label=\"IsSurveyReceived\"\n              source=\"is_survey_received\"\n            />\n            <BooleanField label=\"IsNewSurvey\" source=\"is_new_survey\" />\n            {/* <DateField label=\"SurveyDueDate\" source=\"survey_due_date\" /> */}\n            <TextField\n              label=\"NewSurveyInfo\"\n              source=\"new_survey_info\"\n              className={classes.descriptionText}\n            />\n            <DateField\n              label=\"HomeInspectionDate\"\n              source=\"home_inspection_date\"\n            />\n            <TextField\n              label=\"HomeInspectionInfo\"\n              source=\"home_inspection_info\"\n              className={classes.descriptionText}\n            />\n            <DateField\n              label=\"TermiteInspectionDate\"\n              source=\"termite_inspection_date\"\n            />\n            <TextField\n              label=\"TermiteInspectionInfo\"\n              source=\"termite_inspection_info\"\n              className={classes.descriptionText}\n            />\n            <DateField label=\"AppraisalDate\" source=\"appraisal_date\" />\n            <DateField label=\"AppraisalDueDate\" source=\"appraisal_due_date\" />\n            <TextField\n              label=\"AppraisalAdditionalInfo\"\n              source=\"appraisal_additional_info\"\n              className={classes.descriptionText}\n            />\n            <BooleanField label=\"IsCdaSent\" source=\"is_cda_sent\" />\n            <BooleanField\n              label=\"IsSwitchOverUtilities\"\n              source=\"is_switch_over_utilities\"\n            />\n            <DateField\n              label=\"OptionPeriodEndDate\"\n              source=\"option_period_end_date\"\n            />\n            {/* <DateField label=\"TitleCommitmentDate\" source=\"title_commit_to_be_rec_date\" /> */}\n            <TextField\n              label=\"AdditionalInfoEntire\"\n              source=\"additional_info_entire\"\n              className={classes.descriptionText}\n            />\n            <EditButton\n              onSuccess={() => {\n                notify(`Seller Updated`);\n              }}\n              onError={() => {\n                notify(`Unable to Update`);\n              }}\n            />\n            <DeleteButton\n              undoable={false}\n              onSuccess={() => {\n                notify(`Seller Deleted`);\n              }}\n              onError={() => {\n                notify(`Unable to Delete`);\n              }}\n            />\n          </Datagrid>\n        </>\n      )}\n    </List>\n  );\n};\n\nexport default PropertyList;\n","import {\n  Create,\n  SimpleForm,\n  TextInput,\n  required,\n  NumberInput,\n  email,\n  minLength,\n  PasswordInput,\n  ReferenceInput,\n  AutocompleteInput,\n  DateInput,\n  SelectInput\n} from 'react-admin';\n\nconst validateName = [required('Name is required')];\nconst validateEmail = [required('Email is required'), email('Incorrect Email')];\nconst validatePassword = [required('Password is required'), minLength(6)];\n\nconst UserCreate = (props) => (\n  <Create {...props} successMessage=\"Seller created successfully\">\n  <SimpleForm>\n            <ReferenceInput source=\"property_id\" reference=\"properties\"><SelectInput optionText=\"property_title\" /></ReferenceInput>        \n            <TextInput inputProps={{ maxLength: 50 }} multiline={true} source=\"seller_name\" />\n            <TextInput inputProps={{ maxLength: 50 }} multiline={true} source=\"address\" />\n            <TextInput inputProps={{ maxLength: 50 }} multiline={true} source=\"title_company_closer\" />\n            <NumberInput source=\"amount_of_contract\" />\n            <SelectInput source=\"is_earnest_money_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"earnest_money_received_date\" />\n            \n            <SelectInput source=\"is_contract_to_lender\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n             <DateInput source=\"contract_to_lender_date\" />\n           \n            <SelectInput source=\"is_home_warranty\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"home_warranty_date\" />\n            \n            <SelectInput source=\"is_survey_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n           \n            <SelectInput source=\"is_new_survey\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            \n            <DateInput source=\"survey_due_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"new_survey_info\" />\n            \n            <SelectInput source=\"is_cda_sent\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n\n            <SelectInput source=\"is_switch_over_utilities\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            \n            <DateInput source=\"home_inspection_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"home_inspection_info\" />\n            <DateInput source=\"termite_inspection_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"termite_inspection_info\" />\n            <DateInput source=\"appraisal_date\" />\n            <DateInput source=\"appraisal_due_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"appraisal_additional_info\" />\n            \n            <DateInput source=\"option_period_end_date\" />\n            <DateInput source=\"title_commit_to_be_rec_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"additional_info_entire\" />\n                    \n        </SimpleForm>\n  </Create>\n);\n\nexport default UserCreate;\n","import {\n  Edit,\n  SimpleForm,\n  TextInput,\n  required,\n  TopToolbar,\n  ListButton,\n  NumberInput,\n  DateInput,\n  ReferenceInput,\n  SelectInput\n} from 'react-admin';\nimport PropTypes from 'prop-types';\nconst UserShowActions = ({ basePath }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Go Back to List\" />\n  </TopToolbar>\n);\n  \nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\n  \n  const UserEdit = (props) => (\n    <Edit {...props} undoable={false}  actions={<UserShowActions/>} successMessage=\"Seller updated successfully\">\n\n<SimpleForm>\n            <TextInput source=\"id\" />\n            <ReferenceInput source=\"property_id\" reference=\"properties\"><SelectInput optionText=\"property_title\" /></ReferenceInput>        \n            <TextInput inputProps={{ maxLength: 50 }} multiline={true} source=\"seller_name\" />\n            <TextInput inputProps={{ maxLength: 50 }} multiline={true} source=\"address\" />\n            <TextInput inputProps={{ maxLength: 50 }} multiline={true} source=\"title_company_closer\" />\n            <NumberInput inputProps={{ maxLength: 20 }} source=\"amount_of_contract\" />\n            <SelectInput source=\"is_earnest_money_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n             <DateInput source=\"earnest_money_received_date\" />\n\n             <SelectInput source=\"is_contract_to_lender\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"contract_to_lender_date\" />\n           \n            <SelectInput source=\"is_home_warranty\" label=\"Is Home Warranty\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n             <DateInput source=\"home_warranty_date\" label=\"Home Warranty Date\"/>\n             \n             <SelectInput source=\"is_survey_received\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <SelectInput source=\"is_new_survey\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            \n            <SelectInput source=\"is_cda_sent\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n\n            <SelectInput source=\"is_switch_over_utilities\" choices={[\n            { id: '0', name: 'no' },\n            { id: '1', name: 'yes' },\n            ]} />\n            <DateInput source=\"survey_due_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"new_survey_info\" />\n            \n              \n            <DateInput source=\"home_inspection_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"home_inspection_info\" />\n            <DateInput source=\"termite_inspection_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"termite_inspection_info\" />\n            <DateInput source=\"appraisal_date\" />\n            <DateInput source=\"appraisal_due_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"appraisal_additional_info\" />\n           \n           \n            \n            \n            <DateInput source=\"option_period_end_date\" />\n            <DateInput source=\"title_commit_to_be_rec_date\" />\n            <TextInput inputProps={{ maxLength: 200 }} multiline={true} source=\"additional_info_entire\" />\n           \n        </SimpleForm>\n    </Edit>\n  );\n  \n  UserShowActions.propTypes = {\n    basePath: PropTypes.string\n  };\n\n  UserEdit.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n\n  UserTitle.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n  \n  export default UserEdit;\n  ","import {useCallback} from 'react';\nimport {\n  Show,\n  TextField,\n  ShowController,\n  TabbedShowLayout,\n  Tab,\n  Datagrid,\n  ArrayField,\n  ImageField,\n  ListButton,\n  TopToolbar,\n  DateField,\n  TextInput,\n  SimpleShowLayout,\n  ReferenceField,\n  NumberField,\n  BooleanField\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageAvatar from '../components/ImageAvatar';\nimport PropTypes, { element } from 'prop-types';\nimport ResponsiveGallery from 'react-responsive-gallery';\n//import moment from 'moment';\nimport moment from 'moment-timezone';\nimport _ from 'lodash';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nmoment.tz.setDefault('UTC/Etc');\n\nlet offset = new Date().getTimezoneOffset();\n\nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\nconst ShowUser = (props) => {\n  console.log({props})\n  return (    \n    \n    <Show {...props}>\n   <SimpleShowLayout className={\"textWrapperStyle\"}>\n            <TextField source=\"id\" />\n            <ReferenceField source=\"user_id\" reference=\"users\"><TextField source=\"full_name\" /></ReferenceField>\n            <ReferenceField source=\"property_id\" reference=\"properties\"><TextField source=\"property_title\" /></ReferenceField>\n       \n            <TextField source=\"seller_name\" />\n            <DateField source=\"address\" />\n            <TextField source=\"title_company_closer\" />\n            <NumberField source=\"amount_of_contract\" />\n            <BooleanField source=\"is_earnest_money_received\" />\n            <DateField source=\"earnest_money_received_date\" />\n            <DateField source=\"home_inspection_date\" />\n            <TextField source=\"home_inspection_info\" />\n            <DateField source=\"termite_inspection_date\" />\n            <TextField source=\"termite_inspection_info\" />\n            <BooleanField source=\"is_survey_received\" />\n            <BooleanField source=\"is_new_survey\" />\n            <DateField source=\"survey_due_date\" />\n            <TextField source=\"new_survey_info\" />\n            <DateField source=\"appraisal_date\" />\n            <DateField source=\"appraisal_due_date\" />\n            <TextField source=\"appraisal_additional_info\" />\n            <BooleanField source=\"is_cda_sent\" />\n            <BooleanField source=\"is_switch_over_utilities\" />\n            <BooleanField source=\"is_contract_to_lender\" />\n            <BooleanField source=\"is_home_warranty\" />\n            <DateField source=\"contract_to_lender_date\" />\n            <DateField source=\"option_period_end_date\" />\n            <DateField source=\"title_commit_to_be_rec_date\" />\n            <TextField source=\"additional_info_entire\" />\n            <DateField source=\"home_warranty_date\" />\n            \n        </SimpleShowLayout>\n</Show>\n     \n    \n  );\n};\n\nexport default ShowUser;\n","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\n//import ShowProperty from './ShowProperty';\nimport PropertyList from './PropertySellerList';\nimport { ListGuesser,EditGuesser,ShowGuesser } from 'react-admin';\nimport PropertyCreate from './PropertySellerCreate';\nimport PropertyEdit from './PropertySellerEdit';\nimport PropertyShow from './PropertySellerShow';\nimport SellIcon from '@mui/icons-material/Sell';\n\nconst resource = {\n  list: PropertyList,\n   show: PropertyShow,\n   icon: SellIcon,\n   create: PropertyCreate,\n   edit: PropertyEdit\n};\n\nexport default resource;\n","import {\n  TextField,\n  List,\n  Datagrid,\n  Filter,\n  SearchInput,\n  \n  DeleteButton,\n  FunctionField,\n  SimpleList,\n  DateField,\n  ReferenceField,\n  EditButton\n} from \"react-admin\";\nimport BulkDeleteButton from \"../components/Buttons/BulkDeleteButton\";\nimport ImageAvatar from \"../components/ImageAvatar\";\nimport PropTypes from \"prop-types\";\nimport MarkAsBlocked from \"../components/Buttons/MarkAsBlocked\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\n// const UserFilter = (props) => {\n//   return (\n//     <Filter {...props}>\n//       <SearchInput source=\"q\" alwaysOn />\n//     </Filter>\n//   );\n// };\n\nconst UserEmailUsername = (props) => {\n  return props.record && props.record.parentId ? (\n    <TextField source=\"username\" label={props.label} />\n  ) : (\n    <TextField source=\"email\" label={props.label} />\n  );\n};\n\nconst CreatedDate = (props) => {\n  return props.record && props.record.createdAt ? (\n    <FunctionField\n      render={() => new Date(props.record.createdAt).toDateString()}\n      label={props.label}\n    />\n  ) : (\n    \"\"\n  );\n};\n\nconst UsersList = (props) => {\n  // const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  let isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n  return (\n    <List\n      {...props}\n     /*  filters={<UserFilter />} */\n      bulkActionButtons={<BulkDeleteButton resourceName=\"users\" />}\n      sort={{ field: \"created_at\", order: \"DESC\" }}\n      hasShow={true}\n    >\n      {isSmall ? (\n        <SimpleList\n          // leftAvatar={<ImageAvatar />}\n          primaryText={<TextField source=\"name\" />}\n          secondaryText={\n            <UserEmailUsername label=\"Email / Username\" sortBy=\"email\" />\n          }\n          // tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\n          // linkType={record => record.canEdit ? \"edit\" : \"show\"}\n          // rowStyle={record => ({ backgroundColor: record.nb_views >= 500 ? '#efe' : 'white' })}\n        />\n      ) : (\n        <>\n          <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <ReferenceField source=\"property_id\" reference=\"properties\"><TextField source=\"property_title\" /></ReferenceField>\n    \n            <TextField source=\"description\" />\n            <DateField source=\"created_at\" />\n            <EditButton />\n            <DeleteButton undoable={false}/>\n       \n            </Datagrid>\n          <Datagrid optimized rowClick=\"edit\">content</Datagrid>\n          \n        </>\n      )}\n    </List>\n  );\n};\n\nUsersList.propTypes = {\n  record: PropTypes.object,\n  label: PropTypes.string,\n};\n\nUserEmailUsername.propTypes = {\n  record: PropTypes.object,\n  label: PropTypes.string,\n};\n\nCreatedDate.propTypes = {\n  record: PropTypes.object,\n  label: PropTypes.string,\n};\n\nexport default UsersList;\n","import {\n  Create,\n  SimpleForm,\n  TextInput,\n  required,\n  NumberInput,\n  email,\n  minLength,\n  PasswordInput,\n  ReferenceInput,\n  AutocompleteInput,\n  TextField,\n  SelectInput\n} from 'react-admin';\nconst validateName = [required('Name is required')];\nconst validateEmail = [required('Email is required'), email('Incorrect Email')];\nconst validatePassword = [required('Password is required'), minLength(6)];\n\nconst NoteCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n            <ReferenceInput source=\"property_id\" reference=\"properties\"><SelectInput optionText=\"property_title\" /></ReferenceInput>\n        \n            <TextInput fullWidth source=\"description\" />\n       \n    </SimpleForm>\n  </Create>\n);\n\nexport default NoteCreate;\n","import {\n  Edit,\n  SimpleForm,\n  TextInput,\n  required,\n  TopToolbar,\n  ListButton,\n  DateTimeInput,\n  DateInput,\n  ReferenceInput,\n  SelectInput\n} from 'react-admin';\nimport PropTypes from 'prop-types';\nimport DateFnsUtils from '@date-io/date-fns';\n//import { TimeInput } from \"react-admin-date-inputs2\";\nconst UserShowActions = ({ basePath }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Go Back to List\" />\n  </TopToolbar>\n);\n  \nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\n  \n  const UserEdit = (props) => (\n    <Edit {...props} undoable={false}   actions={<UserShowActions/>}>\n\n      <SimpleForm>\n      <TextInput disabled source=\"id\" />\n            <ReferenceInput source=\"property_id\" reference=\"properties\"><SelectInput optionText=\"property_title\" /></ReferenceInput>\n        \n            <TextInput fullWidth source=\"description\" />\n            \n        {/* <TextInput source=\"users\" validate={[required()]} /> */}\n      </SimpleForm>\n    </Edit>\n  );\n  \n  UserShowActions.propTypes = {\n    basePath: PropTypes.string\n  };\n\n  UserEdit.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n\n  UserTitle.propTypes = {\n    record: PropTypes.object,\n    label: PropTypes.string,\n  };\n  \n  export default UserEdit;\n  ","import {useCallback} from 'react';\nimport {\n  Show,\n  TextField,\n  ShowController,\n  TabbedShowLayout,\n  Tab,\n  Datagrid,\n  ArrayField,\n  ImageField,\n  ListButton,\n  TopToolbar,\n  DateField,\n  TextInput,\n  SimpleShowLayout\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageAvatar from '../components/ImageAvatar';\nimport PropTypes, { element } from 'prop-types';\nimport ResponsiveGallery from 'react-responsive-gallery';\n//import moment from 'moment';\nimport moment from 'moment-timezone';\nimport _ from 'lodash';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nmoment.tz.setDefault('UTC/Etc');\n\nlet offset = new Date().getTimezoneOffset();\n\nconst UserTitle = ({ record }) => {\n  return record && record.name && (\n    <span>{record.name}</span>\n  );\n};\nconst ShowNotes = (props) => {\n  console.log({props})\n  return (    \n    \n        <Show\n          {...props}\n                      \n        >\n\n                 <SimpleShowLayout>\n\n             <TextField label=\"Notes Description\" source=\"description\" />\n            <TextField label=\"Property Name\" source=\"propety_id\" />\n              </SimpleShowLayout>\n\n                 \n        </Show>\n     \n    \n  );\n};\n\nexport default ShowNotes;\n","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport NotesList from './NotesList';\nimport NotesCreate from './NotesCreate';\nimport { ListGuesser,ShowGuesser } from 'react-admin';\n\nimport NotesEdit from './NotesEdit';\nimport ShowNotes from './ShowNotes';\n\nconst resource = {\n  list: NotesList,\n  show: ShowNotes,\n  icon: AccountCircleIcon,\n  create: NotesCreate,\n  edit: NotesEdit\n};\n\nexport default resource;\n","import ExpandMore from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(theme => ({\n  icon: { minWidth: theme.spacing(5) },\n  sidebarIsOpen: {\n    '& a': {\n      paddingLeft: theme.spacing(4),\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms'\n    }\n  },\n  sidebarIsClosed: {\n    '& a': {\n      paddingLeft: theme.spacing(2),\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms'\n    }\n  }\n}));\n\nconst SubMenu = ({\n  handleToggle,\n  sidebarIsOpen,\n  isOpen,\n  name,\n  icon,\n  children,\n  dense\n}) => {\n  const classes = useStyles();\n\n  const header = (\n    <MenuItem dense={dense} button onClick={handleToggle}>\n      <ListItemIcon className={classes.icon}>\n        {isOpen ? <ExpandMore /> : icon}\n      </ListItemIcon>\n      <Typography variant=\"inherit\" color=\"textSecondary\">\n        {name}\n      </Typography>\n    </MenuItem>\n  );\n\n  return (\n    <Fragment>\n      {sidebarIsOpen || isOpen\n              ? (\n                  header\n                )\n              : (\n                <Tooltip title={name} placement=\"right\">\n                  {header}\n                </Tooltip>\n                )}\n      <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n        <List\n          dense={dense}\n          component=\"div\"\n          disablePadding\n          className={sidebarIsOpen ? classes.sidebarIsOpen : classes.sidebarIsClosed}\n        >\n          {children}\n        </List>\n      </Collapse>\n    </Fragment>\n  );\n};\n\nSubMenu.propTypes = {\n  handleToggle: PropTypes.any,\n  sidebarIsOpen: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  name: PropTypes.string,\n  icon: PropTypes.object,\n  children: PropTypes.any,\n  dense: PropTypes.bool\n};\n\nexport default SubMenu;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useMediaQuery, Box } from '@material-ui/core';\nimport { MenuItemLink } from 'react-admin';\nimport SubMenu from './SubMenu';\n\nimport PropTypes from 'prop-types';\n\nimport Users from '../Users';\nimport Properties from '../Properties';\nimport PropertySeller from '../PropertySellers';\nimport PropertyBuyer from '../PropertyBuyers';\n\nconst Menu = ({ onMenuClick, logout, dense = false }) => {\n  const [state, setState] = useState({\n    menuUsers: false,\n    menuProperties: false,\n\n  });\n  const isXSmall = useMediaQuery((theme) => theme.breakpoints.down('xs'));\n  const open = useSelector((state) => state.admin.ui.sidebarOpen);\n  useSelector((state) => state.theme); // force rerender on theme change\n\n  const handleToggle = (menu) => {\n    setState((state) => ({ ...state, [menu]: !state[menu] }));\n  };\n\n  return (\n    <Box mt={1}>\n\n      {/* {* users menu *} */}\n      <SubMenu\n        handleToggle={() => handleToggle('menuUsers')}\n        isOpen={state.menuUsers}\n        sidebarIsOpen={open}\n        name=\"Users\"\n        icon={<Users.icon />}\n        dense={dense}\n      >\n        <MenuItemLink\n          to={'/users'}\n          primaryText={'List'}\n          leftIcon={<Users.icon />}\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n          dense={dense}\n        />\n      </SubMenu>\n      <SubMenu\n        handleToggle={() => handleToggle('menuProperties')}\n        isOpen={state.menuProperties}\n        sidebarIsOpen={open}\n        name=\"Properties\"\n        icon={<Properties.icon />}\n        dense={dense}\n      >\n        <MenuItemLink\n          to={'/properties'}\n          primaryText={'List'}\n          leftIcon={<Properties.icon />}\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n          dense={dense}\n        />\n      </SubMenu>\n      {/* <SubMenu\n        handleToggle={() => handleToggle('menuPropertyTypes')}\n        isOpen={state.menuPropertyTypes}\n        sidebarIsOpen={open}\n        name=\"PropertyTypes\"\n        icon={<Users.icon />}\n        dense={dense}\n      >\n        <MenuItemLink\n          to={'/property_types'}\n          primaryText={'List'}\n          leftIcon={<Users.icon />}\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n          dense={dense}\n        />\n      </SubMenu> */}\n      <SubMenu\n        handleToggle={() => handleToggle('menuPropertyBuyers')}\n        isOpen={state.menuPropertyBuyers}\n        sidebarIsOpen={open}\n        name=\"PropertyBuyers\"\n        icon={<PropertyBuyer.icon />}\n        dense={dense}\n      >\n        <MenuItemLink\n          to={'/property_buyers'}\n          primaryText={'List'}\n          leftIcon={<PropertyBuyer.icon />}\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n          dense={dense}\n        />\n      </SubMenu>\n      <SubMenu\n        handleToggle={() => handleToggle('menuPropertySellers')}\n        isOpen={state.menuPropertySellers}\n        sidebarIsOpen={open}\n        name=\"PropertySellers\"\n        icon={<PropertySeller.icon />}\n        dense={dense}\n      >\n        <MenuItemLink\n          to={'/property_sellers'}\n          primaryText={'List'}\n          leftIcon={<PropertySeller.icon />}\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n          dense={dense}\n        />\n      </SubMenu>\n      {/* <SubMenu\n        handleToggle={() => handleToggle('menuNotes')}\n        isOpen={state.menuNotes}\n        sidebarIsOpen={open}\n        name=\"Notes\"\n        icon={<PropertySeller.icon />}\n        dense={dense}\n      >\n        <MenuItemLink\n          to={'/notes'}\n          primaryText={'List'}\n          leftIcon={<PropertySeller.icon />}\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n          dense={dense}\n        />\n      </SubMenu> */}\n\n      {logout}\n    </Box>\n  );\n};\n\nMenu.propTypes = {\n  onMenuClick: PropTypes.func,\n  logout: PropTypes.any,\n  dense: PropTypes.bool\n};\n\nexport default Menu;\n","export default __webpack_public_path__ + \"static/media/logo.e3aa2c21.svg\";","import { AppBar } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport logo from '../assets/logo.svg';\n\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  },\n  spacer: {\n    flex: 1\n  },\n  imageStyle: {\n    height: 55,\n    width: 200\n  },\n  header: {\n    background: '#f7f7f7',\n    color: '#072d40',\n    boxShadow: '0px 2px 10px 2px rgb(0 0 0 / 10%)',\n  }\n});\n\nconst CustomAppBar = (props) => {\n  const classes = useStyles();\n  return (\n    <AppBar\n      {...props}\n      elevation={1}\n      className={classes.header}\n    >\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n      <img src={logo} alt=\"Logo\" className={classes.imageStyle} />\n\n      <span className={classes.spacer} />\n    </AppBar>\n  );\n};\n\nexport default CustomAppBar;\n","import { Layout, Sidebar } from 'react-admin';\nimport Menu from './Menu';\nimport AppBar from './AppBar';\n\nconst CustomSidebar = (props) => <Sidebar {...props} size={200} />;\n\nconst layout = (props) => {\n  return (\n    <Layout {...props} sidebar={CustomSidebar} menu={Menu} appBar={AppBar} />\n  );\n};\nexport default layout;\n","import { Admin, Resource, defaultTheme } from 'react-admin';\n\nimport { createHashHistory } from 'history';\nimport customDataProvider from './providers/customDataProvider';\nimport authProvider from './providers/authProvider';\nimport Users from './Users';\nimport Properties from './Properties';\nimport PropertyTypes from './PropertyTypes';\nimport PropertyBuyers from './PropertyBuyers';\nimport PropertySellers from './PropertySellers';\nimport Notes from './Notes';\n\nimport { Layout } from './layout';\n\nconst history = createHashHistory();\n\n// const theme = {\n//   ...defaultTheme,\n//   palette: {\n//       type: 'dark', // Switching the dark mode on is a single property value change.\n//   },\n// };\nconst App = () => (\n  <Admin\n  \n    dataProvider={customDataProvider}\n    authProvider={authProvider}\n    history={history}\n    layout={Layout}\n  >\n    <Resource name=\"users\" {...Users} />\n    <Resource name=\"properties\" {...Properties} />\n    <Resource name=\"property_types\" {...PropertyTypes} />\n    <Resource name=\"property_buyers\" {...PropertyBuyers} />\n    <Resource name=\"property_sellers\" {...PropertySellers} />\n    {/* <Resource name=\"notes\" {...Notes} /> */}\n  </Admin>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}